{
	"id": "a8c45bfcd7567a8120992b0a989e82bc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Reserve.sol": {
				"content": "// SPDX-License-Identifier: GNU GPLv3\r\n\r\npragma solidity 0.8.19;\r\n\r\nimport \"./libraries/DataFetcher.sol\";\r\nimport \"./libraries/SafeETH.sol\";\r\n\r\nimport \"./utils/AccessControl.sol\";\r\n\r\ncontract Reserve is AccessControl {\r\n\r\n    /* ========== STATE VARIABLES ========== */\r\n\r\n    bytes32 public constant CALLER_ROLE = keccak256(abi.encodePacked(\"Caller\"));\r\n\r\n    // TODO replace\r\n    /// @notice The address of the Wrapped BNB token.\r\n    address public   WBNB ;\r\n\r\n    // TODO replace\r\n    /// @notice The address of the relevant stable token.\r\n    address public   USDT ;\r\n\r\n    /// @dev Initialization variables.\r\n    address private immutable _initializer;\r\n    bool private _isInitialized;\r\n    address public factory;\r\n\r\n    /* ========== EVENTS ========== */\r\n\r\n    event In(address caller, uint256 amountBNB, uint256 totalReserveBNB, uint256 totalReserve);\r\n    event Out(address caller, uint256 amountBNB, uint256 totalReserveBNB, uint256 totalReserve);\r\n\r\n    /* ========== CONSTRUCTOR ========== */\r\n\r\n    constructor() {\r\n        _initializer = _msgSender();\r\n    }\r\n\r\n    /* ========== INITIALIZE ========== */\r\n\r\n    /**\r\n     * @notice Initializes external dependencies and state variables.\r\n     * @dev This function can only be called once.\r\n     * @param control_ The address of the `Control` contract.\r\n     */\r\n    function initialize(address factory_,address control_, address USDT_, address WBNB_) external {\r\n        require(_msgSender() == _initializer, \"Reserve: caller is not the initializer\");\r\n        // TODO uncomment\r\n        // require(!_isInitialized, \"Reserve: already initialized\");\r\n\r\n        require(control_ != address(0), \"Reserve: invalid Control address\");\r\n        _grantRole(CALLER_ROLE, control_);\r\n        // TODO future proofing needed?\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n        factory=factory_;\r\n        USDT= USDT_;\r\n        WBNB= WBNB_;\r\n        _isInitialized = true;\r\n    }\r\n\r\n    /* ========== FUNCTIONS ========== */\r\n\r\n    receive() external payable {\r\n        uint256 totalReserveBNB = address(this).balance;\r\n        uint256 totalReserve = DataFetcher.quote(factory,totalReserveBNB, WBNB, USDT);\r\n\r\n        emit In(_msgSender(), msg.value, totalReserveBNB, totalReserve);\r\n    }\r\n\r\n    /**\r\n     * @notice Transfers BNB stored in this contract to the sender. Caller must have the `Caller` role.\r\n     */\r\n    function withdraw(uint256 amount) external onlyRole(CALLER_ROLE) {\r\n        SafeETH.safeTransferETH(_msgSender(), amount);\r\n        uint256 totalReserveBNB = address(this).balance;\r\n        uint256 totalReserve = DataFetcher.quote(factory,totalReserveBNB, WBNB, USDT);\r\n\r\n        emit Out(_msgSender(), amount, totalReserveBNB, totalReserve);\r\n    }\r\n}"
			},
			"src/utils/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/IAccessControl.sol\";\r\nimport \"./Context.sol\";\r\nimport \"../libraries/Strings.sol\";\r\nimport \"./ERC165.sol\";\r\n\r\n/**\r\n * @dev Contract module that allows children to implement role-based access\r\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\r\n * members except through off-chain means by accessing the contract event logs. Some\r\n * applications may benefit from on-chain enumerability, for those cases see\r\n * {AccessControlEnumerable}.\r\n *\r\n * Roles are referred to by their `bytes32` identifier. These should be exposed\r\n * in the external API and be unique. The best way to achieve this is by\r\n * using `public constant` hash digests:\r\n *\r\n * ```solidity\r\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\r\n * ```\r\n *\r\n * Roles can be used to represent a set of permissions. To restrict access to a\r\n * function call, use {hasRole}:\r\n *\r\n * ```solidity\r\n * function foo() public {\r\n *     require(hasRole(MY_ROLE, msg.sender));\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Roles can be granted and revoked dynamically via the {grantRole} and\r\n * {revokeRole} functions. Each role has an associated admin role, and only\r\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\r\n *\r\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\r\n * that only accounts with this role will be able to grant or revoke other\r\n * roles. More complex role relationships can be created by using\r\n * {_setRoleAdmin}.\r\n *\r\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\r\n * grant and revoke this role. Extra precautions should be taken to secure\r\n * accounts that have been granted it.\r\n */\r\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\r\n    struct RoleData {\r\n        mapping(address => bool) members;\r\n        bytes32 adminRole;\r\n    }\r\n\r\n    mapping(bytes32 => RoleData) private _roles;\r\n\r\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\r\n\r\n    /**\r\n     * @dev Modifier that checks that an account has a specific role. Reverts\r\n     * with a standardized message including the required role.\r\n     *\r\n     * The format of the revert reason is given by the following regular expression:\r\n     *\r\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\r\n     *\r\n     * _Available since v4.1._\r\n     */\r\n    modifier onlyRole(bytes32 role) {\r\n        _checkRole(role);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\r\n        return _roles[role].members[account];\r\n    }\r\n\r\n    /**\r\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\r\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\r\n     *\r\n     * Format of the revert message is described in {_checkRole}.\r\n     *\r\n     * _Available since v4.6._\r\n     */\r\n    function _checkRole(bytes32 role) internal view virtual {\r\n        _checkRole(role, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Revert with a standard message if `account` is missing `role`.\r\n     *\r\n     * The format of the revert reason is given by the following regular expression:\r\n     *\r\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\r\n     */\r\n    function _checkRole(bytes32 role, address account) internal view virtual {\r\n        if (!hasRole(role, account)) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        \"AccessControl: account \",\r\n                        Strings.toHexString(account),\r\n                        \" is missing role \",\r\n                        Strings.toHexString(uint256(role), 32)\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\r\n        return _roles[role].adminRole;\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     */\r\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function renounceRole(bytes32 role, address account) public virtual override {\r\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\r\n\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event. Note that unlike {grantRole}, this function doesn't perform any\r\n     * checks on the calling account.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     *\r\n     * [WARNING]\r\n     * ====\r\n     * This function should only be called from the constructor when setting\r\n     * up the initial roles for the system.\r\n     *\r\n     * Using this function in any other way is effectively circumventing the admin\r\n     * system imposed by {AccessControl}.\r\n     * ====\r\n     *\r\n     * NOTE: This function is deprecated in favor of {_grantRole}.\r\n     */\r\n    function _setupRole(bytes32 role, address account) internal virtual {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `adminRole` as ``role``'s admin role.\r\n     *\r\n     * Emits a {RoleAdminChanged} event.\r\n     */\r\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\r\n        bytes32 previousAdminRole = getRoleAdmin(role);\r\n        _roles[role].adminRole = adminRole;\r\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * Internal function without access restriction.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     */\r\n    function _grantRole(bytes32 role, address account) internal virtual {\r\n        if (!hasRole(role, account)) {\r\n            _roles[role].members[account] = true;\r\n            emit RoleGranted(role, account, _msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * Internal function without access restriction.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function _revokeRole(bytes32 role, address account) internal virtual {\r\n        if (hasRole(role, account)) {\r\n            _roles[role].members[account] = false;\r\n            emit RoleRevoked(role, account, _msgSender());\r\n        }\r\n    }\r\n}"
			},
			"src/libraries/SafeETH.sol": {
				"content": "// SPDX-License-Identifier: GNU GPLv3\r\n\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeETH {\r\n    function safeTransferETH(address to, uint256 value) internal {\r\n        (bool success, ) = to.call{value: value}(new bytes(0));\r\n        require(success, \"SafeETH::safeTransferETH: ETH transfer failed\");\r\n    }\r\n}"
			},
			"src/libraries/DataFetcher.sol": {
				"content": "// SPDX-License-Identifier: GNU GPLv3\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/IPancakeFactory.sol\";\r\nimport \"../interfaces/IPancakePair.sol\";\r\n\r\nlibrary DataFetcher {\r\n\r\n    // TODO replace\r\n    // address private constant pancakeFactory = 0xA4AD4f68d0b91CFD19687c881e50f3A00242828c;\r\n    // address private constant pancakeFactory = 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;\r\n\r\n    function pairFor(address pancakeFactory, address tokenA, address tokenB) internal view returns (address pair) {\r\n        return IPancakeFactory(pancakeFactory).getPair(tokenA, tokenB);\r\n    }\r\n\r\n    function getReserves(address pancakeFactory,address tokenA, address tokenB) internal view returns (uint256 reserveA, uint256 reserveB) {\r\n        address pair = pairFor(pancakeFactory,tokenA, tokenB);\r\n        address token0 = IPancakePair(pair).token0();\r\n        (uint256 reserve0, uint256 reserve1, ) = IPancakePair(pair).getReserves();\r\n        (reserveA, reserveB) = tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0);\r\n    }\r\n\r\n    function quote(address pancakeFactory,uint256 amountA, address tokenA, address tokenB) internal view returns (uint256 amountB) {\r\n        (uint256 reserveA, uint256 reserveB) = getReserves(pancakeFactory,tokenA, tokenB);\r\n        amountB = (amountA * reserveB) / reserveA;\r\n    }\r\n\r\n    function quoteBatch(address pancakeFactory,uint256[] memory amountsIn, address tokenA, address tokenB) internal view returns (uint256[] memory amountsOut) {\r\n        require(amountsIn.length >= 1, \"DataFetcher: INVALID_AMOUNTS_IN\");\r\n        (uint256 reserveA, uint256 reserveB) = getReserves(pancakeFactory,tokenA, tokenB);\r\n        amountsOut = new uint256[](amountsIn.length);\r\n\r\n        for (uint256 i = 0 ; i < amountsIn.length ; i++) {\r\n            amountsOut[i] = (amountsIn[i] * reserveB) / reserveA;\r\n        }\r\n    }\r\n\r\n    function quoteRouted(address pancakeFactory, uint256 amountIn, address[] memory path) internal view returns (uint256 amountOut) {\r\n        require(path.length >= 2, \"DataFetcher: INVALID_PATH\");\r\n        uint256[] memory amounts = new uint256[](path.length);\r\n        amounts[0] = amountIn;\r\n\r\n        for (uint256 i = 0 ; i < path.length - 1 ; i++) {\r\n            (uint256 reserveIn, uint256 reserveOut) = getReserves(pancakeFactory, path[i], path[i + 1]);\r\n            amounts[i + 1] = (amounts[i] * reserveOut) / reserveIn;\r\n        }\r\n        amountOut = amounts[path.length - 1];\r\n    }\r\n}"
			},
			"src/utils/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}"
			},
			"src/libraries/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Math.sol\";\r\nimport \"./SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\r\n    uint8 private constant _ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(int256 value) internal pure returns (string memory) {\r\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}"
			},
			"src/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			},
			"src/interfaces/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev External interface of AccessControl declared to support ERC165 detection.\r\n */\r\ninterface IAccessControl {\r\n    /**\r\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\r\n     *\r\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\r\n     * {RoleAdminChanged} not being emitted signaling this.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is granted `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call, an admin role\r\n     * bearer except when using {AccessControl-_setupRole}.\r\n     */\r\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is revoked `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call:\r\n     *   - if using `revokeRole`, it is the admin role bearer\r\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\r\n     */\r\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function grantRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function revokeRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     */\r\n    function renounceRole(bytes32 role, address account) external;\r\n}"
			},
			"src/interfaces/IPancakePair.sol": {
				"content": "// SPDX-License-Identifier: GNU GPLv3\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IPancakePair {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n    event Swap(\r\n        address indexed sender,\r\n        uint amount0In,\r\n        uint amount1In,\r\n        uint amount0Out,\r\n        uint amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n    function factory() external view returns (address);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n    function price0CumulativeLast() external view returns (uint);\r\n    function price1CumulativeLast() external view returns (uint);\r\n    function kLast() external view returns (uint);\r\n\r\n    function mint(address to) external returns (uint liquidity);\r\n    function burn(address to) external returns (uint amount0, uint amount1);\r\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n    function skim(address to) external;\r\n    function sync() external;\r\n\r\n    function initialize(address, address) external;\r\n}"
			},
			"src/interfaces/IPancakeFactory.sol": {
				"content": "// SPDX-License-Identifier: GNU GPLv3\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IPancakeFactory {\r\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n    function feeTo() external view returns (address);\r\n    function feeToSetter() external view returns (address);\r\n\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n    function allPairs(uint) external view returns (address pair);\r\n    function allPairsLength() external view returns (uint);\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n\r\n    function setFeeTo(address) external;\r\n    function setFeeToSetter(address) external;\r\n}"
			},
			"src/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}"
			},
			"src/libraries/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}"
			},
			"src/libraries/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Down, // Toward negative infinity\r\n        Up, // Toward infinity\r\n        Zero // Toward zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds up instead\r\n     * of rounding down.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\r\n     * with further edits by Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            require(denominator > prod1, \"Math: mulDiv overflow\");\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\r\n            // See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\r\n            uint256 twos = denominator & (~denominator + 1);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\r\n            // in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"src/Reserve.sol": {
				"Reserve": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountBNB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReserveBNB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReserve",
									"type": "uint256"
								}
							],
							"name": "In",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountBNB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReserveBNB",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalReserve",
									"type": "uint256"
								}
							],
							"name": "Out",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CALLER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factory_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "control_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "USDT_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "WBNB_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"initialize(address,address,address,address)": {
								"details": "This function can only be called once.",
								"params": {
									"control_": "The address of the `Control` contract."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"_initializer": {
								"details": "Initialization variables."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Reserve.sol\":183:2738  contract Reserve is AccessControl {... */\n  mstore(0x40, 0xa0)\n    /* \"src/Reserve.sol\":1015:1075  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/Reserve.sol\":1055:1067  _msgSender() */\n  tag_4\n    /* \"src/Reserve.sol\":1055:1065  _msgSender */\n  shl(0x20, tag_5)\n    /* \"src/Reserve.sol\":1055:1067  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"src/Reserve.sol\":1040:1067  _initializer = _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/Reserve.sol\":183:2738  contract Reserve is AccessControl {... */\n  jump(tag_6)\n    /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\ntag_5:\n    /* \"src/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"src/utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"src/utils/Context.sol\":729:746  return msg.sender */\n  swap1\n  pop\n    /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"src/Reserve.sol\":183:2738  contract Reserve is AccessControl {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x1572b593c53d839d80004aa4b8c51211864104f06ace9e22be9c4365b50655ea\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/Reserve.sol\":183:2738  contract Reserve is AccessControl {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8dd95002\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xc45a0155\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc54e44eb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf8c8765e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x8dd95002\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x774237fc\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"src/Reserve.sol\":2036:2059  uint256 totalReserveBNB */\n      0x00\n        /* \"src/Reserve.sol\":2062:2083  address(this).balance */\n      selfbalance\n        /* \"src/Reserve.sol\":2036:2083  uint256 totalReserveBNB = address(this).balance */\n      swap1\n      pop\n        /* \"src/Reserve.sol\":2094:2114  uint256 totalReserve */\n      0x00\n        /* \"src/Reserve.sol\":2117:2171  DataFetcher.quote(factory,totalReserveBNB, WBNB, USDT) */\n      tag_20\n        /* \"src/Reserve.sol\":2135:2142  factory */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Reserve.sol\":2143:2158  totalReserveBNB */\n      dup4\n        /* \"src/Reserve.sol\":2160:2164  WBNB */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Reserve.sol\":2166:2170  USDT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Reserve.sol\":2117:2134  DataFetcher.quote */\n      tag_21\n        /* \"src/Reserve.sol\":2117:2171  DataFetcher.quote(factory,totalReserveBNB, WBNB, USDT) */\n      jump\t// in\n    tag_20:\n        /* \"src/Reserve.sol\":2094:2171  uint256 totalReserve = DataFetcher.quote(factory,totalReserveBNB, WBNB, USDT) */\n      swap1\n      pop\n        /* \"src/Reserve.sol\":2189:2247  In(_msgSender(), msg.value, totalReserveBNB, totalReserve) */\n      0x3cadff7f9a0bf97b2f8b9629e31675770caca33d15e735652794f64acce52fa0\n        /* \"src/Reserve.sol\":2192:2204  _msgSender() */\n      tag_22\n        /* \"src/Reserve.sol\":2192:2202  _msgSender */\n      tag_23\n        /* \"src/Reserve.sol\":2192:2204  _msgSender() */\n      jump\t// in\n    tag_22:\n        /* \"src/Reserve.sol\":2206:2215  msg.value */\n      callvalue\n        /* \"src/Reserve.sol\":2217:2232  totalReserveBNB */\n      dup5\n        /* \"src/Reserve.sol\":2234:2246  totalReserve */\n      dup5\n        /* \"src/Reserve.sol\":2189:2247  In(_msgSender(), msg.value, totalReserveBNB, totalReserve) */\n      mload(0x40)\n      tag_24\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/Reserve.sol\":2025:2255  {... */\n      stop\n        /* \"src/Reserve.sol\":183:2738  contract Reserve is AccessControl {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/utils/AccessControl.sol\":2686:2890  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":4509:4640  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Reserve.sol\":2386:2735  function withdraw(uint256 amount) external onlyRole(CALLER_ROLE) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"src/utils/AccessControl.sol\":4950:5097  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"src/utils/AccessControl.sol\":6094:6312  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"src/Reserve.sol\":277:352  bytes32 public constant CALLER_ROLE = keccak256(abi.encodePacked(\"Caller\")) */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Reserve.sol\":437:458  address public   WBNB */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":2982:3129  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":2087:2136  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Reserve.sol\":698:720  address public factory */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Reserve.sol\":548:569  address public   USDT */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":5390:5539  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"src/Reserve.sol\":1333:1945  function initialize(address factory_,address control_, address USDT_, address WBNB_) external {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"src/libraries/DataFetcher.sol\":1046:1325  function quote(address pancakeFactory,uint256 amountA, address tokenA, address tokenB) internal view returns (uint256 amountB) {... */\n    tag_21:\n        /* \"src/libraries/DataFetcher.sol\":1156:1171  uint256 amountB */\n      0x00\n        /* \"src/libraries/DataFetcher.sol\":1185:1201  uint256 reserveA */\n      dup1\n        /* \"src/libraries/DataFetcher.sol\":1203:1219  uint256 reserveB */\n      0x00\n        /* \"src/libraries/DataFetcher.sol\":1223:1265  getReserves(pancakeFactory,tokenA, tokenB) */\n      tag_90\n        /* \"src/libraries/DataFetcher.sol\":1235:1249  pancakeFactory */\n      dup8\n        /* \"src/libraries/DataFetcher.sol\":1250:1256  tokenA */\n      dup7\n        /* \"src/libraries/DataFetcher.sol\":1258:1264  tokenB */\n      dup7\n        /* \"src/libraries/DataFetcher.sol\":1223:1234  getReserves */\n      tag_91\n        /* \"src/libraries/DataFetcher.sol\":1223:1265  getReserves(pancakeFactory,tokenA, tokenB) */\n      jump\t// in\n    tag_90:\n        /* \"src/libraries/DataFetcher.sol\":1184:1265  (uint256 reserveA, uint256 reserveB) = getReserves(pancakeFactory,tokenA, tokenB) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/libraries/DataFetcher.sol\":1309:1317  reserveA */\n      dup2\n        /* \"src/libraries/DataFetcher.sol\":1297:1305  reserveB */\n      dup2\n        /* \"src/libraries/DataFetcher.sol\":1287:1294  amountA */\n      dup8\n        /* \"src/libraries/DataFetcher.sol\":1287:1305  amountA * reserveB */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"src/libraries/DataFetcher.sol\":1286:1317  (amountA * reserveB) / reserveA */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"src/libraries/DataFetcher.sol\":1276:1317  amountB = (amountA * reserveB) / reserveA */\n      swap3\n      pop\n        /* \"src/libraries/DataFetcher.sol\":1173:1325  {... */\n      pop\n      pop\n        /* \"src/libraries/DataFetcher.sol\":1046:1325  function quote(address pancakeFactory,uint256 amountA, address tokenA, address tokenB) internal view returns (uint256 amountB) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n    tag_23:\n        /* \"src/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"src/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"src/utils/Context.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":2686:2890  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_30:\n        /* \"src/utils/AccessControl.sol\":2771:2775  bool */\n      0x00\n        /* \"src/utils/AccessControl.sol\":2810:2842  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"src/utils/AccessControl.sol\":2795:2842  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"src/utils/AccessControl.sol\":2795:2806  interfaceId */\n      dup3\n        /* \"src/utils/AccessControl.sol\":2795:2842  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"src/utils/AccessControl.sol\":2795:2882  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_98\n      jumpi\n      pop\n        /* \"src/utils/AccessControl.sol\":2846:2882  super.supportsInterface(interfaceId) */\n      tag_99\n        /* \"src/utils/AccessControl.sol\":2870:2881  interfaceId */\n      dup3\n        /* \"src/utils/AccessControl.sol\":2846:2869  super.supportsInterface */\n      tag_100\n        /* \"src/utils/AccessControl.sol\":2846:2882  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_99:\n        /* \"src/utils/AccessControl.sol\":2795:2882  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_98:\n        /* \"src/utils/AccessControl.sol\":2788:2882  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"src/utils/AccessControl.sol\":2686:2890  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":4509:4640  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_37:\n        /* \"src/utils/AccessControl.sol\":4583:4590  bytes32 */\n      0x00\n        /* \"src/utils/AccessControl.sol\":4610:4616  _roles */\n      dup1\n        /* \"src/utils/AccessControl.sol\":4610:4622  _roles[role] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":4617:4621  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":4610:4622  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/utils/AccessControl.sol\":4610:4632  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"src/utils/AccessControl.sol\":4603:4632  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"src/utils/AccessControl.sol\":4509:4640  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/Reserve.sol\":2386:2735  function withdraw(uint256 amount) external onlyRole(CALLER_ROLE) {... */\n    tag_44:\n        /* \"src/Reserve.sol\":325:351  abi.encodePacked(\"Caller\") */\n      add(0x20, mload(0x40))\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Reserve.sol\":315:352  keccak256(abi.encodePacked(\"Caller\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      tag_105\n        /* \"src/utils/AccessControl.sol\":2589:2593  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":2578:2588  _checkRole */\n      tag_106\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      jump\t// in\n    tag_105:\n        /* \"src/Reserve.sol\":2462:2507  SafeETH.safeTransferETH(_msgSender(), amount) */\n      tag_108\n        /* \"src/Reserve.sol\":2486:2498  _msgSender() */\n      tag_109\n        /* \"src/Reserve.sol\":2486:2496  _msgSender */\n      tag_23\n        /* \"src/Reserve.sol\":2486:2498  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"src/Reserve.sol\":2500:2506  amount */\n      dup4\n        /* \"src/Reserve.sol\":2462:2485  SafeETH.safeTransferETH */\n      tag_110\n        /* \"src/Reserve.sol\":2462:2507  SafeETH.safeTransferETH(_msgSender(), amount) */\n      jump\t// in\n    tag_108:\n        /* \"src/Reserve.sol\":2518:2541  uint256 totalReserveBNB */\n      0x00\n        /* \"src/Reserve.sol\":2544:2565  address(this).balance */\n      selfbalance\n        /* \"src/Reserve.sol\":2518:2565  uint256 totalReserveBNB = address(this).balance */\n      swap1\n      pop\n        /* \"src/Reserve.sol\":2576:2596  uint256 totalReserve */\n      0x00\n        /* \"src/Reserve.sol\":2599:2653  DataFetcher.quote(factory,totalReserveBNB, WBNB, USDT) */\n      tag_111\n        /* \"src/Reserve.sol\":2617:2624  factory */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Reserve.sol\":2625:2640  totalReserveBNB */\n      dup4\n        /* \"src/Reserve.sol\":2642:2646  WBNB */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Reserve.sol\":2648:2652  USDT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Reserve.sol\":2599:2616  DataFetcher.quote */\n      tag_21\n        /* \"src/Reserve.sol\":2599:2653  DataFetcher.quote(factory,totalReserveBNB, WBNB, USDT) */\n      jump\t// in\n    tag_111:\n        /* \"src/Reserve.sol\":2576:2653  uint256 totalReserve = DataFetcher.quote(factory,totalReserveBNB, WBNB, USDT) */\n      swap1\n      pop\n        /* \"src/Reserve.sol\":2671:2727  Out(_msgSender(), amount, totalReserveBNB, totalReserve) */\n      0xb450a08ba9d5bfbc195171a9f21f66b27de075c9788057b443dc147da398be5c\n        /* \"src/Reserve.sol\":2675:2687  _msgSender() */\n      tag_112\n        /* \"src/Reserve.sol\":2675:2685  _msgSender */\n      tag_23\n        /* \"src/Reserve.sol\":2675:2687  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"src/Reserve.sol\":2689:2695  amount */\n      dup6\n        /* \"src/Reserve.sol\":2697:2712  totalReserveBNB */\n      dup5\n        /* \"src/Reserve.sol\":2714:2726  totalReserve */\n      dup5\n        /* \"src/Reserve.sol\":2671:2727  Out(_msgSender(), amount, totalReserveBNB, totalReserve) */\n      mload(0x40)\n      tag_113\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/Reserve.sol\":2451:2735  {... */\n      pop\n      pop\n        /* \"src/Reserve.sol\":2386:2735  function withdraw(uint256 amount) external onlyRole(CALLER_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":4950:5097  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_49:\n        /* \"src/utils/AccessControl.sol\":5033:5051  getRoleAdmin(role) */\n      tag_114\n        /* \"src/utils/AccessControl.sol\":5046:5050  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":5033:5045  getRoleAdmin */\n      tag_37\n        /* \"src/utils/AccessControl.sol\":5033:5051  getRoleAdmin(role) */\n      jump\t// in\n    tag_114:\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      tag_116\n        /* \"src/utils/AccessControl.sol\":2589:2593  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":2578:2588  _checkRole */\n      tag_106\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      jump\t// in\n    tag_116:\n        /* \"src/utils/AccessControl.sol\":5064:5089  _grantRole(role, account) */\n      tag_118\n        /* \"src/utils/AccessControl.sol\":5075:5079  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":5081:5088  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":5064:5074  _grantRole */\n      tag_119\n        /* \"src/utils/AccessControl.sol\":5064:5089  _grantRole(role, account) */\n      jump\t// in\n    tag_118:\n        /* \"src/utils/AccessControl.sol\":4950:5097  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":6094:6312  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_53:\n        /* \"src/utils/AccessControl.sol\":6201:6213  _msgSender() */\n      tag_121\n        /* \"src/utils/AccessControl.sol\":6201:6211  _msgSender */\n      tag_23\n        /* \"src/utils/AccessControl.sol\":6201:6213  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"src/utils/AccessControl.sol\":6190:6213  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":6190:6197  account */\n      dup2\n        /* \"src/utils/AccessControl.sol\":6190:6213  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/utils/AccessControl.sol\":6182:6265  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"src/utils/AccessControl.sol\":6278:6304  _revokeRole(role, account) */\n      tag_125\n        /* \"src/utils/AccessControl.sol\":6290:6294  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":6296:6303  account */\n      dup3\n        /* \"src/utils/AccessControl.sol\":6278:6289  _revokeRole */\n      tag_126\n        /* \"src/utils/AccessControl.sol\":6278:6304  _revokeRole(role, account) */\n      jump\t// in\n    tag_125:\n        /* \"src/utils/AccessControl.sol\":6094:6312  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Reserve.sol\":277:352  bytes32 public constant CALLER_ROLE = keccak256(abi.encodePacked(\"Caller\")) */\n    tag_56:\n        /* \"src/Reserve.sol\":325:351  abi.encodePacked(\"Caller\") */\n      add(0x20, mload(0x40))\n      tag_127\n      swap1\n      tag_103\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Reserve.sol\":315:352  keccak256(abi.encodePacked(\"Caller\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Reserve.sol\":277:352  bytes32 public constant CALLER_ROLE = keccak256(abi.encodePacked(\"Caller\")) */\n      dup2\n      jump\t// out\n        /* \"src/Reserve.sol\":437:458  address public   WBNB */\n    tag_60:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":2982:3129  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_66:\n        /* \"src/utils/AccessControl.sol\":3068:3072  bool */\n      0x00\n        /* \"src/utils/AccessControl.sol\":3092:3098  _roles */\n      dup1\n        /* \"src/utils/AccessControl.sol\":3092:3104  _roles[role] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":3099:3103  role */\n      dup5\n        /* \"src/utils/AccessControl.sol\":3092:3104  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/utils/AccessControl.sol\":3092:3112  _roles[role].members */\n      0x00\n      add\n        /* \"src/utils/AccessControl.sol\":3092:3121  _roles[role].members[account] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":3113:3120  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":3092:3121  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/utils/AccessControl.sol\":3085:3121  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"src/utils/AccessControl.sol\":2982:3129  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":2087:2136  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_70:\n        /* \"src/utils/AccessControl.sol\":2132:2136  0x00 */\n      0x00\n        /* \"src/utils/AccessControl.sol\":2087:2136  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"src/Reserve.sol\":698:720  address public factory */\n    tag_74:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/Reserve.sol\":548:569  address public   USDT */\n    tag_78:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":5390:5539  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_83:\n        /* \"src/utils/AccessControl.sol\":5474:5492  getRoleAdmin(role) */\n      tag_129\n        /* \"src/utils/AccessControl.sol\":5487:5491  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":5474:5486  getRoleAdmin */\n      tag_37\n        /* \"src/utils/AccessControl.sol\":5474:5492  getRoleAdmin(role) */\n      jump\t// in\n    tag_129:\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      tag_131\n        /* \"src/utils/AccessControl.sol\":2589:2593  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":2578:2588  _checkRole */\n      tag_106\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      jump\t// in\n    tag_131:\n        /* \"src/utils/AccessControl.sol\":5505:5531  _revokeRole(role, account) */\n      tag_133\n        /* \"src/utils/AccessControl.sol\":5517:5521  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":5523:5530  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_126\n        /* \"src/utils/AccessControl.sol\":5505:5531  _revokeRole(role, account) */\n      jump\t// in\n    tag_133:\n        /* \"src/utils/AccessControl.sol\":5390:5539  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Reserve.sol\":1333:1945  function initialize(address factory_,address control_, address USDT_, address WBNB_) external {... */\n    tag_88:\n        /* \"src/Reserve.sol\":1462:1474  _initializer */\n      immutable(\"0x1572b593c53d839d80004aa4b8c51211864104f06ace9e22be9c4365b50655ea\")\n        /* \"src/Reserve.sol\":1446:1474  _msgSender() == _initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Reserve.sol\":1446:1458  _msgSender() */\n      tag_135\n        /* \"src/Reserve.sol\":1446:1456  _msgSender */\n      tag_23\n        /* \"src/Reserve.sol\":1446:1458  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"src/Reserve.sol\":1446:1474  _msgSender() == _initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/Reserve.sol\":1438:1517  require(_msgSender() == _initializer, \"Reserve: caller is not the initializer\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"src/Reserve.sol\":1655:1656  0 */\n      0x00\n        /* \"src/Reserve.sol\":1635:1657  control_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Reserve.sol\":1635:1643  control_ */\n      dup4\n        /* \"src/Reserve.sol\":1635:1657  control_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/Reserve.sol\":1627:1694  require(control_ != address(0), \"Reserve: invalid Control address\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"src/Reserve.sol\":1705:1738  _grantRole(CALLER_ROLE, control_) */\n      tag_142\n        /* \"src/Reserve.sol\":325:351  abi.encodePacked(\"Caller\") */\n      add(0x20, mload(0x40))\n      tag_143\n      swap1\n      tag_103\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Reserve.sol\":315:352  keccak256(abi.encodePacked(\"Caller\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Reserve.sol\":1729:1737  control_ */\n      dup5\n        /* \"src/Reserve.sol\":1705:1715  _grantRole */\n      tag_119\n        /* \"src/Reserve.sol\":1705:1738  _grantRole(CALLER_ROLE, control_) */\n      jump\t// in\n    tag_142:\n        /* \"src/Reserve.sol\":1790:1834  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_144\n        /* \"src/utils/AccessControl.sol\":2132:2136  0x00 */\n      0x00\n        /* \"src/Reserve.sol\":1801:1819  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"src/Reserve.sol\":1821:1833  _msgSender() */\n      tag_145\n        /* \"src/Reserve.sol\":1821:1831  _msgSender */\n      tag_23\n        /* \"src/Reserve.sol\":1821:1833  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"src/Reserve.sol\":1790:1800  _grantRole */\n      tag_119\n        /* \"src/Reserve.sol\":1790:1834  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      jump\t// in\n    tag_144:\n        /* \"src/Reserve.sol\":1853:1861  factory_ */\n      dup4\n        /* \"src/Reserve.sol\":1845:1852  factory */\n      0x03\n      0x00\n        /* \"src/Reserve.sol\":1845:1861  factory=factory_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/Reserve.sol\":1878:1883  USDT_ */\n      dup2\n        /* \"src/Reserve.sol\":1872:1876  USDT */\n      0x02\n      0x00\n        /* \"src/Reserve.sol\":1872:1883  USDT= USDT_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/Reserve.sol\":1900:1905  WBNB_ */\n      dup1\n        /* \"src/Reserve.sol\":1894:1898  WBNB */\n      0x01\n      0x00\n        /* \"src/Reserve.sol\":1894:1905  WBNB= WBNB_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/Reserve.sol\":1933:1937  true */\n      0x01\n        /* \"src/Reserve.sol\":1916:1930  _isInitialized */\n      0x02\n      0x14\n        /* \"src/Reserve.sol\":1916:1937  _isInitialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/Reserve.sol\":1333:1945  function initialize(address factory_,address control_, address USDT_, address WBNB_) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/DataFetcher.sol\":596:1038  function getReserves(address pancakeFactory,address tokenA, address tokenB) internal view returns (uint256 reserveA, uint256 reserveB) {... */\n    tag_91:\n        /* \"src/libraries/DataFetcher.sol\":695:711  uint256 reserveA */\n      0x00\n        /* \"src/libraries/DataFetcher.sol\":713:729  uint256 reserveB */\n      dup1\n        /* \"src/libraries/DataFetcher.sol\":742:754  address pair */\n      0x00\n        /* \"src/libraries/DataFetcher.sol\":757:795  pairFor(pancakeFactory,tokenA, tokenB) */\n      tag_147\n        /* \"src/libraries/DataFetcher.sol\":765:779  pancakeFactory */\n      dup7\n        /* \"src/libraries/DataFetcher.sol\":780:786  tokenA */\n      dup7\n        /* \"src/libraries/DataFetcher.sol\":788:794  tokenB */\n      dup7\n        /* \"src/libraries/DataFetcher.sol\":757:764  pairFor */\n      tag_148\n        /* \"src/libraries/DataFetcher.sol\":757:795  pairFor(pancakeFactory,tokenA, tokenB) */\n      jump\t// in\n    tag_147:\n        /* \"src/libraries/DataFetcher.sol\":742:795  address pair = pairFor(pancakeFactory,tokenA, tokenB) */\n      swap1\n      pop\n        /* \"src/libraries/DataFetcher.sol\":806:820  address token0 */\n      0x00\n        /* \"src/libraries/DataFetcher.sol\":836:840  pair */\n      dup2\n        /* \"src/libraries/DataFetcher.sol\":823:848  IPancakePair(pair).token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"src/libraries/DataFetcher.sol\":823:850  IPancakePair(pair).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"src/libraries/DataFetcher.sol\":806:850  address token0 = IPancakePair(pair).token0() */\n      swap1\n      pop\n        /* \"src/libraries/DataFetcher.sol\":862:878  uint256 reserve0 */\n      0x00\n        /* \"src/libraries/DataFetcher.sol\":880:896  uint256 reserve1 */\n      dup1\n        /* \"src/libraries/DataFetcher.sol\":915:919  pair */\n      dup4\n        /* \"src/libraries/DataFetcher.sol\":902:932  IPancakePair(pair).getReserves */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0902f1ac\n        /* \"src/libraries/DataFetcher.sol\":902:934  IPancakePair(pair).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"src/libraries/DataFetcher.sol\":861:934  (uint256 reserve0, uint256 reserve1, ) = IPancakePair(pair).getReserves() */\n      pop\n      0xffffffffffffffffffffffffffff\n      and\n      swap2\n      pop\n      0xffffffffffffffffffffffffffff\n      and\n      swap2\n      pop\n        /* \"src/libraries/DataFetcher.sol\":978:984  token0 */\n      dup3\n        /* \"src/libraries/DataFetcher.sol\":968:984  tokenA == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/libraries/DataFetcher.sol\":968:974  tokenA */\n      dup9\n        /* \"src/libraries/DataFetcher.sol\":968:984  tokenA == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/libraries/DataFetcher.sol\":968:1030  tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0) */\n      tag_157\n      jumpi\n        /* \"src/libraries/DataFetcher.sol\":1011:1019  reserve1 */\n      dup1\n        /* \"src/libraries/DataFetcher.sol\":1021:1029  reserve0 */\n      dup3\n        /* \"src/libraries/DataFetcher.sol\":968:1030  tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0) */\n      jump(tag_158)\n    tag_157:\n        /* \"src/libraries/DataFetcher.sol\":988:996  reserve0 */\n      dup2\n        /* \"src/libraries/DataFetcher.sol\":998:1006  reserve1 */\n      dup2\n        /* \"src/libraries/DataFetcher.sol\":968:1030  tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0) */\n    tag_158:\n        /* \"src/libraries/DataFetcher.sol\":945:1030  (reserveA, reserveB) = tokenA == token0 ? (reserve0, reserve1) : (reserve1, reserve0) */\n      dup1\n      swap7\n      pop\n      dup2\n      swap8\n      pop\n      pop\n      pop\n        /* \"src/libraries/DataFetcher.sol\":731:1038  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/libraries/DataFetcher.sol\":596:1038  function getReserves(address pancakeFactory,address tokenA, address tokenB) internal view returns (uint256 reserveA, uint256 reserveB) {... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/ERC165.sol\":866:1023  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_100:\n        /* \"src/utils/ERC165.sol\":951:955  bool */\n      0x00\n        /* \"src/utils/ERC165.sol\":990:1015  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"src/utils/ERC165.sol\":975:1015  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"src/utils/ERC165.sol\":975:986  interfaceId */\n      dup3\n        /* \"src/utils/ERC165.sol\":975:1015  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"src/utils/ERC165.sol\":968:1015  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"src/utils/ERC165.sol\":866:1023  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":3433:3538  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_106:\n        /* \"src/utils/AccessControl.sol\":3500:3530  _checkRole(role, _msgSender()) */\n      tag_161\n        /* \"src/utils/AccessControl.sol\":3511:3515  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":3517:3529  _msgSender() */\n      tag_162\n        /* \"src/utils/AccessControl.sol\":3517:3527  _msgSender */\n      tag_23\n        /* \"src/utils/AccessControl.sol\":3517:3529  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"src/utils/AccessControl.sol\":3500:3510  _checkRole */\n      tag_163\n        /* \"src/utils/AccessControl.sol\":3500:3530  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_161:\n        /* \"src/utils/AccessControl.sol\":3433:3538  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"src/libraries/SafeETH.sol\":91:301  function safeTransferETH(address to, uint256 value) internal {... */\n    tag_110:\n        /* \"src/libraries/SafeETH.sol\":164:176  bool success */\n      0x00\n        /* \"src/libraries/SafeETH.sol\":182:184  to */\n      dup3\n        /* \"src/libraries/SafeETH.sol\":182:189  to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/libraries/SafeETH.sol\":197:202  value */\n      dup3\n        /* \"src/libraries/SafeETH.sol\":214:215  0 */\n      0x00\n        /* \"src/libraries/SafeETH.sol\":204:216  new bytes(0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_165\n      jumpi\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n    tag_165:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_168\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_168:\n      pop\n        /* \"src/libraries/SafeETH.sol\":182:217  to.call{value: value}(new bytes(0)) */\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_173\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_172)\n    tag_173:\n      0x60\n      swap2\n      pop\n    tag_172:\n      pop\n        /* \"src/libraries/SafeETH.sol\":163:217  (bool success, ) = to.call{value: value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"src/libraries/SafeETH.sol\":236:243  success */\n      dup1\n        /* \"src/libraries/SafeETH.sol\":228:293  require(success, \"SafeETH::safeTransferETH: ETH transfer failed\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"src/libraries/SafeETH.sol\":152:301  {... */\n      pop\n        /* \"src/libraries/SafeETH.sol\":91:301  function safeTransferETH(address to, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":7691:7929  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_119:\n        /* \"src/utils/AccessControl.sol\":7775:7797  hasRole(role, account) */\n      tag_178\n        /* \"src/utils/AccessControl.sol\":7783:7787  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":7789:7796  account */\n      dup3\n        /* \"src/utils/AccessControl.sol\":7775:7782  hasRole */\n      tag_66\n        /* \"src/utils/AccessControl.sol\":7775:7797  hasRole(role, account) */\n      jump\t// in\n    tag_178:\n        /* \"src/utils/AccessControl.sol\":7770:7922  if (!hasRole(role, account)) {... */\n      tag_179\n      jumpi\n        /* \"src/utils/AccessControl.sol\":7846:7850  true */\n      0x01\n        /* \"src/utils/AccessControl.sol\":7814:7820  _roles */\n      0x00\n        /* \"src/utils/AccessControl.sol\":7814:7826  _roles[role] */\n      dup1\n        /* \"src/utils/AccessControl.sol\":7821:7825  role */\n      dup5\n        /* \"src/utils/AccessControl.sol\":7814:7826  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/utils/AccessControl.sol\":7814:7834  _roles[role].members */\n      0x00\n      add\n        /* \"src/utils/AccessControl.sol\":7814:7843  _roles[role].members[account] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":7835:7842  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":7814:7843  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/utils/AccessControl.sol\":7814:7850  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/utils/AccessControl.sol\":7897:7909  _msgSender() */\n      tag_180\n        /* \"src/utils/AccessControl.sol\":7897:7907  _msgSender */\n      tag_23\n        /* \"src/utils/AccessControl.sol\":7897:7909  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"src/utils/AccessControl.sol\":7870:7910  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":7888:7895  account */\n      dup2\n        /* \"src/utils/AccessControl.sol\":7870:7910  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":7882:7886  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":7870:7910  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/utils/AccessControl.sol\":7770:7922  if (!hasRole(role, account)) {... */\n    tag_179:\n        /* \"src/utils/AccessControl.sol\":7691:7929  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":8109:8348  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_126:\n        /* \"src/utils/AccessControl.sol\":8193:8215  hasRole(role, account) */\n      tag_182\n        /* \"src/utils/AccessControl.sol\":8201:8205  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":8207:8214  account */\n      dup3\n        /* \"src/utils/AccessControl.sol\":8193:8200  hasRole */\n      tag_66\n        /* \"src/utils/AccessControl.sol\":8193:8215  hasRole(role, account) */\n      jump\t// in\n    tag_182:\n        /* \"src/utils/AccessControl.sol\":8189:8341  if (hasRole(role, account)) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"src/utils/AccessControl.sol\":8264:8269  false */\n      0x00\n        /* \"src/utils/AccessControl.sol\":8232:8238  _roles */\n      dup1\n        /* \"src/utils/AccessControl.sol\":8232:8244  _roles[role] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":8239:8243  role */\n      dup5\n        /* \"src/utils/AccessControl.sol\":8232:8244  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/utils/AccessControl.sol\":8232:8252  _roles[role].members */\n      0x00\n      add\n        /* \"src/utils/AccessControl.sol\":8232:8261  _roles[role].members[account] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":8253:8260  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":8232:8261  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/utils/AccessControl.sol\":8232:8269  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/utils/AccessControl.sol\":8316:8328  _msgSender() */\n      tag_184\n        /* \"src/utils/AccessControl.sol\":8316:8326  _msgSender */\n      tag_23\n        /* \"src/utils/AccessControl.sol\":8316:8328  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"src/utils/AccessControl.sol\":8289:8329  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":8307:8314  account */\n      dup2\n        /* \"src/utils/AccessControl.sol\":8289:8329  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":8301:8305  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":8289:8329  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/utils/AccessControl.sol\":8189:8341  if (hasRole(role, account)) {... */\n    tag_183:\n        /* \"src/utils/AccessControl.sol\":8109:8348  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/DataFetcher.sol\":397:588  function pairFor(address pancakeFactory, address tokenA, address tokenB) internal view returns (address pair) {... */\n    tag_148:\n        /* \"src/libraries/DataFetcher.sol\":493:505  address pair */\n      0x00\n        /* \"src/libraries/DataFetcher.sol\":541:555  pancakeFactory */\n      dup4\n        /* \"src/libraries/DataFetcher.sol\":525:564  IPancakeFactory(pancakeFactory).getPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe6a43905\n        /* \"src/libraries/DataFetcher.sol\":565:571  tokenA */\n      dup5\n        /* \"src/libraries/DataFetcher.sol\":573:579  tokenB */\n      dup5\n        /* \"src/libraries/DataFetcher.sol\":525:580  IPancakeFactory(pancakeFactory).getPair(tokenA, tokenB) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_190:\n        /* \"src/libraries/DataFetcher.sol\":518:580  return IPancakeFactory(pancakeFactory).getPair(tokenA, tokenB) */\n      swap1\n      pop\n        /* \"src/libraries/DataFetcher.sol\":397:588  function pairFor(address pancakeFactory, address tokenA, address tokenB) internal view returns (address pair) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":3828:4320  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_163:\n        /* \"src/utils/AccessControl.sol\":3917:3939  hasRole(role, account) */\n      tag_192\n        /* \"src/utils/AccessControl.sol\":3925:3929  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":3931:3938  account */\n      dup3\n        /* \"src/utils/AccessControl.sol\":3917:3924  hasRole */\n      tag_66\n        /* \"src/utils/AccessControl.sol\":3917:3939  hasRole(role, account) */\n      jump\t// in\n    tag_192:\n        /* \"src/utils/AccessControl.sol\":3912:4313  if (!hasRole(role, account)) {... */\n      tag_193\n      jumpi\n        /* \"src/utils/AccessControl.sol\":4105:4133  Strings.toHexString(account) */\n      tag_194\n        /* \"src/utils/AccessControl.sol\":4125:4132  account */\n      dup2\n        /* \"src/utils/AccessControl.sol\":4105:4124  Strings.toHexString */\n      tag_195\n        /* \"src/utils/AccessControl.sol\":4105:4133  Strings.toHexString(account) */\n      jump\t// in\n    tag_194:\n        /* \"src/utils/AccessControl.sol\":4206:4244  Strings.toHexString(uint256(role), 32) */\n      tag_196\n        /* \"src/utils/AccessControl.sol\":4234:4238  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":4226:4239  uint256(role) */\n      0x00\n      shr\n        /* \"src/utils/AccessControl.sol\":4241:4243  32 */\n      0x20\n        /* \"src/utils/AccessControl.sol\":4206:4225  Strings.toHexString */\n      tag_197\n        /* \"src/utils/AccessControl.sol\":4206:4244  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_196:\n        /* \"src/utils/AccessControl.sol\":4010:4267  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/utils/AccessControl.sol\":3956:4301  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/utils/AccessControl.sol\":3912:4313  if (!hasRole(role, account)) {... */\n    tag_193:\n        /* \"src/utils/AccessControl.sol\":3828:4320  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/Strings.sol\":2471:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_195:\n        /* \"src/libraries/Strings.sol\":2529:2542  string memory */\n      0x60\n        /* \"src/libraries/Strings.sol\":2562:2614  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_203\n        /* \"src/libraries/Strings.sol\":2590:2594  addr */\n      dup3\n        /* \"src/libraries/Strings.sol\":2574:2596  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/libraries/Strings.sol\":346:348  20 */\n      0x14\n        /* \"src/libraries/Strings.sol\":2562:2614  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"src/libraries/Strings.sol\":2562:2573  toHexString */\n      tag_197\n        /* \"src/libraries/Strings.sol\":2562:2614  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_203:\n        /* \"src/libraries/Strings.sol\":2555:2614  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"src/libraries/Strings.sol\":2471:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/libraries/Strings.sol\":1867:2314  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_197:\n        /* \"src/libraries/Strings.sol\":1942:1955  string memory */\n      0x60\n        /* \"src/libraries/Strings.sol\":1968:1987  bytes memory buffer */\n      0x00\n        /* \"src/libraries/Strings.sol\":2013:2014  2 */\n      0x02\n        /* \"src/libraries/Strings.sol\":2004:2010  length */\n      dup4\n        /* \"src/libraries/Strings.sol\":2000:2001  2 */\n      0x02\n        /* \"src/libraries/Strings.sol\":2000:2010  2 * length */\n      tag_205\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_205:\n        /* \"src/libraries/Strings.sol\":2000:2014  2 * length + 2 */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"src/libraries/Strings.sol\":1990:2015  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_208\n      jumpi\n      tag_209\n      tag_167\n      jump\t// in\n    tag_209:\n    tag_208:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_210\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_210:\n      pop\n        /* \"src/libraries/Strings.sol\":1968:2015  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"src/libraries/Strings.sol\":2026:2041  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"src/libraries/Strings.sol\":2026:2032  buffer */\n      dup2\n        /* \"src/libraries/Strings.sol\":2033:2034  0 */\n      0x00\n        /* \"src/libraries/Strings.sol\":2026:2035  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_211\n      jumpi\n      tag_212\n      tag_213\n      jump\t// in\n    tag_212:\n    tag_211:\n      0x20\n      add\n      add\n        /* \"src/libraries/Strings.sol\":2026:2041  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"src/libraries/Strings.sol\":2052:2067  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"src/libraries/Strings.sol\":2052:2058  buffer */\n      dup2\n        /* \"src/libraries/Strings.sol\":2059:2060  1 */\n      0x01\n        /* \"src/libraries/Strings.sol\":2052:2061  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_214\n      jumpi\n      tag_215\n      tag_213\n      jump\t// in\n    tag_215:\n    tag_214:\n      0x20\n      add\n      add\n        /* \"src/libraries/Strings.sol\":2052:2067  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"src/libraries/Strings.sol\":2083:2092  uint256 i */\n      0x00\n        /* \"src/libraries/Strings.sol\":2108:2109  1 */\n      0x01\n        /* \"src/libraries/Strings.sol\":2099:2105  length */\n      dup5\n        /* \"src/libraries/Strings.sol\":2095:2096  2 */\n      0x02\n        /* \"src/libraries/Strings.sol\":2095:2105  2 * length */\n      tag_219\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_219:\n        /* \"src/libraries/Strings.sol\":2095:2109  2 * length + 1 */\n      tag_220\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_220:\n        /* \"src/libraries/Strings.sol\":2083:2109  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"src/libraries/Strings.sol\":2078:2209  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_216:\n        /* \"src/libraries/Strings.sol\":2115:2116  1 */\n      0x01\n        /* \"src/libraries/Strings.sol\":2111:2112  i */\n      dup2\n        /* \"src/libraries/Strings.sol\":2111:2116  i > 1 */\n      gt\n        /* \"src/libraries/Strings.sol\":2078:2209  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"src/libraries/Strings.sol\":2150:2158  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"src/libraries/Strings.sol\":2167:2170  0xf */\n      0x0f\n        /* \"src/libraries/Strings.sol\":2159:2164  value */\n      dup7\n        /* \"src/libraries/Strings.sol\":2159:2170  value & 0xf */\n      and\n        /* \"src/libraries/Strings.sol\":2150:2171  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_221\n      jumpi\n      tag_222\n      tag_213\n      jump\t// in\n    tag_222:\n    tag_221:\n      byte\n      0xf8\n      shl\n        /* \"src/libraries/Strings.sol\":2138:2144  buffer */\n      dup3\n        /* \"src/libraries/Strings.sol\":2145:2146  i */\n      dup3\n        /* \"src/libraries/Strings.sol\":2138:2147  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_223\n      jumpi\n      tag_224\n      tag_213\n      jump\t// in\n    tag_224:\n    tag_223:\n      0x20\n      add\n      add\n        /* \"src/libraries/Strings.sol\":2138:2171  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"src/libraries/Strings.sol\":2196:2197  4 */\n      0x04\n        /* \"src/libraries/Strings.sol\":2186:2197  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"src/libraries/Strings.sol\":2118:2121  --i */\n      dup1\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      swap1\n      pop\n        /* \"src/libraries/Strings.sol\":2078:2209  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_216)\n    tag_217:\n      pop\n        /* \"src/libraries/Strings.sol\":2236:2237  0 */\n      0x00\n        /* \"src/libraries/Strings.sol\":2227:2232  value */\n      dup5\n        /* \"src/libraries/Strings.sol\":2227:2237  value == 0 */\n      eq\n        /* \"src/libraries/Strings.sol\":2219:2274  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"src/libraries/Strings.sol\":2299:2305  buffer */\n      dup1\n        /* \"src/libraries/Strings.sol\":2285:2306  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"src/libraries/Strings.sol\":1867:2314  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_230:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_231:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_289\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_230\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_232:\n        /* \"#utility.yul\":328:352   */\n      tag_291\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_231\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:442   */\n    tag_233:\n        /* \"#utility.yul\":402:409   */\n      0x00\n        /* \"#utility.yul\":431:436   */\n      dup2\n        /* \"#utility.yul\":420:436   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":448:566   */\n    tag_234:\n        /* \"#utility.yul\":535:559   */\n      tag_294\n        /* \"#utility.yul\":553:558   */\n      dup2\n        /* \"#utility.yul\":535:559   */\n      tag_233\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":530:533   */\n      dup3\n        /* \"#utility.yul\":523:560   */\n      mstore\n        /* \"#utility.yul\":448:566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":572:1125   */\n    tag_25:\n        /* \"#utility.yul\":749:753   */\n      0x00\n        /* \"#utility.yul\":787:790   */\n      0x80\n        /* \"#utility.yul\":776:785   */\n      dup3\n        /* \"#utility.yul\":772:791   */\n      add\n        /* \"#utility.yul\":764:791   */\n      swap1\n      pop\n        /* \"#utility.yul\":801:872   */\n      tag_296\n        /* \"#utility.yul\":869:870   */\n      0x00\n        /* \"#utility.yul\":858:867   */\n      dup4\n        /* \"#utility.yul\":854:871   */\n      add\n        /* \"#utility.yul\":845:851   */\n      dup8\n        /* \"#utility.yul\":801:872   */\n      tag_232\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":882:954   */\n      tag_297\n        /* \"#utility.yul\":950:952   */\n      0x20\n        /* \"#utility.yul\":939:948   */\n      dup4\n        /* \"#utility.yul\":935:953   */\n      add\n        /* \"#utility.yul\":926:932   */\n      dup7\n        /* \"#utility.yul\":882:954   */\n      tag_234\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":964:1036   */\n      tag_298\n        /* \"#utility.yul\":1032:1034   */\n      0x40\n        /* \"#utility.yul\":1021:1030   */\n      dup4\n        /* \"#utility.yul\":1017:1035   */\n      add\n        /* \"#utility.yul\":1008:1014   */\n      dup6\n        /* \"#utility.yul\":964:1036   */\n      tag_234\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1046:1118   */\n      tag_299\n        /* \"#utility.yul\":1114:1116   */\n      0x60\n        /* \"#utility.yul\":1103:1112   */\n      dup4\n        /* \"#utility.yul\":1099:1117   */\n      add\n        /* \"#utility.yul\":1090:1096   */\n      dup5\n        /* \"#utility.yul\":1046:1118   */\n      tag_234\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":572:1125   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1212:1329   */\n    tag_236:\n        /* \"#utility.yul\":1321:1322   */\n      0x00\n        /* \"#utility.yul\":1318:1319   */\n      dup1\n        /* \"#utility.yul\":1311:1323   */\n      revert\n        /* \"#utility.yul\":1458:1607   */\n    tag_238:\n        /* \"#utility.yul\":1494:1501   */\n      0x00\n        /* \"#utility.yul\":1534:1600   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1527:1532   */\n      dup3\n        /* \"#utility.yul\":1523:1601   */\n      and\n        /* \"#utility.yul\":1512:1601   */\n      swap1\n      pop\n        /* \"#utility.yul\":1458:1607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1613:1733   */\n    tag_239:\n        /* \"#utility.yul\":1685:1708   */\n      tag_305\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1685:1708   */\n      tag_238\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":1678:1683   */\n      dup2\n        /* \"#utility.yul\":1675:1709   */\n      eq\n        /* \"#utility.yul\":1665:1727   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1665:1727   */\n    tag_306:\n        /* \"#utility.yul\":1613:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1876   */\n    tag_240:\n        /* \"#utility.yul\":1784:1789   */\n      0x00\n        /* \"#utility.yul\":1822:1828   */\n      dup2\n        /* \"#utility.yul\":1809:1829   */\n      calldataload\n        /* \"#utility.yul\":1800:1829   */\n      swap1\n      pop\n        /* \"#utility.yul\":1838:1870   */\n      tag_308\n        /* \"#utility.yul\":1864:1869   */\n      dup2\n        /* \"#utility.yul\":1838:1870   */\n      tag_239\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":1739:1876   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1882:2209   */\n    tag_29:\n        /* \"#utility.yul\":1940:1946   */\n      0x00\n        /* \"#utility.yul\":1989:1991   */\n      0x20\n        /* \"#utility.yul\":1977:1986   */\n      dup3\n        /* \"#utility.yul\":1968:1975   */\n      dup5\n        /* \"#utility.yul\":1964:1987   */\n      sub\n        /* \"#utility.yul\":1960:1992   */\n      slt\n        /* \"#utility.yul\":1957:2076   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1995:2074   */\n      tag_311\n      tag_236\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1957:2076   */\n    tag_310:\n        /* \"#utility.yul\":2115:2116   */\n      0x00\n        /* \"#utility.yul\":2140:2192   */\n      tag_312\n        /* \"#utility.yul\":2184:2191   */\n      dup5\n        /* \"#utility.yul\":2175:2181   */\n      dup3\n        /* \"#utility.yul\":2164:2173   */\n      dup6\n        /* \"#utility.yul\":2160:2182   */\n      add\n        /* \"#utility.yul\":2140:2192   */\n      tag_240\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2130:2192   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2202   */\n      pop\n        /* \"#utility.yul\":1882:2209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2305   */\n    tag_241:\n        /* \"#utility.yul\":2249:2256   */\n      0x00\n        /* \"#utility.yul\":2292:2297   */\n      dup2\n        /* \"#utility.yul\":2285:2298   */\n      iszero\n        /* \"#utility.yul\":2278:2299   */\n      iszero\n        /* \"#utility.yul\":2267:2299   */\n      swap1\n      pop\n        /* \"#utility.yul\":2215:2305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2311:2420   */\n    tag_242:\n        /* \"#utility.yul\":2392:2413   */\n      tag_315\n        /* \"#utility.yul\":2407:2412   */\n      dup2\n        /* \"#utility.yul\":2392:2413   */\n      tag_241\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2387:2390   */\n      dup3\n        /* \"#utility.yul\":2380:2414   */\n      mstore\n        /* \"#utility.yul\":2311:2420   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2426:2636   */\n    tag_32:\n        /* \"#utility.yul\":2513:2517   */\n      0x00\n        /* \"#utility.yul\":2551:2553   */\n      0x20\n        /* \"#utility.yul\":2540:2549   */\n      dup3\n        /* \"#utility.yul\":2536:2554   */\n      add\n        /* \"#utility.yul\":2528:2554   */\n      swap1\n      pop\n        /* \"#utility.yul\":2564:2629   */\n      tag_317\n        /* \"#utility.yul\":2626:2627   */\n      0x00\n        /* \"#utility.yul\":2615:2624   */\n      dup4\n        /* \"#utility.yul\":2611:2628   */\n      add\n        /* \"#utility.yul\":2602:2608   */\n      dup5\n        /* \"#utility.yul\":2564:2629   */\n      tag_242\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2426:2636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2642:2719   */\n    tag_243:\n        /* \"#utility.yul\":2679:2686   */\n      0x00\n        /* \"#utility.yul\":2708:2713   */\n      dup2\n        /* \"#utility.yul\":2697:2713   */\n      swap1\n      pop\n        /* \"#utility.yul\":2642:2719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2725:2847   */\n    tag_244:\n        /* \"#utility.yul\":2798:2822   */\n      tag_320\n        /* \"#utility.yul\":2816:2821   */\n      dup2\n        /* \"#utility.yul\":2798:2822   */\n      tag_243\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2791:2796   */\n      dup2\n        /* \"#utility.yul\":2788:2823   */\n      eq\n        /* \"#utility.yul\":2778:2841   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":2837:2838   */\n      0x00\n        /* \"#utility.yul\":2834:2835   */\n      dup1\n        /* \"#utility.yul\":2827:2839   */\n      revert\n        /* \"#utility.yul\":2778:2841   */\n    tag_321:\n        /* \"#utility.yul\":2725:2847   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2853:2992   */\n    tag_245:\n        /* \"#utility.yul\":2899:2904   */\n      0x00\n        /* \"#utility.yul\":2937:2943   */\n      dup2\n        /* \"#utility.yul\":2924:2944   */\n      calldataload\n        /* \"#utility.yul\":2915:2944   */\n      swap1\n      pop\n        /* \"#utility.yul\":2953:2986   */\n      tag_323\n        /* \"#utility.yul\":2980:2985   */\n      dup2\n        /* \"#utility.yul\":2953:2986   */\n      tag_244\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2853:2992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3327   */\n    tag_36:\n        /* \"#utility.yul\":3057:3063   */\n      0x00\n        /* \"#utility.yul\":3106:3108   */\n      0x20\n        /* \"#utility.yul\":3094:3103   */\n      dup3\n        /* \"#utility.yul\":3085:3092   */\n      dup5\n        /* \"#utility.yul\":3081:3104   */\n      sub\n        /* \"#utility.yul\":3077:3109   */\n      slt\n        /* \"#utility.yul\":3074:3193   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":3112:3191   */\n      tag_326\n      tag_236\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3074:3193   */\n    tag_325:\n        /* \"#utility.yul\":3232:3233   */\n      0x00\n        /* \"#utility.yul\":3257:3310   */\n      tag_327\n        /* \"#utility.yul\":3302:3309   */\n      dup5\n        /* \"#utility.yul\":3293:3299   */\n      dup3\n        /* \"#utility.yul\":3282:3291   */\n      dup6\n        /* \"#utility.yul\":3278:3300   */\n      add\n        /* \"#utility.yul\":3257:3310   */\n      tag_245\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3247:3310   */\n      swap2\n      pop\n        /* \"#utility.yul\":3203:3320   */\n      pop\n        /* \"#utility.yul\":2998:3327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3333:3451   */\n    tag_246:\n        /* \"#utility.yul\":3420:3444   */\n      tag_329\n        /* \"#utility.yul\":3438:3443   */\n      dup2\n        /* \"#utility.yul\":3420:3444   */\n      tag_243\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3415:3418   */\n      dup3\n        /* \"#utility.yul\":3408:3445   */\n      mstore\n        /* \"#utility.yul\":3333:3451   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3457:3679   */\n    tag_39:\n        /* \"#utility.yul\":3550:3554   */\n      0x00\n        /* \"#utility.yul\":3588:3590   */\n      0x20\n        /* \"#utility.yul\":3577:3586   */\n      dup3\n        /* \"#utility.yul\":3573:3591   */\n      add\n        /* \"#utility.yul\":3565:3591   */\n      swap1\n      pop\n        /* \"#utility.yul\":3601:3672   */\n      tag_331\n        /* \"#utility.yul\":3669:3670   */\n      0x00\n        /* \"#utility.yul\":3658:3667   */\n      dup4\n        /* \"#utility.yul\":3654:3671   */\n      add\n        /* \"#utility.yul\":3645:3651   */\n      dup5\n        /* \"#utility.yul\":3601:3672   */\n      tag_246\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3457:3679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3685:3807   */\n    tag_247:\n        /* \"#utility.yul\":3758:3782   */\n      tag_333\n        /* \"#utility.yul\":3776:3781   */\n      dup2\n        /* \"#utility.yul\":3758:3782   */\n      tag_233\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3751:3756   */\n      dup2\n        /* \"#utility.yul\":3748:3783   */\n      eq\n        /* \"#utility.yul\":3738:3801   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":3797:3798   */\n      0x00\n        /* \"#utility.yul\":3794:3795   */\n      dup1\n        /* \"#utility.yul\":3787:3799   */\n      revert\n        /* \"#utility.yul\":3738:3801   */\n    tag_334:\n        /* \"#utility.yul\":3685:3807   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3813:3952   */\n    tag_248:\n        /* \"#utility.yul\":3859:3864   */\n      0x00\n        /* \"#utility.yul\":3897:3903   */\n      dup2\n        /* \"#utility.yul\":3884:3904   */\n      calldataload\n        /* \"#utility.yul\":3875:3904   */\n      swap1\n      pop\n        /* \"#utility.yul\":3913:3946   */\n      tag_336\n        /* \"#utility.yul\":3940:3945   */\n      dup2\n        /* \"#utility.yul\":3913:3946   */\n      tag_247\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3813:3952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3958:4287   */\n    tag_43:\n        /* \"#utility.yul\":4017:4023   */\n      0x00\n        /* \"#utility.yul\":4066:4068   */\n      0x20\n        /* \"#utility.yul\":4054:4063   */\n      dup3\n        /* \"#utility.yul\":4045:4052   */\n      dup5\n        /* \"#utility.yul\":4041:4064   */\n      sub\n        /* \"#utility.yul\":4037:4069   */\n      slt\n        /* \"#utility.yul\":4034:4153   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":4072:4151   */\n      tag_339\n      tag_236\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4034:4153   */\n    tag_338:\n        /* \"#utility.yul\":4192:4193   */\n      0x00\n        /* \"#utility.yul\":4217:4270   */\n      tag_340\n        /* \"#utility.yul\":4262:4269   */\n      dup5\n        /* \"#utility.yul\":4253:4259   */\n      dup3\n        /* \"#utility.yul\":4242:4251   */\n      dup6\n        /* \"#utility.yul\":4238:4260   */\n      add\n        /* \"#utility.yul\":4217:4270   */\n      tag_248\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4207:4270   */\n      swap2\n      pop\n        /* \"#utility.yul\":4163:4280   */\n      pop\n        /* \"#utility.yul\":3958:4287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4293:4415   */\n    tag_249:\n        /* \"#utility.yul\":4366:4390   */\n      tag_342\n        /* \"#utility.yul\":4384:4389   */\n      dup2\n        /* \"#utility.yul\":4366:4390   */\n      tag_231\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4359:4364   */\n      dup2\n        /* \"#utility.yul\":4356:4391   */\n      eq\n        /* \"#utility.yul\":4346:4409   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":4405:4406   */\n      0x00\n        /* \"#utility.yul\":4402:4403   */\n      dup1\n        /* \"#utility.yul\":4395:4407   */\n      revert\n        /* \"#utility.yul\":4346:4409   */\n    tag_343:\n        /* \"#utility.yul\":4293:4415   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4421:4560   */\n    tag_250:\n        /* \"#utility.yul\":4467:4472   */\n      0x00\n        /* \"#utility.yul\":4505:4511   */\n      dup2\n        /* \"#utility.yul\":4492:4512   */\n      calldataload\n        /* \"#utility.yul\":4483:4512   */\n      swap1\n      pop\n        /* \"#utility.yul\":4521:4554   */\n      tag_345\n        /* \"#utility.yul\":4548:4553   */\n      dup2\n        /* \"#utility.yul\":4521:4554   */\n      tag_249\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4421:4560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4566:5040   */\n    tag_48:\n        /* \"#utility.yul\":4634:4640   */\n      0x00\n        /* \"#utility.yul\":4642:4648   */\n      dup1\n        /* \"#utility.yul\":4691:4693   */\n      0x40\n        /* \"#utility.yul\":4679:4688   */\n      dup4\n        /* \"#utility.yul\":4670:4677   */\n      dup6\n        /* \"#utility.yul\":4666:4689   */\n      sub\n        /* \"#utility.yul\":4662:4694   */\n      slt\n        /* \"#utility.yul\":4659:4778   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":4697:4776   */\n      tag_348\n      tag_236\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4659:4778   */\n    tag_347:\n        /* \"#utility.yul\":4817:4818   */\n      0x00\n        /* \"#utility.yul\":4842:4895   */\n      tag_349\n        /* \"#utility.yul\":4887:4894   */\n      dup6\n        /* \"#utility.yul\":4878:4884   */\n      dup3\n        /* \"#utility.yul\":4867:4876   */\n      dup7\n        /* \"#utility.yul\":4863:4885   */\n      add\n        /* \"#utility.yul\":4842:4895   */\n      tag_245\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4832:4895   */\n      swap3\n      pop\n        /* \"#utility.yul\":4788:4905   */\n      pop\n        /* \"#utility.yul\":4944:4946   */\n      0x20\n        /* \"#utility.yul\":4970:5023   */\n      tag_350\n        /* \"#utility.yul\":5015:5022   */\n      dup6\n        /* \"#utility.yul\":5006:5012   */\n      dup3\n        /* \"#utility.yul\":4995:5004   */\n      dup7\n        /* \"#utility.yul\":4991:5013   */\n      add\n        /* \"#utility.yul\":4970:5023   */\n      tag_250\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4960:5023   */\n      swap2\n      pop\n        /* \"#utility.yul\":4915:5033   */\n      pop\n        /* \"#utility.yul\":4566:5040   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5046:5268   */\n    tag_62:\n        /* \"#utility.yul\":5139:5143   */\n      0x00\n        /* \"#utility.yul\":5177:5179   */\n      0x20\n        /* \"#utility.yul\":5166:5175   */\n      dup3\n        /* \"#utility.yul\":5162:5180   */\n      add\n        /* \"#utility.yul\":5154:5180   */\n      swap1\n      pop\n        /* \"#utility.yul\":5190:5261   */\n      tag_352\n        /* \"#utility.yul\":5258:5259   */\n      0x00\n        /* \"#utility.yul\":5247:5256   */\n      dup4\n        /* \"#utility.yul\":5243:5260   */\n      add\n        /* \"#utility.yul\":5234:5240   */\n      dup5\n        /* \"#utility.yul\":5190:5261   */\n      tag_232\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5046:5268   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5274:6039   */\n    tag_87:\n        /* \"#utility.yul\":5360:5366   */\n      0x00\n        /* \"#utility.yul\":5368:5374   */\n      dup1\n        /* \"#utility.yul\":5376:5382   */\n      0x00\n        /* \"#utility.yul\":5384:5390   */\n      dup1\n        /* \"#utility.yul\":5433:5436   */\n      0x80\n        /* \"#utility.yul\":5421:5430   */\n      dup6\n        /* \"#utility.yul\":5412:5419   */\n      dup8\n        /* \"#utility.yul\":5408:5431   */\n      sub\n        /* \"#utility.yul\":5404:5437   */\n      slt\n        /* \"#utility.yul\":5401:5521   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":5440:5519   */\n      tag_355\n      tag_236\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":5401:5521   */\n    tag_354:\n        /* \"#utility.yul\":5560:5561   */\n      0x00\n        /* \"#utility.yul\":5585:5638   */\n      tag_356\n        /* \"#utility.yul\":5630:5637   */\n      dup8\n        /* \"#utility.yul\":5621:5627   */\n      dup3\n        /* \"#utility.yul\":5610:5619   */\n      dup9\n        /* \"#utility.yul\":5606:5628   */\n      add\n        /* \"#utility.yul\":5585:5638   */\n      tag_250\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5575:5638   */\n      swap5\n      pop\n        /* \"#utility.yul\":5531:5648   */\n      pop\n        /* \"#utility.yul\":5687:5689   */\n      0x20\n        /* \"#utility.yul\":5713:5766   */\n      tag_357\n        /* \"#utility.yul\":5758:5765   */\n      dup8\n        /* \"#utility.yul\":5749:5755   */\n      dup3\n        /* \"#utility.yul\":5738:5747   */\n      dup9\n        /* \"#utility.yul\":5734:5756   */\n      add\n        /* \"#utility.yul\":5713:5766   */\n      tag_250\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5703:5766   */\n      swap4\n      pop\n        /* \"#utility.yul\":5658:5776   */\n      pop\n        /* \"#utility.yul\":5815:5817   */\n      0x40\n        /* \"#utility.yul\":5841:5894   */\n      tag_358\n        /* \"#utility.yul\":5886:5893   */\n      dup8\n        /* \"#utility.yul\":5877:5883   */\n      dup3\n        /* \"#utility.yul\":5866:5875   */\n      dup9\n        /* \"#utility.yul\":5862:5884   */\n      add\n        /* \"#utility.yul\":5841:5894   */\n      tag_250\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5831:5894   */\n      swap3\n      pop\n        /* \"#utility.yul\":5786:5904   */\n      pop\n        /* \"#utility.yul\":5943:5945   */\n      0x60\n        /* \"#utility.yul\":5969:6022   */\n      tag_359\n        /* \"#utility.yul\":6014:6021   */\n      dup8\n        /* \"#utility.yul\":6005:6011   */\n      dup3\n        /* \"#utility.yul\":5994:6003   */\n      dup9\n        /* \"#utility.yul\":5990:6012   */\n      add\n        /* \"#utility.yul\":5969:6022   */\n      tag_250\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5959:6022   */\n      swap2\n      pop\n        /* \"#utility.yul\":5914:6032   */\n      pop\n        /* \"#utility.yul\":5274:6039   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6045:6225   */\n    tag_251:\n        /* \"#utility.yul\":6093:6170   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6090:6091   */\n      0x00\n        /* \"#utility.yul\":6083:6171   */\n      mstore\n        /* \"#utility.yul\":6190:6194   */\n      0x11\n        /* \"#utility.yul\":6187:6188   */\n      0x04\n        /* \"#utility.yul\":6180:6195   */\n      mstore\n        /* \"#utility.yul\":6214:6218   */\n      0x24\n        /* \"#utility.yul\":6211:6212   */\n      0x00\n        /* \"#utility.yul\":6204:6219   */\n      revert\n        /* \"#utility.yul\":6231:6641   */\n    tag_93:\n        /* \"#utility.yul\":6271:6278   */\n      0x00\n        /* \"#utility.yul\":6294:6314   */\n      tag_362\n        /* \"#utility.yul\":6312:6313   */\n      dup3\n        /* \"#utility.yul\":6294:6314   */\n      tag_233\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":6289:6314   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6348   */\n      tag_363\n        /* \"#utility.yul\":6346:6347   */\n      dup4\n        /* \"#utility.yul\":6328:6348   */\n      tag_233\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":6323:6348   */\n      swap3\n      pop\n        /* \"#utility.yul\":6383:6384   */\n      dup3\n        /* \"#utility.yul\":6380:6381   */\n      dup3\n        /* \"#utility.yul\":6376:6385   */\n      mul\n        /* \"#utility.yul\":6405:6435   */\n      tag_364\n        /* \"#utility.yul\":6423:6434   */\n      dup2\n        /* \"#utility.yul\":6405:6435   */\n      tag_233\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6394:6435   */\n      swap2\n      pop\n        /* \"#utility.yul\":6584:6585   */\n      dup3\n        /* \"#utility.yul\":6575:6582   */\n      dup3\n        /* \"#utility.yul\":6571:6586   */\n      div\n        /* \"#utility.yul\":6568:6569   */\n      dup5\n        /* \"#utility.yul\":6565:6587   */\n      eq\n        /* \"#utility.yul\":6545:6546   */\n      dup4\n        /* \"#utility.yul\":6538:6547   */\n      iszero\n        /* \"#utility.yul\":6518:6601   */\n      or\n        /* \"#utility.yul\":6495:6634   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":6614:6632   */\n      tag_366\n      tag_251\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6495:6634   */\n    tag_365:\n        /* \"#utility.yul\":6279:6641   */\n      pop\n        /* \"#utility.yul\":6231:6641   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6647:6827   */\n    tag_252:\n        /* \"#utility.yul\":6695:6772   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6692:6693   */\n      0x00\n        /* \"#utility.yul\":6685:6773   */\n      mstore\n        /* \"#utility.yul\":6792:6796   */\n      0x12\n        /* \"#utility.yul\":6789:6790   */\n      0x04\n        /* \"#utility.yul\":6782:6797   */\n      mstore\n        /* \"#utility.yul\":6816:6820   */\n      0x24\n        /* \"#utility.yul\":6813:6814   */\n      0x00\n        /* \"#utility.yul\":6806:6821   */\n      revert\n        /* \"#utility.yul\":6833:7018   */\n    tag_95:\n        /* \"#utility.yul\":6873:6874   */\n      0x00\n        /* \"#utility.yul\":6890:6910   */\n      tag_369\n        /* \"#utility.yul\":6908:6909   */\n      dup3\n        /* \"#utility.yul\":6890:6910   */\n      tag_233\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6885:6910   */\n      swap2\n      pop\n        /* \"#utility.yul\":6924:6944   */\n      tag_370\n        /* \"#utility.yul\":6942:6943   */\n      dup4\n        /* \"#utility.yul\":6924:6944   */\n      tag_233\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6919:6944   */\n      swap3\n      pop\n        /* \"#utility.yul\":6963:6964   */\n      dup3\n        /* \"#utility.yul\":6953:6988   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":6968:6986   */\n      tag_372\n      tag_252\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6953:6988   */\n    tag_371:\n        /* \"#utility.yul\":7010:7011   */\n      dup3\n        /* \"#utility.yul\":7007:7008   */\n      dup3\n        /* \"#utility.yul\":7003:7012   */\n      div\n        /* \"#utility.yul\":6998:7012   */\n      swap1\n      pop\n        /* \"#utility.yul\":6833:7018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7024:7172   */\n    tag_253:\n        /* \"#utility.yul\":7126:7137   */\n      0x00\n        /* \"#utility.yul\":7163:7166   */\n      dup2\n        /* \"#utility.yul\":7148:7166   */\n      swap1\n      pop\n        /* \"#utility.yul\":7024:7172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7178:7334   */\n    tag_254:\n        /* \"#utility.yul\":7318:7326   */\n      0x43616c6c65720000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7314:7315   */\n      0x00\n        /* \"#utility.yul\":7306:7312   */\n      dup3\n        /* \"#utility.yul\":7302:7316   */\n      add\n        /* \"#utility.yul\":7295:7327   */\n      mstore\n        /* \"#utility.yul\":7178:7334   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7340:7740   */\n    tag_255:\n        /* \"#utility.yul\":7500:7503   */\n      0x00\n        /* \"#utility.yul\":7521:7605   */\n      tag_376\n        /* \"#utility.yul\":7603:7604   */\n      0x06\n        /* \"#utility.yul\":7598:7601   */\n      dup4\n        /* \"#utility.yul\":7521:7605   */\n      tag_253\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7514:7605   */\n      swap2\n      pop\n        /* \"#utility.yul\":7614:7707   */\n      tag_377\n        /* \"#utility.yul\":7703:7706   */\n      dup3\n        /* \"#utility.yul\":7614:7707   */\n      tag_254\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7732:7733   */\n      0x06\n        /* \"#utility.yul\":7727:7730   */\n      dup3\n        /* \"#utility.yul\":7723:7734   */\n      add\n        /* \"#utility.yul\":7716:7734   */\n      swap1\n      pop\n        /* \"#utility.yul\":7340:7740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7746:8127   */\n    tag_103:\n        /* \"#utility.yul\":7931:7934   */\n      0x00\n        /* \"#utility.yul\":7953:8101   */\n      tag_379\n        /* \"#utility.yul\":8097:8100   */\n      dup3\n        /* \"#utility.yul\":7953:8101   */\n      tag_255\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":7946:8101   */\n      swap2\n      pop\n        /* \"#utility.yul\":8118:8121   */\n      dup2\n        /* \"#utility.yul\":8111:8121   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:8127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8133:8302   */\n    tag_256:\n        /* \"#utility.yul\":8217:8228   */\n      0x00\n        /* \"#utility.yul\":8251:8257   */\n      dup3\n        /* \"#utility.yul\":8246:8249   */\n      dup3\n        /* \"#utility.yul\":8239:8258   */\n      mstore\n        /* \"#utility.yul\":8291:8295   */\n      0x20\n        /* \"#utility.yul\":8286:8289   */\n      dup3\n        /* \"#utility.yul\":8282:8296   */\n      add\n        /* \"#utility.yul\":8267:8296   */\n      swap1\n      pop\n        /* \"#utility.yul\":8133:8302   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8308:8542   */\n    tag_257:\n        /* \"#utility.yul\":8448:8482   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":8444:8445   */\n      0x00\n        /* \"#utility.yul\":8436:8442   */\n      dup3\n        /* \"#utility.yul\":8432:8446   */\n      add\n        /* \"#utility.yul\":8425:8483   */\n      mstore\n        /* \"#utility.yul\":8517:8534   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":8512:8514   */\n      0x20\n        /* \"#utility.yul\":8504:8510   */\n      dup3\n        /* \"#utility.yul\":8500:8515   */\n      add\n        /* \"#utility.yul\":8493:8535   */\n      mstore\n        /* \"#utility.yul\":8308:8542   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8548:8914   */\n    tag_258:\n        /* \"#utility.yul\":8690:8693   */\n      0x00\n        /* \"#utility.yul\":8711:8778   */\n      tag_383\n        /* \"#utility.yul\":8775:8777   */\n      0x2f\n        /* \"#utility.yul\":8770:8773   */\n      dup4\n        /* \"#utility.yul\":8711:8778   */\n      tag_256\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8704:8778   */\n      swap2\n      pop\n        /* \"#utility.yul\":8787:8880   */\n      tag_384\n        /* \"#utility.yul\":8876:8879   */\n      dup3\n        /* \"#utility.yul\":8787:8880   */\n      tag_257\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8905:8907   */\n      0x40\n        /* \"#utility.yul\":8900:8903   */\n      dup3\n        /* \"#utility.yul\":8896:8908   */\n      add\n        /* \"#utility.yul\":8889:8908   */\n      swap1\n      pop\n        /* \"#utility.yul\":8548:8914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8920:9339   */\n    tag_124:\n        /* \"#utility.yul\":9086:9090   */\n      0x00\n        /* \"#utility.yul\":9124:9126   */\n      0x20\n        /* \"#utility.yul\":9113:9122   */\n      dup3\n        /* \"#utility.yul\":9109:9127   */\n      add\n        /* \"#utility.yul\":9101:9127   */\n      swap1\n      pop\n        /* \"#utility.yul\":9173:9182   */\n      dup2\n        /* \"#utility.yul\":9167:9171   */\n      dup2\n        /* \"#utility.yul\":9163:9183   */\n      sub\n        /* \"#utility.yul\":9159:9160   */\n      0x00\n        /* \"#utility.yul\":9148:9157   */\n      dup4\n        /* \"#utility.yul\":9144:9161   */\n      add\n        /* \"#utility.yul\":9137:9184   */\n      mstore\n        /* \"#utility.yul\":9201:9332   */\n      tag_386\n        /* \"#utility.yul\":9327:9331   */\n      dup2\n        /* \"#utility.yul\":9201:9332   */\n      tag_258\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":9193:9332   */\n      swap1\n      pop\n        /* \"#utility.yul\":8920:9339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9345:9570   */\n    tag_259:\n        /* \"#utility.yul\":9485:9519   */\n      0x526573657276653a2063616c6c6572206973206e6f742074686520696e697469\n        /* \"#utility.yul\":9481:9482   */\n      0x00\n        /* \"#utility.yul\":9473:9479   */\n      dup3\n        /* \"#utility.yul\":9469:9483   */\n      add\n        /* \"#utility.yul\":9462:9520   */\n      mstore\n        /* \"#utility.yul\":9554:9562   */\n      0x616c697a65720000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9549:9551   */\n      0x20\n        /* \"#utility.yul\":9541:9547   */\n      dup3\n        /* \"#utility.yul\":9537:9552   */\n      add\n        /* \"#utility.yul\":9530:9563   */\n      mstore\n        /* \"#utility.yul\":9345:9570   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9576:9942   */\n    tag_260:\n        /* \"#utility.yul\":9718:9721   */\n      0x00\n        /* \"#utility.yul\":9739:9806   */\n      tag_389\n        /* \"#utility.yul\":9803:9805   */\n      0x26\n        /* \"#utility.yul\":9798:9801   */\n      dup4\n        /* \"#utility.yul\":9739:9806   */\n      tag_256\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9732:9806   */\n      swap2\n      pop\n        /* \"#utility.yul\":9815:9908   */\n      tag_390\n        /* \"#utility.yul\":9904:9907   */\n      dup3\n        /* \"#utility.yul\":9815:9908   */\n      tag_259\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9933:9935   */\n      0x40\n        /* \"#utility.yul\":9928:9931   */\n      dup3\n        /* \"#utility.yul\":9924:9936   */\n      add\n        /* \"#utility.yul\":9917:9936   */\n      swap1\n      pop\n        /* \"#utility.yul\":9576:9942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9948:10367   */\n    tag_138:\n        /* \"#utility.yul\":10114:10118   */\n      0x00\n        /* \"#utility.yul\":10152:10154   */\n      0x20\n        /* \"#utility.yul\":10141:10150   */\n      dup3\n        /* \"#utility.yul\":10137:10155   */\n      add\n        /* \"#utility.yul\":10129:10155   */\n      swap1\n      pop\n        /* \"#utility.yul\":10201:10210   */\n      dup2\n        /* \"#utility.yul\":10195:10199   */\n      dup2\n        /* \"#utility.yul\":10191:10211   */\n      sub\n        /* \"#utility.yul\":10187:10188   */\n      0x00\n        /* \"#utility.yul\":10176:10185   */\n      dup4\n        /* \"#utility.yul\":10172:10189   */\n      add\n        /* \"#utility.yul\":10165:10212   */\n      mstore\n        /* \"#utility.yul\":10229:10360   */\n      tag_392\n        /* \"#utility.yul\":10355:10359   */\n      dup2\n        /* \"#utility.yul\":10229:10360   */\n      tag_260\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":10221:10360   */\n      swap1\n      pop\n        /* \"#utility.yul\":9948:10367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10373:10555   */\n    tag_261:\n        /* \"#utility.yul\":10513:10547   */\n      0x526573657276653a20696e76616c696420436f6e74726f6c2061646472657373\n        /* \"#utility.yul\":10509:10510   */\n      0x00\n        /* \"#utility.yul\":10501:10507   */\n      dup3\n        /* \"#utility.yul\":10497:10511   */\n      add\n        /* \"#utility.yul\":10490:10548   */\n      mstore\n        /* \"#utility.yul\":10373:10555   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10561:10927   */\n    tag_262:\n        /* \"#utility.yul\":10703:10706   */\n      0x00\n        /* \"#utility.yul\":10724:10791   */\n      tag_395\n        /* \"#utility.yul\":10788:10790   */\n      0x20\n        /* \"#utility.yul\":10783:10786   */\n      dup4\n        /* \"#utility.yul\":10724:10791   */\n      tag_256\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":10717:10791   */\n      swap2\n      pop\n        /* \"#utility.yul\":10800:10893   */\n      tag_396\n        /* \"#utility.yul\":10889:10892   */\n      dup3\n        /* \"#utility.yul\":10800:10893   */\n      tag_261\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":10918:10920   */\n      0x20\n        /* \"#utility.yul\":10913:10916   */\n      dup3\n        /* \"#utility.yul\":10909:10921   */\n      add\n        /* \"#utility.yul\":10902:10921   */\n      swap1\n      pop\n        /* \"#utility.yul\":10561:10927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10933:11352   */\n    tag_141:\n        /* \"#utility.yul\":11099:11103   */\n      0x00\n        /* \"#utility.yul\":11137:11139   */\n      0x20\n        /* \"#utility.yul\":11126:11135   */\n      dup3\n        /* \"#utility.yul\":11122:11140   */\n      add\n        /* \"#utility.yul\":11114:11140   */\n      swap1\n      pop\n        /* \"#utility.yul\":11186:11195   */\n      dup2\n        /* \"#utility.yul\":11180:11184   */\n      dup2\n        /* \"#utility.yul\":11176:11196   */\n      sub\n        /* \"#utility.yul\":11172:11173   */\n      0x00\n        /* \"#utility.yul\":11161:11170   */\n      dup4\n        /* \"#utility.yul\":11157:11174   */\n      add\n        /* \"#utility.yul\":11150:11197   */\n      mstore\n        /* \"#utility.yul\":11214:11345   */\n      tag_398\n        /* \"#utility.yul\":11340:11344   */\n      dup2\n        /* \"#utility.yul\":11214:11345   */\n      tag_262\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":11206:11345   */\n      swap1\n      pop\n        /* \"#utility.yul\":10933:11352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11358:11501   */\n    tag_263:\n        /* \"#utility.yul\":11415:11420   */\n      0x00\n        /* \"#utility.yul\":11446:11452   */\n      dup2\n        /* \"#utility.yul\":11440:11453   */\n      mload\n        /* \"#utility.yul\":11431:11453   */\n      swap1\n      pop\n        /* \"#utility.yul\":11462:11495   */\n      tag_400\n        /* \"#utility.yul\":11489:11494   */\n      dup2\n        /* \"#utility.yul\":11462:11495   */\n      tag_249\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":11358:11501   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11507:11858   */\n    tag_152:\n        /* \"#utility.yul\":11577:11583   */\n      0x00\n        /* \"#utility.yul\":11626:11628   */\n      0x20\n        /* \"#utility.yul\":11614:11623   */\n      dup3\n        /* \"#utility.yul\":11605:11612   */\n      dup5\n        /* \"#utility.yul\":11601:11624   */\n      sub\n        /* \"#utility.yul\":11597:11629   */\n      slt\n        /* \"#utility.yul\":11594:11713   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":11632:11711   */\n      tag_403\n      tag_236\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":11594:11713   */\n    tag_402:\n        /* \"#utility.yul\":11752:11753   */\n      0x00\n        /* \"#utility.yul\":11777:11841   */\n      tag_404\n        /* \"#utility.yul\":11833:11840   */\n      dup5\n        /* \"#utility.yul\":11824:11830   */\n      dup3\n        /* \"#utility.yul\":11813:11822   */\n      dup6\n        /* \"#utility.yul\":11809:11831   */\n      add\n        /* \"#utility.yul\":11777:11841   */\n      tag_263\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":11767:11841   */\n      swap2\n      pop\n        /* \"#utility.yul\":11723:11851   */\n      pop\n        /* \"#utility.yul\":11507:11858   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11864:11978   */\n    tag_264:\n        /* \"#utility.yul\":11901:11908   */\n      0x00\n        /* \"#utility.yul\":11941:11971   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11934:11939   */\n      dup3\n        /* \"#utility.yul\":11930:11972   */\n      and\n        /* \"#utility.yul\":11919:11972   */\n      swap1\n      pop\n        /* \"#utility.yul\":11864:11978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11984:12106   */\n    tag_265:\n        /* \"#utility.yul\":12057:12081   */\n      tag_407\n        /* \"#utility.yul\":12075:12080   */\n      dup2\n        /* \"#utility.yul\":12057:12081   */\n      tag_264\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":12050:12055   */\n      dup2\n        /* \"#utility.yul\":12047:12082   */\n      eq\n        /* \"#utility.yul\":12037:12100   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":12096:12097   */\n      0x00\n        /* \"#utility.yul\":12093:12094   */\n      dup1\n        /* \"#utility.yul\":12086:12098   */\n      revert\n        /* \"#utility.yul\":12037:12100   */\n    tag_408:\n        /* \"#utility.yul\":11984:12106   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12112:12255   */\n    tag_266:\n        /* \"#utility.yul\":12169:12174   */\n      0x00\n        /* \"#utility.yul\":12200:12206   */\n      dup2\n        /* \"#utility.yul\":12194:12207   */\n      mload\n        /* \"#utility.yul\":12185:12207   */\n      swap1\n      pop\n        /* \"#utility.yul\":12216:12249   */\n      tag_410\n        /* \"#utility.yul\":12243:12248   */\n      dup2\n        /* \"#utility.yul\":12216:12249   */\n      tag_265\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":12112:12255   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12261:12354   */\n    tag_267:\n        /* \"#utility.yul\":12297:12304   */\n      0x00\n        /* \"#utility.yul\":12337:12347   */\n      0xffffffff\n        /* \"#utility.yul\":12330:12335   */\n      dup3\n        /* \"#utility.yul\":12326:12348   */\n      and\n        /* \"#utility.yul\":12315:12348   */\n      swap1\n      pop\n        /* \"#utility.yul\":12261:12354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12360:12480   */\n    tag_268:\n        /* \"#utility.yul\":12432:12455   */\n      tag_413\n        /* \"#utility.yul\":12449:12454   */\n      dup2\n        /* \"#utility.yul\":12432:12455   */\n      tag_267\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":12425:12430   */\n      dup2\n        /* \"#utility.yul\":12422:12456   */\n      eq\n        /* \"#utility.yul\":12412:12474   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":12470:12471   */\n      0x00\n        /* \"#utility.yul\":12467:12468   */\n      dup1\n        /* \"#utility.yul\":12460:12472   */\n      revert\n        /* \"#utility.yul\":12412:12474   */\n    tag_414:\n        /* \"#utility.yul\":12360:12480   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12486:12627   */\n    tag_269:\n        /* \"#utility.yul\":12542:12547   */\n      0x00\n        /* \"#utility.yul\":12573:12579   */\n      dup2\n        /* \"#utility.yul\":12567:12580   */\n      mload\n        /* \"#utility.yul\":12558:12580   */\n      swap1\n      pop\n        /* \"#utility.yul\":12589:12621   */\n      tag_416\n        /* \"#utility.yul\":12615:12620   */\n      dup2\n        /* \"#utility.yul\":12589:12621   */\n      tag_268\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":12486:12627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12633:13294   */\n    tag_156:\n        /* \"#utility.yul\":12720:12726   */\n      0x00\n        /* \"#utility.yul\":12728:12734   */\n      dup1\n        /* \"#utility.yul\":12736:12742   */\n      0x00\n        /* \"#utility.yul\":12785:12787   */\n      0x60\n        /* \"#utility.yul\":12773:12782   */\n      dup5\n        /* \"#utility.yul\":12764:12771   */\n      dup7\n        /* \"#utility.yul\":12760:12783   */\n      sub\n        /* \"#utility.yul\":12756:12788   */\n      slt\n        /* \"#utility.yul\":12753:12872   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":12791:12870   */\n      tag_419\n      tag_236\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12753:12872   */\n    tag_418:\n        /* \"#utility.yul\":12911:12912   */\n      0x00\n        /* \"#utility.yul\":12936:13000   */\n      tag_420\n        /* \"#utility.yul\":12992:12999   */\n      dup7\n        /* \"#utility.yul\":12983:12989   */\n      dup3\n        /* \"#utility.yul\":12972:12981   */\n      dup8\n        /* \"#utility.yul\":12968:12990   */\n      add\n        /* \"#utility.yul\":12936:13000   */\n      tag_266\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":12926:13000   */\n      swap4\n      pop\n        /* \"#utility.yul\":12882:13010   */\n      pop\n        /* \"#utility.yul\":13049:13051   */\n      0x20\n        /* \"#utility.yul\":13075:13139   */\n      tag_421\n        /* \"#utility.yul\":13131:13138   */\n      dup7\n        /* \"#utility.yul\":13122:13128   */\n      dup3\n        /* \"#utility.yul\":13111:13120   */\n      dup8\n        /* \"#utility.yul\":13107:13129   */\n      add\n        /* \"#utility.yul\":13075:13139   */\n      tag_266\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":13065:13139   */\n      swap3\n      pop\n        /* \"#utility.yul\":13020:13149   */\n      pop\n        /* \"#utility.yul\":13188:13190   */\n      0x40\n        /* \"#utility.yul\":13214:13277   */\n      tag_422\n        /* \"#utility.yul\":13269:13276   */\n      dup7\n        /* \"#utility.yul\":13260:13266   */\n      dup3\n        /* \"#utility.yul\":13249:13258   */\n      dup8\n        /* \"#utility.yul\":13245:13267   */\n      add\n        /* \"#utility.yul\":13214:13277   */\n      tag_269\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":13204:13277   */\n      swap2\n      pop\n        /* \"#utility.yul\":13159:13287   */\n      pop\n        /* \"#utility.yul\":12633:13294   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":13300:13480   */\n    tag_167:\n        /* \"#utility.yul\":13348:13425   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13345:13346   */\n      0x00\n        /* \"#utility.yul\":13338:13426   */\n      mstore\n        /* \"#utility.yul\":13445:13449   */\n      0x41\n        /* \"#utility.yul\":13442:13443   */\n      0x04\n        /* \"#utility.yul\":13435:13450   */\n      mstore\n        /* \"#utility.yul\":13469:13473   */\n      0x24\n        /* \"#utility.yul\":13466:13467   */\n      0x00\n        /* \"#utility.yul\":13459:13474   */\n      revert\n        /* \"#utility.yul\":13486:13584   */\n    tag_270:\n        /* \"#utility.yul\":13537:13543   */\n      0x00\n        /* \"#utility.yul\":13571:13576   */\n      dup2\n        /* \"#utility.yul\":13565:13577   */\n      mload\n        /* \"#utility.yul\":13555:13577   */\n      swap1\n      pop\n        /* \"#utility.yul\":13486:13584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13590:13737   */\n    tag_271:\n        /* \"#utility.yul\":13691:13702   */\n      0x00\n        /* \"#utility.yul\":13728:13731   */\n      dup2\n        /* \"#utility.yul\":13713:13731   */\n      swap1\n      pop\n        /* \"#utility.yul\":13590:13737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13743:13989   */\n    tag_272:\n        /* \"#utility.yul\":13824:13825   */\n      0x00\n        /* \"#utility.yul\":13834:13947   */\n    tag_427:\n        /* \"#utility.yul\":13848:13854   */\n      dup4\n        /* \"#utility.yul\":13845:13846   */\n      dup2\n        /* \"#utility.yul\":13842:13855   */\n      lt\n        /* \"#utility.yul\":13834:13947   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":13933:13934   */\n      dup1\n        /* \"#utility.yul\":13928:13931   */\n      dup3\n        /* \"#utility.yul\":13924:13935   */\n      add\n        /* \"#utility.yul\":13918:13936   */\n      mload\n        /* \"#utility.yul\":13914:13915   */\n      dup2\n        /* \"#utility.yul\":13909:13912   */\n      dup5\n        /* \"#utility.yul\":13905:13916   */\n      add\n        /* \"#utility.yul\":13898:13937   */\n      mstore\n        /* \"#utility.yul\":13870:13872   */\n      0x20\n        /* \"#utility.yul\":13867:13868   */\n      dup2\n        /* \"#utility.yul\":13863:13873   */\n      add\n        /* \"#utility.yul\":13858:13873   */\n      swap1\n      pop\n        /* \"#utility.yul\":13834:13947   */\n      jump(tag_427)\n    tag_429:\n        /* \"#utility.yul\":13981:13982   */\n      0x00\n        /* \"#utility.yul\":13972:13978   */\n      dup5\n        /* \"#utility.yul\":13967:13970   */\n      dup5\n        /* \"#utility.yul\":13963:13979   */\n      add\n        /* \"#utility.yul\":13956:13983   */\n      mstore\n        /* \"#utility.yul\":13805:13989   */\n      pop\n        /* \"#utility.yul\":13743:13989   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13995:14381   */\n    tag_273:\n        /* \"#utility.yul\":14099:14102   */\n      0x00\n        /* \"#utility.yul\":14127:14165   */\n      tag_431\n        /* \"#utility.yul\":14159:14164   */\n      dup3\n        /* \"#utility.yul\":14127:14165   */\n      tag_270\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":14181:14269   */\n      tag_432\n        /* \"#utility.yul\":14262:14268   */\n      dup2\n        /* \"#utility.yul\":14257:14260   */\n      dup6\n        /* \"#utility.yul\":14181:14269   */\n      tag_271\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":14174:14269   */\n      swap4\n      pop\n        /* \"#utility.yul\":14278:14343   */\n      tag_433\n        /* \"#utility.yul\":14336:14342   */\n      dup2\n        /* \"#utility.yul\":14331:14334   */\n      dup6\n        /* \"#utility.yul\":14324:14328   */\n      0x20\n        /* \"#utility.yul\":14317:14322   */\n      dup7\n        /* \"#utility.yul\":14313:14329   */\n      add\n        /* \"#utility.yul\":14278:14343   */\n      tag_272\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":14368:14374   */\n      dup1\n        /* \"#utility.yul\":14363:14366   */\n      dup5\n        /* \"#utility.yul\":14359:14375   */\n      add\n        /* \"#utility.yul\":14352:14375   */\n      swap2\n      pop\n        /* \"#utility.yul\":14103:14381   */\n      pop\n        /* \"#utility.yul\":13995:14381   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14387:14658   */\n    tag_170:\n        /* \"#utility.yul\":14517:14520   */\n      0x00\n        /* \"#utility.yul\":14539:14632   */\n      tag_435\n        /* \"#utility.yul\":14628:14631   */\n      dup3\n        /* \"#utility.yul\":14619:14625   */\n      dup5\n        /* \"#utility.yul\":14539:14632   */\n      tag_273\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14532:14632   */\n      swap2\n      pop\n        /* \"#utility.yul\":14649:14652   */\n      dup2\n        /* \"#utility.yul\":14642:14652   */\n      swap1\n      pop\n        /* \"#utility.yul\":14387:14658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14664:14896   */\n    tag_274:\n        /* \"#utility.yul\":14804:14838   */\n      0x536166654554483a3a736166655472616e736665724554483a20455448207472\n        /* \"#utility.yul\":14800:14801   */\n      0x00\n        /* \"#utility.yul\":14792:14798   */\n      dup3\n        /* \"#utility.yul\":14788:14802   */\n      add\n        /* \"#utility.yul\":14781:14839   */\n      mstore\n        /* \"#utility.yul\":14873:14888   */\n      0x616e73666572206661696c656400000000000000000000000000000000000000\n        /* \"#utility.yul\":14868:14870   */\n      0x20\n        /* \"#utility.yul\":14860:14866   */\n      dup3\n        /* \"#utility.yul\":14856:14871   */\n      add\n        /* \"#utility.yul\":14849:14889   */\n      mstore\n        /* \"#utility.yul\":14664:14896   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14902:15268   */\n    tag_275:\n        /* \"#utility.yul\":15044:15047   */\n      0x00\n        /* \"#utility.yul\":15065:15132   */\n      tag_438\n        /* \"#utility.yul\":15129:15131   */\n      0x2d\n        /* \"#utility.yul\":15124:15127   */\n      dup4\n        /* \"#utility.yul\":15065:15132   */\n      tag_256\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":15058:15132   */\n      swap2\n      pop\n        /* \"#utility.yul\":15141:15234   */\n      tag_439\n        /* \"#utility.yul\":15230:15233   */\n      dup3\n        /* \"#utility.yul\":15141:15234   */\n      tag_274\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":15259:15261   */\n      0x40\n        /* \"#utility.yul\":15254:15257   */\n      dup3\n        /* \"#utility.yul\":15250:15262   */\n      add\n        /* \"#utility.yul\":15243:15262   */\n      swap1\n      pop\n        /* \"#utility.yul\":14902:15268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15274:15693   */\n    tag_176:\n        /* \"#utility.yul\":15440:15444   */\n      0x00\n        /* \"#utility.yul\":15478:15480   */\n      0x20\n        /* \"#utility.yul\":15467:15476   */\n      dup3\n        /* \"#utility.yul\":15463:15481   */\n      add\n        /* \"#utility.yul\":15455:15481   */\n      swap1\n      pop\n        /* \"#utility.yul\":15527:15536   */\n      dup2\n        /* \"#utility.yul\":15521:15525   */\n      dup2\n        /* \"#utility.yul\":15517:15537   */\n      sub\n        /* \"#utility.yul\":15513:15514   */\n      0x00\n        /* \"#utility.yul\":15502:15511   */\n      dup4\n        /* \"#utility.yul\":15498:15515   */\n      add\n        /* \"#utility.yul\":15491:15538   */\n      mstore\n        /* \"#utility.yul\":15555:15686   */\n      tag_441\n        /* \"#utility.yul\":15681:15685   */\n      dup2\n        /* \"#utility.yul\":15555:15686   */\n      tag_275\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":15547:15686   */\n      swap1\n      pop\n        /* \"#utility.yul\":15274:15693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15699:16031   */\n    tag_187:\n        /* \"#utility.yul\":15820:15824   */\n      0x00\n        /* \"#utility.yul\":15858:15860   */\n      0x40\n        /* \"#utility.yul\":15847:15856   */\n      dup3\n        /* \"#utility.yul\":15843:15861   */\n      add\n        /* \"#utility.yul\":15835:15861   */\n      swap1\n      pop\n        /* \"#utility.yul\":15871:15942   */\n      tag_443\n        /* \"#utility.yul\":15939:15940   */\n      0x00\n        /* \"#utility.yul\":15928:15937   */\n      dup4\n        /* \"#utility.yul\":15924:15941   */\n      add\n        /* \"#utility.yul\":15915:15921   */\n      dup6\n        /* \"#utility.yul\":15871:15942   */\n      tag_232\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":15952:16024   */\n      tag_444\n        /* \"#utility.yul\":16020:16022   */\n      0x20\n        /* \"#utility.yul\":16009:16018   */\n      dup4\n        /* \"#utility.yul\":16005:16023   */\n      add\n        /* \"#utility.yul\":15996:16002   */\n      dup5\n        /* \"#utility.yul\":15952:16024   */\n      tag_232\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15699:16031   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16037:16210   */\n    tag_276:\n        /* \"#utility.yul\":16177:16202   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":16173:16174   */\n      0x00\n        /* \"#utility.yul\":16165:16171   */\n      dup3\n        /* \"#utility.yul\":16161:16175   */\n      add\n        /* \"#utility.yul\":16154:16203   */\n      mstore\n        /* \"#utility.yul\":16037:16210   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16216:16618   */\n    tag_277:\n        /* \"#utility.yul\":16376:16379   */\n      0x00\n        /* \"#utility.yul\":16397:16482   */\n      tag_447\n        /* \"#utility.yul\":16479:16481   */\n      0x17\n        /* \"#utility.yul\":16474:16477   */\n      dup4\n        /* \"#utility.yul\":16397:16482   */\n      tag_253\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":16390:16482   */\n      swap2\n      pop\n        /* \"#utility.yul\":16491:16584   */\n      tag_448\n        /* \"#utility.yul\":16580:16583   */\n      dup3\n        /* \"#utility.yul\":16491:16584   */\n      tag_276\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":16609:16611   */\n      0x17\n        /* \"#utility.yul\":16604:16607   */\n      dup3\n        /* \"#utility.yul\":16600:16612   */\n      add\n        /* \"#utility.yul\":16593:16612   */\n      swap1\n      pop\n        /* \"#utility.yul\":16216:16618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16624:16723   */\n    tag_278:\n        /* \"#utility.yul\":16676:16682   */\n      0x00\n        /* \"#utility.yul\":16710:16715   */\n      dup2\n        /* \"#utility.yul\":16704:16716   */\n      mload\n        /* \"#utility.yul\":16694:16716   */\n      swap1\n      pop\n        /* \"#utility.yul\":16624:16723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16729:17119   */\n    tag_279:\n        /* \"#utility.yul\":16835:16838   */\n      0x00\n        /* \"#utility.yul\":16863:16902   */\n      tag_451\n        /* \"#utility.yul\":16896:16901   */\n      dup3\n        /* \"#utility.yul\":16863:16902   */\n      tag_278\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":16918:17007   */\n      tag_452\n        /* \"#utility.yul\":17000:17006   */\n      dup2\n        /* \"#utility.yul\":16995:16998   */\n      dup6\n        /* \"#utility.yul\":16918:17007   */\n      tag_253\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":16911:17007   */\n      swap4\n      pop\n        /* \"#utility.yul\":17016:17081   */\n      tag_453\n        /* \"#utility.yul\":17074:17080   */\n      dup2\n        /* \"#utility.yul\":17069:17072   */\n      dup6\n        /* \"#utility.yul\":17062:17066   */\n      0x20\n        /* \"#utility.yul\":17055:17060   */\n      dup7\n        /* \"#utility.yul\":17051:17067   */\n      add\n        /* \"#utility.yul\":17016:17081   */\n      tag_272\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":17106:17112   */\n      dup1\n        /* \"#utility.yul\":17101:17104   */\n      dup5\n        /* \"#utility.yul\":17097:17113   */\n      add\n        /* \"#utility.yul\":17090:17113   */\n      swap2\n      pop\n        /* \"#utility.yul\":16839:17119   */\n      pop\n        /* \"#utility.yul\":16729:17119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17125:17292   */\n    tag_280:\n        /* \"#utility.yul\":17265:17284   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":17261:17262   */\n      0x00\n        /* \"#utility.yul\":17253:17259   */\n      dup3\n        /* \"#utility.yul\":17249:17263   */\n      add\n        /* \"#utility.yul\":17242:17285   */\n      mstore\n        /* \"#utility.yul\":17125:17292   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17298:17700   */\n    tag_281:\n        /* \"#utility.yul\":17458:17461   */\n      0x00\n        /* \"#utility.yul\":17479:17564   */\n      tag_456\n        /* \"#utility.yul\":17561:17563   */\n      0x11\n        /* \"#utility.yul\":17556:17559   */\n      dup4\n        /* \"#utility.yul\":17479:17564   */\n      tag_253\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":17472:17564   */\n      swap2\n      pop\n        /* \"#utility.yul\":17573:17666   */\n      tag_457\n        /* \"#utility.yul\":17662:17665   */\n      dup3\n        /* \"#utility.yul\":17573:17666   */\n      tag_280\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":17691:17693   */\n      0x11\n        /* \"#utility.yul\":17686:17689   */\n      dup3\n        /* \"#utility.yul\":17682:17694   */\n      add\n        /* \"#utility.yul\":17675:17694   */\n      swap1\n      pop\n        /* \"#utility.yul\":17298:17700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17706:18673   */\n    tag_199:\n        /* \"#utility.yul\":18088:18091   */\n      0x00\n        /* \"#utility.yul\":18110:18258   */\n      tag_459\n        /* \"#utility.yul\":18254:18257   */\n      dup3\n        /* \"#utility.yul\":18110:18258   */\n      tag_277\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":18103:18258   */\n      swap2\n      pop\n        /* \"#utility.yul\":18275:18370   */\n      tag_460\n        /* \"#utility.yul\":18366:18369   */\n      dup3\n        /* \"#utility.yul\":18357:18363   */\n      dup6\n        /* \"#utility.yul\":18275:18370   */\n      tag_279\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":18268:18370   */\n      swap2\n      pop\n        /* \"#utility.yul\":18387:18535   */\n      tag_461\n        /* \"#utility.yul\":18531:18534   */\n      dup3\n        /* \"#utility.yul\":18387:18535   */\n      tag_281\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":18380:18535   */\n      swap2\n      pop\n        /* \"#utility.yul\":18552:18647   */\n      tag_462\n        /* \"#utility.yul\":18643:18646   */\n      dup3\n        /* \"#utility.yul\":18634:18640   */\n      dup5\n        /* \"#utility.yul\":18552:18647   */\n      tag_279\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":18545:18647   */\n      swap2\n      pop\n        /* \"#utility.yul\":18664:18667   */\n      dup2\n        /* \"#utility.yul\":18657:18667   */\n      swap1\n      pop\n        /* \"#utility.yul\":17706:18673   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18679:18781   */\n    tag_282:\n        /* \"#utility.yul\":18720:18726   */\n      0x00\n        /* \"#utility.yul\":18771:18773   */\n      0x1f\n        /* \"#utility.yul\":18767:18774   */\n      not\n        /* \"#utility.yul\":18762:18764   */\n      0x1f\n        /* \"#utility.yul\":18755:18760   */\n      dup4\n        /* \"#utility.yul\":18751:18765   */\n      add\n        /* \"#utility.yul\":18747:18775   */\n      and\n        /* \"#utility.yul\":18737:18775   */\n      swap1\n      pop\n        /* \"#utility.yul\":18679:18781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18787:19164   */\n    tag_283:\n        /* \"#utility.yul\":18875:18878   */\n      0x00\n        /* \"#utility.yul\":18903:18942   */\n      tag_465\n        /* \"#utility.yul\":18936:18941   */\n      dup3\n        /* \"#utility.yul\":18903:18942   */\n      tag_278\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":18958:19029   */\n      tag_466\n        /* \"#utility.yul\":19022:19028   */\n      dup2\n        /* \"#utility.yul\":19017:19020   */\n      dup6\n        /* \"#utility.yul\":18958:19029   */\n      tag_256\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":18951:19029   */\n      swap4\n      pop\n        /* \"#utility.yul\":19038:19103   */\n      tag_467\n        /* \"#utility.yul\":19096:19102   */\n      dup2\n        /* \"#utility.yul\":19091:19094   */\n      dup6\n        /* \"#utility.yul\":19084:19088   */\n      0x20\n        /* \"#utility.yul\":19077:19082   */\n      dup7\n        /* \"#utility.yul\":19073:19089   */\n      add\n        /* \"#utility.yul\":19038:19103   */\n      tag_272\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":19128:19157   */\n      tag_468\n        /* \"#utility.yul\":19150:19156   */\n      dup2\n        /* \"#utility.yul\":19128:19157   */\n      tag_282\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":19123:19126   */\n      dup5\n        /* \"#utility.yul\":19119:19158   */\n      add\n        /* \"#utility.yul\":19112:19158   */\n      swap2\n      pop\n        /* \"#utility.yul\":18879:19164   */\n      pop\n        /* \"#utility.yul\":18787:19164   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19170:19483   */\n    tag_201:\n        /* \"#utility.yul\":19283:19287   */\n      0x00\n        /* \"#utility.yul\":19321:19323   */\n      0x20\n        /* \"#utility.yul\":19310:19319   */\n      dup3\n        /* \"#utility.yul\":19306:19324   */\n      add\n        /* \"#utility.yul\":19298:19324   */\n      swap1\n      pop\n        /* \"#utility.yul\":19370:19379   */\n      dup2\n        /* \"#utility.yul\":19364:19368   */\n      dup2\n        /* \"#utility.yul\":19360:19380   */\n      sub\n        /* \"#utility.yul\":19356:19357   */\n      0x00\n        /* \"#utility.yul\":19345:19354   */\n      dup4\n        /* \"#utility.yul\":19341:19358   */\n      add\n        /* \"#utility.yul\":19334:19381   */\n      mstore\n        /* \"#utility.yul\":19398:19476   */\n      tag_470\n        /* \"#utility.yul\":19471:19475   */\n      dup2\n        /* \"#utility.yul\":19462:19468   */\n      dup5\n        /* \"#utility.yul\":19398:19476   */\n      tag_283\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":19390:19476   */\n      swap1\n      pop\n        /* \"#utility.yul\":19170:19483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19489:19680   */\n    tag_207:\n        /* \"#utility.yul\":19529:19532   */\n      0x00\n        /* \"#utility.yul\":19548:19568   */\n      tag_472\n        /* \"#utility.yul\":19566:19567   */\n      dup3\n        /* \"#utility.yul\":19548:19568   */\n      tag_233\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":19543:19568   */\n      swap2\n      pop\n        /* \"#utility.yul\":19582:19602   */\n      tag_473\n        /* \"#utility.yul\":19600:19601   */\n      dup4\n        /* \"#utility.yul\":19582:19602   */\n      tag_233\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":19577:19602   */\n      swap3\n      pop\n        /* \"#utility.yul\":19625:19626   */\n      dup3\n        /* \"#utility.yul\":19622:19623   */\n      dup3\n        /* \"#utility.yul\":19618:19627   */\n      add\n        /* \"#utility.yul\":19611:19627   */\n      swap1\n      pop\n        /* \"#utility.yul\":19646:19649   */\n      dup1\n        /* \"#utility.yul\":19643:19644   */\n      dup3\n        /* \"#utility.yul\":19640:19650   */\n      gt\n        /* \"#utility.yul\":19637:19673   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":19653:19671   */\n      tag_475\n      tag_251\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":19637:19673   */\n    tag_474:\n        /* \"#utility.yul\":19489:19680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19686:19866   */\n    tag_213:\n        /* \"#utility.yul\":19734:19811   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19731:19732   */\n      0x00\n        /* \"#utility.yul\":19724:19812   */\n      mstore\n        /* \"#utility.yul\":19831:19835   */\n      0x32\n        /* \"#utility.yul\":19828:19829   */\n      0x04\n        /* \"#utility.yul\":19821:19836   */\n      mstore\n        /* \"#utility.yul\":19855:19859   */\n      0x24\n        /* \"#utility.yul\":19852:19853   */\n      0x00\n        /* \"#utility.yul\":19845:19860   */\n      revert\n        /* \"#utility.yul\":19872:20043   */\n    tag_226:\n        /* \"#utility.yul\":19911:19914   */\n      0x00\n        /* \"#utility.yul\":19934:19958   */\n      tag_478\n        /* \"#utility.yul\":19952:19957   */\n      dup3\n        /* \"#utility.yul\":19934:19958   */\n      tag_233\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":19925:19958   */\n      swap2\n      pop\n        /* \"#utility.yul\":19980:19984   */\n      0x00\n        /* \"#utility.yul\":19973:19978   */\n      dup3\n        /* \"#utility.yul\":19970:19985   */\n      sub\n        /* \"#utility.yul\":19967:20008   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":19988:20006   */\n      tag_480\n      tag_251\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":19967:20008   */\n    tag_479:\n        /* \"#utility.yul\":20035:20036   */\n      0x01\n        /* \"#utility.yul\":20028:20033   */\n      dup3\n        /* \"#utility.yul\":20024:20037   */\n      sub\n        /* \"#utility.yul\":20017:20037   */\n      swap1\n      pop\n        /* \"#utility.yul\":19872:20043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20049:20231   */\n    tag_284:\n        /* \"#utility.yul\":20189:20223   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":20185:20186   */\n      0x00\n        /* \"#utility.yul\":20177:20183   */\n      dup3\n        /* \"#utility.yul\":20173:20187   */\n      add\n        /* \"#utility.yul\":20166:20224   */\n      mstore\n        /* \"#utility.yul\":20049:20231   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20237:20603   */\n    tag_285:\n        /* \"#utility.yul\":20379:20382   */\n      0x00\n        /* \"#utility.yul\":20400:20467   */\n      tag_483\n        /* \"#utility.yul\":20464:20466   */\n      0x20\n        /* \"#utility.yul\":20459:20462   */\n      dup4\n        /* \"#utility.yul\":20400:20467   */\n      tag_256\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":20393:20467   */\n      swap2\n      pop\n        /* \"#utility.yul\":20476:20569   */\n      tag_484\n        /* \"#utility.yul\":20565:20568   */\n      dup3\n        /* \"#utility.yul\":20476:20569   */\n      tag_284\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":20594:20596   */\n      0x20\n        /* \"#utility.yul\":20589:20592   */\n      dup3\n        /* \"#utility.yul\":20585:20597   */\n      add\n        /* \"#utility.yul\":20578:20597   */\n      swap1\n      pop\n        /* \"#utility.yul\":20237:20603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20609:21028   */\n    tag_229:\n        /* \"#utility.yul\":20775:20779   */\n      0x00\n        /* \"#utility.yul\":20813:20815   */\n      0x20\n        /* \"#utility.yul\":20802:20811   */\n      dup3\n        /* \"#utility.yul\":20798:20816   */\n      add\n        /* \"#utility.yul\":20790:20816   */\n      swap1\n      pop\n        /* \"#utility.yul\":20862:20871   */\n      dup2\n        /* \"#utility.yul\":20856:20860   */\n      dup2\n        /* \"#utility.yul\":20852:20872   */\n      sub\n        /* \"#utility.yul\":20848:20849   */\n      0x00\n        /* \"#utility.yul\":20837:20846   */\n      dup4\n        /* \"#utility.yul\":20833:20850   */\n      add\n        /* \"#utility.yul\":20826:20873   */\n      mstore\n        /* \"#utility.yul\":20890:21021   */\n      tag_486\n        /* \"#utility.yul\":21016:21020   */\n      dup2\n        /* \"#utility.yul\":20890:21021   */\n      tag_285\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":20882:21021   */\n      swap1\n      pop\n        /* \"#utility.yul\":20609:21028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200f5801ffe996bcf04a3ffbc22d90e30771361c101fb7d0f47b0b560925eae31d64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_56": {
									"entryPoint": null,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2412": {
									"entryPoint": 87,
									"id": 2412,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5061001f61005760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505061005f565b600033905090565b608051611d2561007a600039600061079a0152611d256000f3fe6080604052600436106100c65760003560e01c80638dd950021161007f578063c45a015511610059578063c45a015514610344578063c54e44eb1461036f578063d547741f1461039a578063f8c8765e146103c35761018c565b80638dd95002146102b157806391d14854146102dc578063a217fddf146103195761018c565b806301ffc9a714610191578063248a9ca3146101ce5780632e1a7d4d1461020b5780632f2ff15d1461023457806336568abe1461025d578063774237fc146102865761018c565b3661018c5760004790506000610144600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166103ec565b90507f3cadff7f9a0bf97b2f8b9629e31675770caca33d15e735652794f64acce52fa061016f610423565b348484604051610182949392919061123d565b60405180910390a1005b600080fd5b34801561019d57600080fd5b506101b860048036038101906101b391906112df565b61042b565b6040516101c59190611327565b60405180910390f35b3480156101da57600080fd5b506101f560048036038101906101f09190611378565b6104a5565b60405161020291906113b4565b60405180910390f35b34801561021757600080fd5b50610232600480360381019061022d91906113fb565b6104c4565b005b34801561024057600080fd5b5061025b60048036038101906102569190611454565b6105c8565b005b34801561026957600080fd5b50610284600480360381019061027f9190611454565b6105e9565b005b34801561029257600080fd5b5061029b61066c565b6040516102a891906113b4565b60405180910390f35b3480156102bd57600080fd5b506102c6610694565b6040516102d39190611494565b60405180910390f35b3480156102e857600080fd5b5061030360048036038101906102fe9190611454565b6106ba565b6040516103109190611327565b60405180910390f35b34801561032557600080fd5b5061032e610724565b60405161033b91906113b4565b60405180910390f35b34801561035057600080fd5b5061035961072b565b6040516103669190611494565b60405180910390f35b34801561037b57600080fd5b50610384610751565b6040516103919190611494565b60405180910390f35b3480156103a657600080fd5b506103c160048036038101906103bc9190611454565b610777565b005b3480156103cf57600080fd5b506103ea60048036038101906103e591906114af565b610798565b005b60008060006103fc8786866109c2565b9150915081818761040d9190611545565b61041791906115b6565b92505050949350505050565b600033905090565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061049e575061049d82610b2f565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b6040516020016104d39061163e565b604051602081830303815290604052805190602001206104f281610b99565b6105036104fd610423565b83610bad565b6000479050600061057c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166103ec565b90507fb450a08ba9d5bfbc195171a9f21f66b27de075c9788057b443dc147da398be5c6105a7610423565b8584846040516105ba949392919061123d565b60405180910390a150505050565b6105d1826104a5565b6105da81610b99565b6105e48383610cad565b505050565b6105f1610423565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461065e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610655906116d6565b60405180910390fd5b6106688282610d8d565b5050565b60405160200161067b9061163e565b6040516020818303038152906040528051906020012081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610780826104a5565b61078981610b99565b6107938383610d8d565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166107d7610423565b73ffffffffffffffffffffffffffffffffffffffff161461082d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082490611768565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361089c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610893906117d4565b60405180910390fd5b6108ca6040516020016108ae9061163e565b6040516020818303038152906040528051906020012084610cad565b6108de6000801b6108d9610423565b610cad565b83600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff02191690831515021790555050505050565b60008060006109d2868686610e6e565b905060008173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a459190611809565b90506000808373ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab991906118b8565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508273ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610b18578082610b1b565b81815b809650819750505050505050935093915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610baa81610ba5610423565b610ef5565b50565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff811115610be257610be161190b565b5b6040519080825280601f01601f191660200182016040528015610c145781602001600182028036833780820191505090505b50604051610c2291906119ab565b60006040518083038185875af1925050503d8060008114610c5f576040519150601f19603f3d011682016040523d82523d6000602084013e610c64565b606091505b5050905080610ca8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9f90611a34565b60405180910390fd5b505050565b610cb782826106ba565b610d8957600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d2e610423565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610d9782826106ba565b15610e6a57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e0f610423565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663e6a4390584846040518363ffffffff1660e01b8152600401610eab929190611a54565b602060405180830381865afa158015610ec8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eec9190611809565b90509392505050565b610eff82826106ba565b610f7657610f0c81610f7a565b610f1a8360001c6020610fa7565b604051602001610f2b929190611b51565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6d9190611bd5565b60405180910390fd5b5050565b6060610fa08273ffffffffffffffffffffffffffffffffffffffff16601460ff16610fa7565b9050919050565b606060006002836002610fba9190611545565b610fc49190611bf7565b67ffffffffffffffff811115610fdd57610fdc61190b565b5b6040519080825280601f01601f19166020018201604052801561100f5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061104757611046611c2b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106110ab576110aa611c2b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026110eb9190611545565b6110f59190611bf7565b90505b6001811115611195577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061113757611136611c2b565b5b1a60f81b82828151811061114e5761114d611c2b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061118e90611c5a565b90506110f8565b50600084146111d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d090611ccf565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061120e826111e3565b9050919050565b61121e81611203565b82525050565b6000819050919050565b61123781611224565b82525050565b60006080820190506112526000830187611215565b61125f602083018661122e565b61126c604083018561122e565b611279606083018461122e565b95945050505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112bc81611287565b81146112c757600080fd5b50565b6000813590506112d9816112b3565b92915050565b6000602082840312156112f5576112f4611282565b5b6000611303848285016112ca565b91505092915050565b60008115159050919050565b6113218161130c565b82525050565b600060208201905061133c6000830184611318565b92915050565b6000819050919050565b61135581611342565b811461136057600080fd5b50565b6000813590506113728161134c565b92915050565b60006020828403121561138e5761138d611282565b5b600061139c84828501611363565b91505092915050565b6113ae81611342565b82525050565b60006020820190506113c960008301846113a5565b92915050565b6113d881611224565b81146113e357600080fd5b50565b6000813590506113f5816113cf565b92915050565b60006020828403121561141157611410611282565b5b600061141f848285016113e6565b91505092915050565b61143181611203565b811461143c57600080fd5b50565b60008135905061144e81611428565b92915050565b6000806040838503121561146b5761146a611282565b5b600061147985828601611363565b925050602061148a8582860161143f565b9150509250929050565b60006020820190506114a96000830184611215565b92915050565b600080600080608085870312156114c9576114c8611282565b5b60006114d78782880161143f565b94505060206114e88782880161143f565b93505060406114f98782880161143f565b925050606061150a8782880161143f565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061155082611224565b915061155b83611224565b925082820261156981611224565b915082820484148315176115805761157f611516565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006115c182611224565b91506115cc83611224565b9250826115dc576115db611587565b5b828204905092915050565b600081905092915050565b7f43616c6c65720000000000000000000000000000000000000000000000000000600082015250565b60006116286006836115e7565b9150611633826115f2565b600682019050919050565b60006116498261161b565b9150819050919050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006116c0602f83611653565b91506116cb82611664565b604082019050919050565b600060208201905081810360008301526116ef816116b3565b9050919050565b7f526573657276653a2063616c6c6572206973206e6f742074686520696e69746960008201527f616c697a65720000000000000000000000000000000000000000000000000000602082015250565b6000611752602683611653565b915061175d826116f6565b604082019050919050565b6000602082019050818103600083015261178181611745565b9050919050565b7f526573657276653a20696e76616c696420436f6e74726f6c2061646472657373600082015250565b60006117be602083611653565b91506117c982611788565b602082019050919050565b600060208201905081810360008301526117ed816117b1565b9050919050565b60008151905061180381611428565b92915050565b60006020828403121561181f5761181e611282565b5b600061182d848285016117f4565b91505092915050565b60006dffffffffffffffffffffffffffff82169050919050565b61185981611836565b811461186457600080fd5b50565b60008151905061187681611850565b92915050565b600063ffffffff82169050919050565b6118958161187c565b81146118a057600080fd5b50565b6000815190506118b28161188c565b92915050565b6000806000606084860312156118d1576118d0611282565b5b60006118df86828701611867565b93505060206118f086828701611867565b9250506040611901868287016118a3565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081519050919050565b600081905092915050565b60005b8381101561196e578082015181840152602081019050611953565b60008484015250505050565b60006119858261193a565b61198f8185611945565b935061199f818560208601611950565b80840191505092915050565b60006119b7828461197a565b915081905092915050565b7f536166654554483a3a736166655472616e736665724554483a2045544820747260008201527f616e73666572206661696c656400000000000000000000000000000000000000602082015250565b6000611a1e602d83611653565b9150611a29826119c2565b604082019050919050565b60006020820190508181036000830152611a4d81611a11565b9050919050565b6000604082019050611a696000830185611215565b611a766020830184611215565b9392505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611ab36017836115e7565b9150611abe82611a7d565b601782019050919050565b600081519050919050565b6000611adf82611ac9565b611ae981856115e7565b9350611af9818560208601611950565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611b3b6011836115e7565b9150611b4682611b05565b601182019050919050565b6000611b5c82611aa6565b9150611b688285611ad4565b9150611b7382611b2e565b9150611b7f8284611ad4565b91508190509392505050565b6000601f19601f8301169050919050565b6000611ba782611ac9565b611bb18185611653565b9350611bc1818560208601611950565b611bca81611b8b565b840191505092915050565b60006020820190508181036000830152611bef8184611b9c565b905092915050565b6000611c0282611224565b9150611c0d83611224565b9250828201905080821115611c2557611c24611516565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611c6582611224565b915060008203611c7857611c77611516565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611cb9602083611653565b9150611cc482611c83565b602082019050919050565b60006020820190508181036000830152611ce881611cac565b905091905056fea26469706673582212200f5801ffe996bcf04a3ffbc22d90e30771361c101fb7d0f47b0b560925eae31d64736f6c63430008130033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x5F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1D25 PUSH2 0x7A PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x79A ADD MSTORE PUSH2 0x1D25 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DD95002 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x3C3 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x319 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x774237FC EQ PUSH2 0x286 JUMPI PUSH2 0x18C JUMP JUMPDEST CALLDATASIZE PUSH2 0x18C JUMPI PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH2 0x144 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3EC JUMP JUMPDEST SWAP1 POP PUSH32 0x3CADFF7F9A0BF97B2F8B9629E31675770CACA33D15E735652794F64ACCE52FA0 PUSH2 0x16F PUSH2 0x423 JUMP JUMPDEST CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x182 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1454 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1454 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0x694 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1454 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x724 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x384 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1454 JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3FC DUP8 DUP7 DUP7 PUSH2 0x9C2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP2 DUP8 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x49E JUMPI POP PUSH2 0x49D DUP3 PUSH2 0xB2F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4D3 SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x4F2 DUP2 PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x503 PUSH2 0x4FD PUSH2 0x423 JUMP JUMPDEST DUP4 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH2 0x57C PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3EC JUMP JUMPDEST SWAP1 POP PUSH32 0xB450A08BA9D5BFBC195171A9F21F66B27DE075C9788057B443DC147DA398BE5C PUSH2 0x5A7 PUSH2 0x423 JUMP JUMPDEST DUP6 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5BA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x5D1 DUP3 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x5DA DUP2 PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x5E4 DUP4 DUP4 PUSH2 0xCAD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5F1 PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x655 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x668 DUP3 DUP3 PUSH2 0xD8D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x67B SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x780 DUP3 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x789 DUP2 PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x793 DUP4 DUP4 PUSH2 0xD8D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7D7 PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP1 PUSH2 0x1768 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x893 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8AE SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x8DE PUSH1 0x0 DUP1 SHL PUSH2 0x8D9 PUSH2 0x423 JUMP JUMPDEST PUSH2 0xCAD JUMP JUMPDEST DUP4 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x9D2 DUP7 DUP7 DUP7 PUSH2 0xE6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB9 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB18 JUMPI DUP1 DUP3 PUSH2 0xB1B JUMP JUMPDEST DUP2 DUP2 JUMPDEST DUP1 SWAP7 POP DUP2 SWAP8 POP POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAA DUP2 PUSH2 0xBA5 PUSH2 0x423 JUMP JUMPDEST PUSH2 0xEF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0x190B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC14 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x19AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9F SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCB7 DUP3 DUP3 PUSH2 0x6BA JUMP JUMPDEST PUSH2 0xD89 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD2E PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD97 DUP3 DUP3 PUSH2 0x6BA JUMP JUMPDEST ISZERO PUSH2 0xE6A JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE0F PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE6A43905 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAB SWAP3 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEFF DUP3 DUP3 PUSH2 0x6BA JUMP JUMPDEST PUSH2 0xF76 JUMPI PUSH2 0xF0C DUP2 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xF1A DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF2B SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6D SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFA0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDD JUMPI PUSH2 0xFDC PUSH2 0x190B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x100F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1047 JUMPI PUSH2 0x1046 PUSH2 0x1C2B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x10AB JUMPI PUSH2 0x10AA PUSH2 0x1C2B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH2 0x10F5 SWAP2 SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1195 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1137 JUMPI PUSH2 0x1136 PUSH2 0x1C2B JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x114E JUMPI PUSH2 0x114D PUSH2 0x1C2B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x118E SWAP1 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP PUSH2 0x10F8 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D0 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120E DUP3 PUSH2 0x11E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121E DUP2 PUSH2 0x1203 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1237 DUP2 PUSH2 0x1224 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1252 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x125F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x122E JUMP JUMPDEST PUSH2 0x126C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x122E JUMP JUMPDEST PUSH2 0x1279 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x122E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BC DUP2 PUSH2 0x1287 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12D9 DUP2 PUSH2 0x12B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F5 JUMPI PUSH2 0x12F4 PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1303 DUP5 DUP3 DUP6 ADD PUSH2 0x12CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1321 DUP2 PUSH2 0x130C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x133C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1318 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1355 DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP2 EQ PUSH2 0x1360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1372 DUP2 PUSH2 0x134C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x138E JUMPI PUSH2 0x138D PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x139C DUP5 DUP3 DUP6 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13AE DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D8 DUP2 PUSH2 0x1224 JUMP JUMPDEST DUP2 EQ PUSH2 0x13E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13F5 DUP2 PUSH2 0x13CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1411 JUMPI PUSH2 0x1410 PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x141F DUP5 DUP3 DUP6 ADD PUSH2 0x13E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1431 DUP2 PUSH2 0x1203 JUMP JUMPDEST DUP2 EQ PUSH2 0x143C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x144E DUP2 PUSH2 0x1428 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146B JUMPI PUSH2 0x146A PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1479 DUP6 DUP3 DUP7 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x148A DUP6 DUP3 DUP7 ADD PUSH2 0x143F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14C9 JUMPI PUSH2 0x14C8 PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D7 DUP8 DUP3 DUP9 ADD PUSH2 0x143F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x14E8 DUP8 DUP3 DUP9 ADD PUSH2 0x143F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x14F9 DUP8 DUP3 DUP9 ADD PUSH2 0x143F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x150A DUP8 DUP3 DUP9 ADD PUSH2 0x143F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1550 DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP PUSH2 0x155B DUP4 PUSH2 0x1224 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1569 DUP2 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1580 JUMPI PUSH2 0x157F PUSH2 0x1516 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15C1 DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CC DUP4 PUSH2 0x1224 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15DC JUMPI PUSH2 0x15DB PUSH2 0x1587 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C65720000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1628 PUSH1 0x6 DUP4 PUSH2 0x15E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1633 DUP3 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1649 DUP3 PUSH2 0x161B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C0 PUSH1 0x2F DUP4 PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP PUSH2 0x16CB DUP3 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16EF DUP2 PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526573657276653A2063616C6C6572206973206E6F742074686520696E697469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C697A65720000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1752 PUSH1 0x26 DUP4 PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP PUSH2 0x175D DUP3 PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1781 DUP2 PUSH2 0x1745 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526573657276653A20696E76616C696420436F6E74726F6C2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17BE PUSH1 0x20 DUP4 PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C9 DUP3 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17ED DUP2 PUSH2 0x17B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1803 DUP2 PUSH2 0x1428 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181F JUMPI PUSH2 0x181E PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182D DUP5 DUP3 DUP6 ADD PUSH2 0x17F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1859 DUP2 PUSH2 0x1836 JUMP JUMPDEST DUP2 EQ PUSH2 0x1864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1876 DUP2 PUSH2 0x1850 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1895 DUP2 PUSH2 0x187C JUMP JUMPDEST DUP2 EQ PUSH2 0x18A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18B2 DUP2 PUSH2 0x188C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18D1 JUMPI PUSH2 0x18D0 PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18DF DUP7 DUP3 DUP8 ADD PUSH2 0x1867 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18F0 DUP7 DUP3 DUP8 ADD PUSH2 0x1867 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1901 DUP7 DUP3 DUP8 ADD PUSH2 0x18A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x196E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1985 DUP3 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x198F DUP2 DUP6 PUSH2 0x1945 JUMP JUMPDEST SWAP4 POP PUSH2 0x199F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1950 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B7 DUP3 DUP5 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654554483A3A736166655472616E736665724554483A20455448207472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E73666572206661696C656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1E PUSH1 0x2D DUP4 PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A29 DUP3 PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4D DUP2 PUSH2 0x1A11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A69 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x1A76 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1215 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB3 PUSH1 0x17 DUP4 PUSH2 0x15E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABE DUP3 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADF DUP3 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x1AE9 DUP2 DUP6 PUSH2 0x15E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AF9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1950 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3B PUSH1 0x11 DUP4 PUSH2 0x15E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B46 DUP3 PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5C DUP3 PUSH2 0x1AA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B68 DUP3 DUP6 PUSH2 0x1AD4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B73 DUP3 PUSH2 0x1B2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7F DUP3 DUP5 PUSH2 0x1AD4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA7 DUP3 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x1BB1 DUP2 DUP6 PUSH2 0x1653 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x1BCA DUP2 PUSH2 0x1B8B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BEF DUP2 DUP5 PUSH2 0x1B9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C02 DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0D DUP4 PUSH2 0x1224 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C25 JUMPI PUSH2 0x1C24 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C65 DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1C78 JUMPI PUSH2 0x1C77 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB9 PUSH1 0x20 DUP4 PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC4 DUP3 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE8 DUP2 PUSH2 0x1CAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF PC ADD SELFDESTRUCT 0xE9 SWAP7 0xBC CREATE 0x4A EXTCODEHASH 0xFB 0xC2 0x2D SWAP1 0xE3 SMOD PUSH18 0x361C101FB7D0F47B0B560925EAE31D64736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "183:2555:0:-:0;;;1015:60;;;;;;;;;;1055:12;:10;;;:12;;:::i;:::-;1040:27;;;;;;;;;;183:2555;;656:98:11;709:7;736:10;729:17;;656:98;:::o;183:2555:0:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CALLER_ROLE_14": {
									"entryPoint": 1644,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_2112": {
									"entryPoint": 1828,
									"id": 2112,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDT_20": {
									"entryPoint": 1873,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WBNB_17": {
									"entryPoint": 1684,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_145": {
									"entryPoint": null,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_2177": {
									"entryPoint": 2969,
									"id": 2177,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_2216": {
									"entryPoint": 3829,
									"id": 2216,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_2368": {
									"entryPoint": 3245,
									"id": 2368,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2412": {
									"entryPoint": 1059,
									"id": 2412,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_2399": {
									"entryPoint": 3469,
									"id": 2399,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@factory_27": {
									"entryPoint": 1835,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getReserves_659": {
									"entryPoint": 2498,
									"id": 659,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@getRoleAdmin_2231": {
									"entryPoint": 1189,
									"id": 2231,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_2251": {
									"entryPoint": 1480,
									"id": 2251,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_2164": {
									"entryPoint": 1722,
									"id": 2164,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_114": {
									"entryPoint": 1944,
									"id": 114,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@pairFor_604": {
									"entryPoint": 3694,
									"id": 604,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@quote_692": {
									"entryPoint": 1004,
									"id": 692,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceRole_2294": {
									"entryPoint": 1513,
									"id": 2294,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_2271": {
									"entryPoint": 1911,
									"id": 2271,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferETH_1749": {
									"entryPoint": 2989,
									"id": 1749,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2145": {
									"entryPoint": 1067,
									"id": 2145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2445": {
									"entryPoint": 2863,
									"id": 2445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_2038": {
									"entryPoint": 4007,
									"id": 2038,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_2058": {
									"entryPoint": 3962,
									"id": 2058,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@withdraw_189": {
									"entryPoint": 1220,
									"id": 189,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 6132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 4963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint112_fromMemory": {
									"entryPoint": 6247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address": {
									"entryPoint": 5295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6993,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint112": {
									"entryPoint": 6198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 6268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6480,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7211,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6411,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4738,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 7299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c": {
									"entryPoint": 5618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f": {
									"entryPoint": 6024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484": {
									"entryPoint": 5878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332": {
									"entryPoint": 6594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 6781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 6917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 5732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint112": {
									"entryPoint": 6224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 6284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21031:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:13",
														"type": ""
													}
												],
												"src": "139:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:13",
														"type": ""
													}
												],
												"src": "241:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "410:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "420:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "431:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "420:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "392:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "402:7:13",
														"type": ""
													}
												],
												"src": "365:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "513:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "530:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "553:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "535:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "535:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "501:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "508:3:13",
														"type": ""
													}
												],
												"src": "448:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "754:371:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "764:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "776:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "787:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "772:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "764:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "845:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "858:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "869:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "854:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "854:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "801:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "801:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "801:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "926:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "939:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "950:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "935:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "882:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "882:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "882:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1008:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1021:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1017:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1017:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "964:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "964:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1090:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1103:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1114:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1099:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1099:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1046:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1046:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "714:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "722:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "730:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "738:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "749:4:13",
														"type": ""
													}
												],
												"src": "572:553:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1171:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1181:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1197:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1191:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1191:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1181:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1164:6:13",
														"type": ""
													}
												],
												"src": "1131:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1301:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1318:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1321:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1311:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1311:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1212:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1424:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1441:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1444:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1434:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1434:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1335:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1502:105:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1512:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1527:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1534:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1523:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1523:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1512:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1484:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1494:7:13",
														"type": ""
													}
												],
												"src": "1458:149:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1655:78:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1678:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "1685:16:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1685:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1675:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1675:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:42:13"
															},
															"nodeType": "YulIf",
															"src": "1665:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1648:5:13",
														"type": ""
													}
												],
												"src": "1613:120:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:86:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1864:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1838:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1838:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1838:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1768:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1776:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1784:5:13",
														"type": ""
													}
												],
												"src": "1739:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1947:262:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1993:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1995:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1995:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1995:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1968:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1964:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1964:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1989:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1960:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:32:13"
															},
															"nodeType": "YulIf",
															"src": "1957:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2130:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2164:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2175:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2160:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2160:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2140:19:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2140:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2130:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1917:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1928:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1940:6:13",
														"type": ""
													}
												],
												"src": "1882:327:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2257:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2267:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2292:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2285:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2285:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2278:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2267:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2239:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2249:7:13",
														"type": ""
													}
												],
												"src": "2215:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2370:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2407:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2392:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2392:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2380:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2380:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2358:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2365:3:13",
														"type": ""
													}
												],
												"src": "2311:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:118:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2528:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2540:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2551:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2536:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2536:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2528:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2602:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2615:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2626:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2611:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2611:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2564:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2564:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2490:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2502:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2513:4:13",
														"type": ""
													}
												],
												"src": "2426:210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2697:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2708:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2697:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2669:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2679:7:13",
														"type": ""
													}
												],
												"src": "2642:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2768:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2825:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2834:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2837:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2827:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2827:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2827:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2791:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2816:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "2798:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2798:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2788:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2788:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2781:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2781:43:13"
															},
															"nodeType": "YulIf",
															"src": "2778:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2761:5:13",
														"type": ""
													}
												],
												"src": "2725:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2924:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2924:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2915:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2980:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "2953:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2953:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2953:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2883:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2891:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2899:5:13",
														"type": ""
													}
												],
												"src": "2853:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3064:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3110:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3112:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3112:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3112:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3085:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3094:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3081:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3081:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3106:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3077:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3077:32:13"
															},
															"nodeType": "YulIf",
															"src": "3074:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "3203:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3218:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3232:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3222:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3247:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3282:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3293:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3278:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3278:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3302:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3257:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3257:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3247:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3034:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3045:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3057:6:13",
														"type": ""
													}
												],
												"src": "2998:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3398:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3415:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3438:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3420:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3408:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3408:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3408:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3386:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3393:3:13",
														"type": ""
													}
												],
												"src": "3333:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3555:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3565:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3577:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3588:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3573:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3573:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3565:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3645:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3658:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3669:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3654:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3601:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3601:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3601:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3527:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3539:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3550:4:13",
														"type": ""
													}
												],
												"src": "3457:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3785:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3797:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3787:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3787:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3787:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3751:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3776:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3758:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3758:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3748:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3748:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3741:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3741:43:13"
															},
															"nodeType": "YulIf",
															"src": "3738:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3721:5:13",
														"type": ""
													}
												],
												"src": "3685:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3865:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3875:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3897:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3884:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3875:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3940:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3913:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3913:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3913:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3843:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3851:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3859:5:13",
														"type": ""
													}
												],
												"src": "3813:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4024:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4070:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4072:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4072:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4072:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4045:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4054:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4041:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4041:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4037:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4037:32:13"
															},
															"nodeType": "YulIf",
															"src": "4034:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "4163:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4178:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4192:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4182:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4207:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4242:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4253:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4238:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4238:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4262:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4217:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4217:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4207:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3994:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4005:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4017:6:13",
														"type": ""
													}
												],
												"src": "3958:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4336:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4393:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4402:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4405:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4395:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4395:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4395:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4359:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4384:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4366:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4366:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4356:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4356:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4349:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:43:13"
															},
															"nodeType": "YulIf",
															"src": "4346:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4329:5:13",
														"type": ""
													}
												],
												"src": "4293:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4473:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4483:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4505:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4492:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4483:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4548:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4521:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4521:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4521:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4451:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4459:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4467:5:13",
														"type": ""
													}
												],
												"src": "4421:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4649:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4695:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4697:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4697:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4697:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4670:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4679:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4666:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4666:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4691:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4662:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:32:13"
															},
															"nodeType": "YulIf",
															"src": "4659:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "4788:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4803:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4817:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4807:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4832:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4867:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4878:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4863:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4863:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4887:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4842:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4842:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4832:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4915:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4930:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4944:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4934:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4960:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4995:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5006:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4991:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4991:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5015:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4970:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4970:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4960:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4611:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4622:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4634:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4642:6:13",
														"type": ""
													}
												],
												"src": "4566:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5144:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5154:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5166:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5177:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5162:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5162:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5154:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5234:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5247:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5258:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5243:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5243:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5190:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5190:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5190:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5116:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5128:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5139:4:13",
														"type": ""
													}
												],
												"src": "5046:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5391:648:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5438:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5440:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5440:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5440:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5412:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5421:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5408:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5408:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5433:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:33:13"
															},
															"nodeType": "YulIf",
															"src": "5401:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5531:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5546:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5560:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5550:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5575:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5610:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5621:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5606:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5606:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5630:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5585:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5585:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5575:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5658:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5673:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5687:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5677:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5703:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5738:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5749:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5734:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5734:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5758:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5713:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5713:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5703:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5786:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5801:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5815:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5805:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5831:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5866:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5877:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5862:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5862:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5886:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5841:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5841:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5831:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5914:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5929:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5943:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5933:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5959:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5994:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6005:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5990:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5990:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6014:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5969:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5969:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5959:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5337:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5348:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5360:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5368:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5376:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5384:6:13",
														"type": ""
													}
												],
												"src": "5274:765:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6073:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6090:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6093:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6083:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6083:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6083:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6187:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6190:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6180:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6180:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6180:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6211:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6214:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6204:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6204:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6204:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6045:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6279:362:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6289:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6312:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6294:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6294:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6289:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6323:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6346:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6328:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6323:1:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6357:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6380:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6383:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6376:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6376:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "6361:11:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6394:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "6423:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6405:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6405:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6394:7:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6612:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6614:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6614:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6614:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6545:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6538:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6538:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "6568:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "6575:7:13"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "6584:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "6571:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6571:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "6565:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6565:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "6518:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6518:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6498:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6498:113:13"
															},
															"nodeType": "YulIf",
															"src": "6495:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6262:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6265:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6271:7:13",
														"type": ""
													}
												],
												"src": "6231:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6675:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6692:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6695:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6685:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6685:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6685:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6789:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6792:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6782:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6782:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6782:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6813:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6816:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6806:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6806:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6806:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6647:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6875:143:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6885:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6908:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6890:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6890:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6885:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6919:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6942:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6924:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6924:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6919:1:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6966:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6968:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6968:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6968:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6963:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6956:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:9:13"
															},
															"nodeType": "YulIf",
															"src": "6953:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6998:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7007:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7010:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7003:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7003:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6998:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6864:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6867:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6873:1:13",
														"type": ""
													}
												],
												"src": "6833:185:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7138:34:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7148:18:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7163:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7148:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7110:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7115:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7126:11:13",
														"type": ""
													}
												],
												"src": "7024:148:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7284:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7306:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7314:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7302:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7302:14:13"
																	},
																	{
																		"hexValue": "43616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7318:8:13",
																		"type": "",
																		"value": "Caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7295:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7295:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7276:6:13",
														"type": ""
													}
												],
												"src": "7178:156:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7504:236:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7514:91:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7598:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7603:1:13",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7521:76:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7521:84:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7514:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7703:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c",
																	"nodeType": "YulIdentifier",
																	"src": "7614:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7614:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7614:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7716:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7727:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7732:1:13",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7723:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7723:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7716:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7492:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7500:3:13",
														"type": ""
													}
												],
												"src": "7340:400:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7935:192:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7946:155:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8097:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7953:142:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7953:148:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7946:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8111:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8118:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8111:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7922:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7931:3:13",
														"type": ""
													}
												],
												"src": "7746:381:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8229:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8246:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8251:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8239:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8239:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8239:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8267:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8286:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8291:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8282:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8282:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8267:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8201:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8206:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8217:11:13",
														"type": ""
													}
												],
												"src": "8133:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8414:128:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8436:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8444:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:14:13"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8448:34:13",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8425:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8425:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8504:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8512:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8500:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8500:15:13"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8517:17:13",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8493:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8493:42:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8493:42:13"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8406:6:13",
														"type": ""
													}
												],
												"src": "8308:234:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8694:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8704:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8770:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8775:2:13",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8711:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8711:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8704:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8876:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "8787:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8787:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8787:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8889:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8900:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8905:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8896:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8896:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8889:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8682:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8690:3:13",
														"type": ""
													}
												],
												"src": "8548:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9091:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9101:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9113:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9124:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9109:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9109:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9101:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9148:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9159:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9144:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9144:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9167:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9173:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9163:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9163:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9137:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9137:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9137:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9193:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9327:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9201:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9201:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9193:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9071:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9086:4:13",
														"type": ""
													}
												],
												"src": "8920:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9451:119:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9473:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9481:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9469:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9469:14:13"
																	},
																	{
																		"hexValue": "526573657276653a2063616c6c6572206973206e6f742074686520696e697469",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9485:34:13",
																		"type": "",
																		"value": "Reserve: caller is not the initi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9462:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9462:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9462:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9541:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9549:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9537:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9537:15:13"
																	},
																	{
																		"hexValue": "616c697a6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9554:8:13",
																		"type": "",
																		"value": "alizer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9530:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9530:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9530:33:13"
														}
													]
												},
												"name": "store_literal_in_memory_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9443:6:13",
														"type": ""
													}
												],
												"src": "9345:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9722:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9732:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9798:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9803:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9739:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9739:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9732:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9904:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484",
																	"nodeType": "YulIdentifier",
																	"src": "9815:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9815:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9815:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9917:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9928:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9933:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9924:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9924:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9917:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9710:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9718:3:13",
														"type": ""
													}
												],
												"src": "9576:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10119:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10129:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10141:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10152:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10137:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10137:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10129:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10176:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10187:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10172:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10172:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10195:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10201:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10191:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10191:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10165:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10165:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10165:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10221:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10355:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10229:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10229:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10221:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10099:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10114:4:13",
														"type": ""
													}
												],
												"src": "9948:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10479:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10501:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10509:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10497:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10497:14:13"
																	},
																	{
																		"hexValue": "526573657276653a20696e76616c696420436f6e74726f6c2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10513:34:13",
																		"type": "",
																		"value": "Reserve: invalid Control address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10490:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10490:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10490:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10471:6:13",
														"type": ""
													}
												],
												"src": "10373:182:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10707:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10717:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10783:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10788:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10724:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10724:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10717:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10889:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f",
																	"nodeType": "YulIdentifier",
																	"src": "10800:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10800:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10800:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10902:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10913:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10918:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10909:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10909:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10902:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10695:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10703:3:13",
														"type": ""
													}
												],
												"src": "10561:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11104:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11114:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11126:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11137:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11122:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11122:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11114:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11161:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11172:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11157:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11157:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11180:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11186:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11176:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11176:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11150:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11150:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11150:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11206:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11340:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11214:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11214:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11206:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11084:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11099:4:13",
														"type": ""
													}
												],
												"src": "10933:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11421:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11431:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11446:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11440:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11440:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11431:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11489:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "11462:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11462:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11462:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11399:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11407:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11415:5:13",
														"type": ""
													}
												],
												"src": "11358:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11584:274:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11630:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11632:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11632:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11632:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11605:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11614:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11601:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11601:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11626:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11597:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11597:32:13"
															},
															"nodeType": "YulIf",
															"src": "11594:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "11723:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11738:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11752:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11742:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11767:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11813:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11824:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11809:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11809:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11833:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "11777:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11777:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11767:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11554:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11565:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11577:6:13",
														"type": ""
													}
												],
												"src": "11507:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11909:69:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11919:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11934:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11941:30:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11930:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11930:42:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11919:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint112",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11891:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11901:7:13",
														"type": ""
													}
												],
												"src": "11864:114:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12027:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12084:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12093:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12096:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12086:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12086:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12086:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12050:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12075:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint112",
																					"nodeType": "YulIdentifier",
																					"src": "12057:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12057:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12047:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12047:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12040:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12040:43:13"
															},
															"nodeType": "YulIf",
															"src": "12037:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint112",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12020:5:13",
														"type": ""
													}
												],
												"src": "11984:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12175:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12185:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12200:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12194:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12194:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12185:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12243:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint112",
																	"nodeType": "YulIdentifier",
																	"src": "12216:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12216:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12216:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint112_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12153:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12161:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12169:5:13",
														"type": ""
													}
												],
												"src": "12112:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12305:49:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12315:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12330:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12337:10:13",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12326:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12326:22:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12315:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12287:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12297:7:13",
														"type": ""
													}
												],
												"src": "12261:93:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12402:78:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12458:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12467:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12470:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12460:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12460:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12460:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12425:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12449:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "12432:16:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12432:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12422:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12422:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12415:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12415:42:13"
															},
															"nodeType": "YulIf",
															"src": "12412:62:13"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12395:5:13",
														"type": ""
													}
												],
												"src": "12360:120:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12548:79:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12558:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12573:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12567:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12567:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12558:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12615:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "12589:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12589:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12589:32:13"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12526:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12534:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12542:5:13",
														"type": ""
													}
												],
												"src": "12486:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12743:551:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12789:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12791:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12791:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12791:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12764:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12773:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12760:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12760:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12785:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12756:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12756:32:13"
															},
															"nodeType": "YulIf",
															"src": "12753:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "12882:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12897:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12911:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12901:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12926:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12972:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12983:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12968:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12968:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12992:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint112_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "12936:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12936:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12926:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13020:129:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13035:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13049:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13039:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13065:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13111:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13122:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13107:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13107:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13131:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint112_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13075:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13075:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "13065:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13159:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13174:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13188:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13178:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13204:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13249:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13260:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13245:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13245:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13269:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13214:30:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13214:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "13204:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12697:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12708:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12720:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12728:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12736:6:13",
														"type": ""
													}
												],
												"src": "12633:661:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13328:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13345:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13348:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13338:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13338:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13338:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13442:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13445:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13435:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13435:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13435:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13466:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13469:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13459:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13459:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13459:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13300:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13544:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13555:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13571:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13565:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13565:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13555:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13527:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13537:6:13",
														"type": ""
													}
												],
												"src": "13486:98:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13703:34:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13713:18:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13728:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13713:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13675:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13680:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13691:11:13",
														"type": ""
													}
												],
												"src": "13590:147:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13805:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13815:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13824:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13819:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13884:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13909:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13914:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13905:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13905:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13928:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13933:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13924:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13924:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13918:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13918:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13898:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13898:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13898:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13845:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13848:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13842:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13842:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13856:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13858:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13867:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13870:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13863:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13863:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13858:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13838:3:13",
																"statements": []
															},
															"src": "13834:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "13967:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13972:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13963:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13963:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13981:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13956:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13956:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13956:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13787:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13792:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13797:6:13",
														"type": ""
													}
												],
												"src": "13743:246:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14103:278:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14113:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14159:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14127:31:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14127:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14117:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14174:95:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14257:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14262:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14181:75:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14181:88:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14174:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14317:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14324:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14313:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14313:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14331:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14336:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14278:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14278:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14278:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14352:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14363:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14368:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14359:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14359:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14352:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14084:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14091:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14099:3:13",
														"type": ""
													}
												],
												"src": "13995:386:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14521:137:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14532:100:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14619:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14628:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14539:79:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14539:93:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14532:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14642:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14649:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14642:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14500:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14506:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14517:3:13",
														"type": ""
													}
												],
												"src": "14387:271:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14770:126:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14792:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14800:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14788:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14788:14:13"
																	},
																	{
																		"hexValue": "536166654554483a3a736166655472616e736665724554483a20455448207472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14804:34:13",
																		"type": "",
																		"value": "SafeETH::safeTransferETH: ETH tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14781:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14781:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14781:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14860:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14868:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14856:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14856:15:13"
																	},
																	{
																		"hexValue": "616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14873:15:13",
																		"type": "",
																		"value": "ansfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14849:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14849:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14849:40:13"
														}
													]
												},
												"name": "store_literal_in_memory_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14762:6:13",
														"type": ""
													}
												],
												"src": "14664:232:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15048:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15058:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15124:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15129:2:13",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15065:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15065:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15058:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15230:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332",
																	"nodeType": "YulIdentifier",
																	"src": "15141:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15141:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15141:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15243:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15254:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15259:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15250:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15250:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15243:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15036:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15044:3:13",
														"type": ""
													}
												],
												"src": "14902:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15445:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15455:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15467:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15478:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15463:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15463:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15455:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15502:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15513:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15498:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15498:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15521:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15527:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15517:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15517:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15491:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15491:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15491:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15547:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15681:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15555:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15555:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15547:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15425:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15440:4:13",
														"type": ""
													}
												],
												"src": "15274:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15825:206:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15835:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15847:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15858:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15843:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15843:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15835:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15915:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15928:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15939:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15924:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15924:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15871:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15871:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15871:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15996:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16009:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16020:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16005:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16005:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15952:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15952:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15952:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15789:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15801:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15809:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15820:4:13",
														"type": ""
													}
												],
												"src": "15699:332:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16143:67:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16165:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16173:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16161:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16161:14:13"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16177:25:13",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16154:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16154:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16135:6:13",
														"type": ""
													}
												],
												"src": "16037:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16380:238:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16390:92:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16474:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16479:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16397:76:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16397:85:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16390:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16580:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "16491:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16491:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16491:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16593:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16604:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16609:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16600:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16600:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16593:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16368:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16376:3:13",
														"type": ""
													}
												],
												"src": "16216:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16683:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16694:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16710:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16704:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16704:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16694:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16666:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16676:6:13",
														"type": ""
													}
												],
												"src": "16624:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16839:280:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16849:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16896:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16863:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16863:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16853:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16911:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16995:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17000:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16918:76:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16918:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16911:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17055:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17062:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17051:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17051:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17069:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17074:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "17016:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17016:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17016:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17090:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17101:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17106:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17097:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17097:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17090:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16820:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16827:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16835:3:13",
														"type": ""
													}
												],
												"src": "16729:390:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17231:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17253:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17261:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17249:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17249:14:13"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17265:19:13",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17242:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17242:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17242:43:13"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17223:6:13",
														"type": ""
													}
												],
												"src": "17125:167:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17462:238:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17472:92:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17556:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17561:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17479:76:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17479:85:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17472:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17662:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "17573:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17573:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17573:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17675:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17686:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17691:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17682:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17682:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17675:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17450:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17458:3:13",
														"type": ""
													}
												],
												"src": "17298:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18092:581:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18103:155:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18254:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18110:142:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18110:148:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18103:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18268:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18357:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18366:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18275:81:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18275:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18268:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18380:155:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18531:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18387:142:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18387:148:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18380:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18545:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18634:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18643:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18552:81:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18552:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18545:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18657:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18664:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18657:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18063:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18069:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18077:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18088:3:13",
														"type": ""
													}
												],
												"src": "17706:967:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18727:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18737:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18755:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18762:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18751:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18751:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18771:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18767:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18767:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18747:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18747:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18737:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18710:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "18720:6:13",
														"type": ""
													}
												],
												"src": "18679:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18879:285:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18889:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18936:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "18903:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18903:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18893:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18951:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19017:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19022:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18958:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18958:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18951:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19077:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19084:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19073:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19073:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19091:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19096:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "19038:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19038:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19038:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19112:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19123:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19150:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "19128:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19128:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19119:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19119:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19112:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18860:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18867:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18875:3:13",
														"type": ""
													}
												],
												"src": "18787:377:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19288:195:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19298:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19310:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19321:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19306:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19306:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19298:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19345:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19356:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19341:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19341:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19364:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19370:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19360:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19360:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19334:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19334:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19334:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19390:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19462:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19471:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19398:63:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19398:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19390:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19260:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19272:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19283:4:13",
														"type": ""
													}
												],
												"src": "19170:313:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19533:147:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19543:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19566:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19548:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19548:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19543:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19577:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19600:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19582:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19582:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19577:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19611:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19622:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19625:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19618:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19618:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "19611:3:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19651:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19653:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19653:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19653:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19643:1:13"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "19646:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19640:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19640:10:13"
															},
															"nodeType": "YulIf",
															"src": "19637:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19520:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19523:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19529:3:13",
														"type": ""
													}
												],
												"src": "19489:191:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19714:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19731:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19734:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19724:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19724:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19724:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19828:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19831:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19821:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19821:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19821:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19852:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19855:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19845:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19845:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19845:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "19686:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19915:128:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19925:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19952:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19934:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19934:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19925:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19986:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19988:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19988:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19988:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19973:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19980:4:13",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "19970:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19970:15:13"
															},
															"nodeType": "YulIf",
															"src": "19967:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20017:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20028:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20035:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20024:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20024:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20017:3:13"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19901:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19911:3:13",
														"type": ""
													}
												],
												"src": "19872:171:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20155:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20177:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20185:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20173:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20173:14:13"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20189:34:13",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20166:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20166:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20166:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20147:6:13",
														"type": ""
													}
												],
												"src": "20049:182:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20383:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20393:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20459:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20464:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20400:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20400:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20393:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20565:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "20476:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20476:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20476:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20578:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20589:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20594:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20585:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20585:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20578:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20371:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20379:3:13",
														"type": ""
													}
												],
												"src": "20237:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20780:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20790:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20802:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20813:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20798:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20798:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20790:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20837:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20848:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20833:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20833:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20856:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20862:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20852:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20852:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20826:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20826:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20826:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20882:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21016:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20890:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20890:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20882:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20760:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20775:4:13",
														"type": ""
													}
												],
												"src": "20609:419:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 6)\n        store_literal_in_memory_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c(pos)\n        end := add(pos, 6)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reserve: caller is not the initi\")\n\n        mstore(add(memPtr, 32), \"alizer\")\n\n    }\n\n    function abi_encode_t_stringliteral_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reserve: invalid Control address\")\n\n    }\n\n    function abi_encode_t_stringliteral_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint112(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint112(value) {\n        if iszero(eq(value, cleanup_t_uint112(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint112_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint112(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint112_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint112_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeETH::safeTransferETH: ETH tr\")\n\n        mstore(add(memPtr, 32), \"ansfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"23": [
									{
										"length": 32,
										"start": 1946
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100c65760003560e01c80638dd950021161007f578063c45a015511610059578063c45a015514610344578063c54e44eb1461036f578063d547741f1461039a578063f8c8765e146103c35761018c565b80638dd95002146102b157806391d14854146102dc578063a217fddf146103195761018c565b806301ffc9a714610191578063248a9ca3146101ce5780632e1a7d4d1461020b5780632f2ff15d1461023457806336568abe1461025d578063774237fc146102865761018c565b3661018c5760004790506000610144600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166103ec565b90507f3cadff7f9a0bf97b2f8b9629e31675770caca33d15e735652794f64acce52fa061016f610423565b348484604051610182949392919061123d565b60405180910390a1005b600080fd5b34801561019d57600080fd5b506101b860048036038101906101b391906112df565b61042b565b6040516101c59190611327565b60405180910390f35b3480156101da57600080fd5b506101f560048036038101906101f09190611378565b6104a5565b60405161020291906113b4565b60405180910390f35b34801561021757600080fd5b50610232600480360381019061022d91906113fb565b6104c4565b005b34801561024057600080fd5b5061025b60048036038101906102569190611454565b6105c8565b005b34801561026957600080fd5b50610284600480360381019061027f9190611454565b6105e9565b005b34801561029257600080fd5b5061029b61066c565b6040516102a891906113b4565b60405180910390f35b3480156102bd57600080fd5b506102c6610694565b6040516102d39190611494565b60405180910390f35b3480156102e857600080fd5b5061030360048036038101906102fe9190611454565b6106ba565b6040516103109190611327565b60405180910390f35b34801561032557600080fd5b5061032e610724565b60405161033b91906113b4565b60405180910390f35b34801561035057600080fd5b5061035961072b565b6040516103669190611494565b60405180910390f35b34801561037b57600080fd5b50610384610751565b6040516103919190611494565b60405180910390f35b3480156103a657600080fd5b506103c160048036038101906103bc9190611454565b610777565b005b3480156103cf57600080fd5b506103ea60048036038101906103e591906114af565b610798565b005b60008060006103fc8786866109c2565b9150915081818761040d9190611545565b61041791906115b6565b92505050949350505050565b600033905090565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061049e575061049d82610b2f565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b6040516020016104d39061163e565b604051602081830303815290604052805190602001206104f281610b99565b6105036104fd610423565b83610bad565b6000479050600061057c600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166103ec565b90507fb450a08ba9d5bfbc195171a9f21f66b27de075c9788057b443dc147da398be5c6105a7610423565b8584846040516105ba949392919061123d565b60405180910390a150505050565b6105d1826104a5565b6105da81610b99565b6105e48383610cad565b505050565b6105f1610423565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461065e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610655906116d6565b60405180910390fd5b6106688282610d8d565b5050565b60405160200161067b9061163e565b6040516020818303038152906040528051906020012081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610780826104a5565b61078981610b99565b6107938383610d8d565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166107d7610423565b73ffffffffffffffffffffffffffffffffffffffff161461082d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082490611768565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361089c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610893906117d4565b60405180910390fd5b6108ca6040516020016108ae9061163e565b6040516020818303038152906040528051906020012084610cad565b6108de6000801b6108d9610423565b610cad565b83600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff02191690831515021790555050505050565b60008060006109d2868686610e6e565b905060008173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a459190611809565b90506000808373ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610a95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab991906118b8565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508273ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610b18578082610b1b565b81815b809650819750505050505050935093915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610baa81610ba5610423565b610ef5565b50565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff811115610be257610be161190b565b5b6040519080825280601f01601f191660200182016040528015610c145781602001600182028036833780820191505090505b50604051610c2291906119ab565b60006040518083038185875af1925050503d8060008114610c5f576040519150601f19603f3d011682016040523d82523d6000602084013e610c64565b606091505b5050905080610ca8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9f90611a34565b60405180910390fd5b505050565b610cb782826106ba565b610d8957600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d2e610423565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610d9782826106ba565b15610e6a57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e0f610423565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663e6a4390584846040518363ffffffff1660e01b8152600401610eab929190611a54565b602060405180830381865afa158015610ec8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eec9190611809565b90509392505050565b610eff82826106ba565b610f7657610f0c81610f7a565b610f1a8360001c6020610fa7565b604051602001610f2b929190611b51565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6d9190611bd5565b60405180910390fd5b5050565b6060610fa08273ffffffffffffffffffffffffffffffffffffffff16601460ff16610fa7565b9050919050565b606060006002836002610fba9190611545565b610fc49190611bf7565b67ffffffffffffffff811115610fdd57610fdc61190b565b5b6040519080825280601f01601f19166020018201604052801561100f5781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061104757611046611c2b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106110ab576110aa611c2b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026110eb9190611545565b6110f59190611bf7565b90505b6001811115611195577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061113757611136611c2b565b5b1a60f81b82828151811061114e5761114d611c2b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061118e90611c5a565b90506110f8565b50600084146111d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d090611ccf565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061120e826111e3565b9050919050565b61121e81611203565b82525050565b6000819050919050565b61123781611224565b82525050565b60006080820190506112526000830187611215565b61125f602083018661122e565b61126c604083018561122e565b611279606083018461122e565b95945050505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112bc81611287565b81146112c757600080fd5b50565b6000813590506112d9816112b3565b92915050565b6000602082840312156112f5576112f4611282565b5b6000611303848285016112ca565b91505092915050565b60008115159050919050565b6113218161130c565b82525050565b600060208201905061133c6000830184611318565b92915050565b6000819050919050565b61135581611342565b811461136057600080fd5b50565b6000813590506113728161134c565b92915050565b60006020828403121561138e5761138d611282565b5b600061139c84828501611363565b91505092915050565b6113ae81611342565b82525050565b60006020820190506113c960008301846113a5565b92915050565b6113d881611224565b81146113e357600080fd5b50565b6000813590506113f5816113cf565b92915050565b60006020828403121561141157611410611282565b5b600061141f848285016113e6565b91505092915050565b61143181611203565b811461143c57600080fd5b50565b60008135905061144e81611428565b92915050565b6000806040838503121561146b5761146a611282565b5b600061147985828601611363565b925050602061148a8582860161143f565b9150509250929050565b60006020820190506114a96000830184611215565b92915050565b600080600080608085870312156114c9576114c8611282565b5b60006114d78782880161143f565b94505060206114e88782880161143f565b93505060406114f98782880161143f565b925050606061150a8782880161143f565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061155082611224565b915061155b83611224565b925082820261156981611224565b915082820484148315176115805761157f611516565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006115c182611224565b91506115cc83611224565b9250826115dc576115db611587565b5b828204905092915050565b600081905092915050565b7f43616c6c65720000000000000000000000000000000000000000000000000000600082015250565b60006116286006836115e7565b9150611633826115f2565b600682019050919050565b60006116498261161b565b9150819050919050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006116c0602f83611653565b91506116cb82611664565b604082019050919050565b600060208201905081810360008301526116ef816116b3565b9050919050565b7f526573657276653a2063616c6c6572206973206e6f742074686520696e69746960008201527f616c697a65720000000000000000000000000000000000000000000000000000602082015250565b6000611752602683611653565b915061175d826116f6565b604082019050919050565b6000602082019050818103600083015261178181611745565b9050919050565b7f526573657276653a20696e76616c696420436f6e74726f6c2061646472657373600082015250565b60006117be602083611653565b91506117c982611788565b602082019050919050565b600060208201905081810360008301526117ed816117b1565b9050919050565b60008151905061180381611428565b92915050565b60006020828403121561181f5761181e611282565b5b600061182d848285016117f4565b91505092915050565b60006dffffffffffffffffffffffffffff82169050919050565b61185981611836565b811461186457600080fd5b50565b60008151905061187681611850565b92915050565b600063ffffffff82169050919050565b6118958161187c565b81146118a057600080fd5b50565b6000815190506118b28161188c565b92915050565b6000806000606084860312156118d1576118d0611282565b5b60006118df86828701611867565b93505060206118f086828701611867565b9250506040611901868287016118a3565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081519050919050565b600081905092915050565b60005b8381101561196e578082015181840152602081019050611953565b60008484015250505050565b60006119858261193a565b61198f8185611945565b935061199f818560208601611950565b80840191505092915050565b60006119b7828461197a565b915081905092915050565b7f536166654554483a3a736166655472616e736665724554483a2045544820747260008201527f616e73666572206661696c656400000000000000000000000000000000000000602082015250565b6000611a1e602d83611653565b9150611a29826119c2565b604082019050919050565b60006020820190508181036000830152611a4d81611a11565b9050919050565b6000604082019050611a696000830185611215565b611a766020830184611215565b9392505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611ab36017836115e7565b9150611abe82611a7d565b601782019050919050565b600081519050919050565b6000611adf82611ac9565b611ae981856115e7565b9350611af9818560208601611950565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611b3b6011836115e7565b9150611b4682611b05565b601182019050919050565b6000611b5c82611aa6565b9150611b688285611ad4565b9150611b7382611b2e565b9150611b7f8284611ad4565b91508190509392505050565b6000601f19601f8301169050919050565b6000611ba782611ac9565b611bb18185611653565b9350611bc1818560208601611950565b611bca81611b8b565b840191505092915050565b60006020820190508181036000830152611bef8184611b9c565b905092915050565b6000611c0282611224565b9150611c0d83611224565b9250828201905080821115611c2557611c24611516565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611c6582611224565b915060008203611c7857611c77611516565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000611cb9602083611653565b9150611cc482611c83565b602082019050919050565b60006020820190508181036000830152611ce881611cac565b905091905056fea26469706673582212200f5801ffe996bcf04a3ffbc22d90e30771361c101fb7d0f47b0b560925eae31d64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DD95002 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x3C3 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x319 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x774237FC EQ PUSH2 0x286 JUMPI PUSH2 0x18C JUMP JUMPDEST CALLDATASIZE PUSH2 0x18C JUMPI PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH2 0x144 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3EC JUMP JUMPDEST SWAP1 POP PUSH32 0x3CADFF7F9A0BF97B2F8B9629E31675770CACA33D15E735652794F64ACCE52FA0 PUSH2 0x16F PUSH2 0x423 JUMP JUMPDEST CALLVALUE DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x182 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x12DF JUMP JUMPDEST PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1454 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1454 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C6 PUSH2 0x694 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1454 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32E PUSH2 0x724 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH2 0x72B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x384 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1454 JUMP JUMPDEST PUSH2 0x777 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3FC DUP8 DUP7 DUP7 PUSH2 0x9C2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP2 DUP8 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x49E JUMPI POP PUSH2 0x49D DUP3 PUSH2 0xB2F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4D3 SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x4F2 DUP2 PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x503 PUSH2 0x4FD PUSH2 0x423 JUMP JUMPDEST DUP4 PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH2 0x57C PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3EC JUMP JUMPDEST SWAP1 POP PUSH32 0xB450A08BA9D5BFBC195171A9F21F66B27DE075C9788057B443DC147DA398BE5C PUSH2 0x5A7 PUSH2 0x423 JUMP JUMPDEST DUP6 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5BA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x5D1 DUP3 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x5DA DUP2 PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x5E4 DUP4 DUP4 PUSH2 0xCAD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5F1 PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x655 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x668 DUP3 DUP3 PUSH2 0xD8D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x67B SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x780 DUP3 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x789 DUP2 PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x793 DUP4 DUP4 PUSH2 0xD8D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7D7 PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP1 PUSH2 0x1768 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x893 SWAP1 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CA PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8AE SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 PUSH2 0xCAD JUMP JUMPDEST PUSH2 0x8DE PUSH1 0x0 DUP1 SHL PUSH2 0x8D9 PUSH2 0x423 JUMP JUMPDEST PUSH2 0xCAD JUMP JUMPDEST DUP4 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x9D2 DUP7 DUP7 DUP7 PUSH2 0xE6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB9 SWAP2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB18 JUMPI DUP1 DUP3 PUSH2 0xB1B JUMP JUMPDEST DUP2 DUP2 JUMPDEST DUP1 SWAP7 POP DUP2 SWAP8 POP POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAA DUP2 PUSH2 0xBA5 PUSH2 0x423 JUMP JUMPDEST PUSH2 0xEF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0x190B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC14 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC22 SWAP2 SWAP1 PUSH2 0x19AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9F SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xCB7 DUP3 DUP3 PUSH2 0x6BA JUMP JUMPDEST PUSH2 0xD89 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD2E PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD97 DUP3 DUP3 PUSH2 0x6BA JUMP JUMPDEST ISZERO PUSH2 0xE6A JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE0F PUSH2 0x423 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE6A43905 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAB SWAP3 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x1809 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEFF DUP3 DUP3 PUSH2 0x6BA JUMP JUMPDEST PUSH2 0xF76 JUMPI PUSH2 0xF0C DUP2 PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xF1A DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF2B SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6D SWAP2 SWAP1 PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFA0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDD JUMPI PUSH2 0xFDC PUSH2 0x190B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x100F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1047 JUMPI PUSH2 0x1046 PUSH2 0x1C2B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x10AB JUMPI PUSH2 0x10AA PUSH2 0x1C2B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x1545 JUMP JUMPDEST PUSH2 0x10F5 SWAP2 SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1195 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1137 JUMPI PUSH2 0x1136 PUSH2 0x1C2B JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x114E JUMPI PUSH2 0x114D PUSH2 0x1C2B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x118E SWAP1 PUSH2 0x1C5A JUMP JUMPDEST SWAP1 POP PUSH2 0x10F8 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D0 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120E DUP3 PUSH2 0x11E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121E DUP2 PUSH2 0x1203 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1237 DUP2 PUSH2 0x1224 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1252 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x125F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x122E JUMP JUMPDEST PUSH2 0x126C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x122E JUMP JUMPDEST PUSH2 0x1279 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x122E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BC DUP2 PUSH2 0x1287 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12D9 DUP2 PUSH2 0x12B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F5 JUMPI PUSH2 0x12F4 PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1303 DUP5 DUP3 DUP6 ADD PUSH2 0x12CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1321 DUP2 PUSH2 0x130C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x133C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1318 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1355 DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP2 EQ PUSH2 0x1360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1372 DUP2 PUSH2 0x134C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x138E JUMPI PUSH2 0x138D PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x139C DUP5 DUP3 DUP6 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13AE DUP2 PUSH2 0x1342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D8 DUP2 PUSH2 0x1224 JUMP JUMPDEST DUP2 EQ PUSH2 0x13E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13F5 DUP2 PUSH2 0x13CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1411 JUMPI PUSH2 0x1410 PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x141F DUP5 DUP3 DUP6 ADD PUSH2 0x13E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1431 DUP2 PUSH2 0x1203 JUMP JUMPDEST DUP2 EQ PUSH2 0x143C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x144E DUP2 PUSH2 0x1428 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146B JUMPI PUSH2 0x146A PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1479 DUP6 DUP3 DUP7 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x148A DUP6 DUP3 DUP7 ADD PUSH2 0x143F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x14C9 JUMPI PUSH2 0x14C8 PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D7 DUP8 DUP3 DUP9 ADD PUSH2 0x143F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x14E8 DUP8 DUP3 DUP9 ADD PUSH2 0x143F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x14F9 DUP8 DUP3 DUP9 ADD PUSH2 0x143F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x150A DUP8 DUP3 DUP9 ADD PUSH2 0x143F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1550 DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP PUSH2 0x155B DUP4 PUSH2 0x1224 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1569 DUP2 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1580 JUMPI PUSH2 0x157F PUSH2 0x1516 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15C1 DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CC DUP4 PUSH2 0x1224 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15DC JUMPI PUSH2 0x15DB PUSH2 0x1587 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C65720000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1628 PUSH1 0x6 DUP4 PUSH2 0x15E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1633 DUP3 PUSH2 0x15F2 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1649 DUP3 PUSH2 0x161B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C0 PUSH1 0x2F DUP4 PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP PUSH2 0x16CB DUP3 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16EF DUP2 PUSH2 0x16B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526573657276653A2063616C6C6572206973206E6F742074686520696E697469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C697A65720000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1752 PUSH1 0x26 DUP4 PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP PUSH2 0x175D DUP3 PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1781 DUP2 PUSH2 0x1745 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526573657276653A20696E76616C696420436F6E74726F6C2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17BE PUSH1 0x20 DUP4 PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C9 DUP3 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17ED DUP2 PUSH2 0x17B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1803 DUP2 PUSH2 0x1428 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181F JUMPI PUSH2 0x181E PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182D DUP5 DUP3 DUP6 ADD PUSH2 0x17F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1859 DUP2 PUSH2 0x1836 JUMP JUMPDEST DUP2 EQ PUSH2 0x1864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1876 DUP2 PUSH2 0x1850 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1895 DUP2 PUSH2 0x187C JUMP JUMPDEST DUP2 EQ PUSH2 0x18A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x18B2 DUP2 PUSH2 0x188C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18D1 JUMPI PUSH2 0x18D0 PUSH2 0x1282 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18DF DUP7 DUP3 DUP8 ADD PUSH2 0x1867 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18F0 DUP7 DUP3 DUP8 ADD PUSH2 0x1867 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1901 DUP7 DUP3 DUP8 ADD PUSH2 0x18A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x196E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1985 DUP3 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x198F DUP2 DUP6 PUSH2 0x1945 JUMP JUMPDEST SWAP4 POP PUSH2 0x199F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1950 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B7 DUP3 DUP5 PUSH2 0x197A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654554483A3A736166655472616E736665724554483A20455448207472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E73666572206661696C656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1E PUSH1 0x2D DUP4 PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A29 DUP3 PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4D DUP2 PUSH2 0x1A11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A69 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x1A76 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1215 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB3 PUSH1 0x17 DUP4 PUSH2 0x15E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABE DUP3 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADF DUP3 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x1AE9 DUP2 DUP6 PUSH2 0x15E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AF9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1950 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3B PUSH1 0x11 DUP4 PUSH2 0x15E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B46 DUP3 PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5C DUP3 PUSH2 0x1AA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B68 DUP3 DUP6 PUSH2 0x1AD4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B73 DUP3 PUSH2 0x1B2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7F DUP3 DUP5 PUSH2 0x1AD4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA7 DUP3 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x1BB1 DUP2 DUP6 PUSH2 0x1653 JUMP JUMPDEST SWAP4 POP PUSH2 0x1BC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1950 JUMP JUMPDEST PUSH2 0x1BCA DUP2 PUSH2 0x1B8B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BEF DUP2 DUP5 PUSH2 0x1B9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C02 DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0D DUP4 PUSH2 0x1224 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C25 JUMPI PUSH2 0x1C24 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C65 DUP3 PUSH2 0x1224 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1C78 JUMPI PUSH2 0x1C77 PUSH2 0x1516 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB9 PUSH1 0x20 DUP4 PUSH2 0x1653 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC4 DUP3 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE8 DUP2 PUSH2 0x1CAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF PC ADD SELFDESTRUCT 0xE9 SWAP7 0xBC CREATE 0x4A EXTCODEHASH 0xFB 0xC2 0x2D SWAP1 0xE3 SMOD PUSH18 0x361C101FB7D0F47B0B560925EAE31D64736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "183:2555:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2036:23;2062:21;2036:47;;2094:20;2117:54;2135:7;;;;;;;;;;;2143:15;2160:4;;;;;;;;;;;2166;;;;;;;;;;;2117:17;:54::i;:::-;2094:77;;2189:58;2192:12;:10;:12::i;:::-;2206:9;2217:15;2234:12;2189:58;;;;;;;;;:::i;:::-;;;;;;;;2025:230;183:2555;;;;2686:204:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4509:131;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2386:349:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4950:147:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6094:218;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;277:75:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;437:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2982:147:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2087:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;698:22:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;548:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5390:149:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1333:612:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1046:279:5;1156:15;1185:16;1203;1223:42;1235:14;1250:6;1258;1223:11;:42::i;:::-;1184:81;;;;1309:8;1297;1287:7;:18;;;;:::i;:::-;1286:31;;;;:::i;:::-;1276:41;;1173:152;;1046:279;;;;;;:::o;656:98:11:-;709:7;736:10;729:17;;656:98;:::o;2686:204:10:-;2771:4;2810:32;2795:47;;;:11;:47;;;;:87;;;;2846:36;2870:11;2846:23;:36::i;:::-;2795:87;2788:94;;2686:204;;;:::o;4509:131::-;4583:7;4610:6;:12;4617:4;4610:12;;;;;;;;;;;:22;;;4603:29;;4509:131;;;:::o;2386:349:0:-;325:26;;;;;;;:::i;:::-;;;;;;;;;;;;;315:37;;;;;;2578:16:10;2589:4;2578:10;:16::i;:::-;2462:45:0::1;2486:12;:10;:12::i;:::-;2500:6;2462:23;:45::i;:::-;2518:23;2544:21;2518:47;;2576:20;2599:54;2617:7;;;;;;;;;;;2625:15;2642:4;;;;;;;;;;;2648;;;;;;;;;;;2599:17;:54::i;:::-;2576:77;;2671:56;2675:12;:10;:12::i;:::-;2689:6;2697:15;2714:12;2671:56;;;;;;;;;:::i;:::-;;;;;;;;2451:284;;2386:349:::0;;:::o;4950:147:10:-;5033:18;5046:4;5033:12;:18::i;:::-;2578:16;2589:4;2578:10;:16::i;:::-;5064:25:::1;5075:4;5081:7;5064:10;:25::i;:::-;4950:147:::0;;;:::o;6094:218::-;6201:12;:10;:12::i;:::-;6190:23;;:7;:23;;;6182:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6278:26;6290:4;6296:7;6278:11;:26::i;:::-;6094:218;;:::o;277:75:0:-;325:26;;;;;;;:::i;:::-;;;;;;;;;;;;;315:37;;;;;;277:75;:::o;437:21::-;;;;;;;;;;;;;:::o;2982:147:10:-;3068:4;3092:6;:12;3099:4;3092:12;;;;;;;;;;;:20;;:29;3113:7;3092:29;;;;;;;;;;;;;;;;;;;;;;;;;3085:36;;2982:147;;;;:::o;2087:49::-;2132:4;2087:49;;;:::o;698:22:0:-;;;;;;;;;;;;;:::o;548:21::-;;;;;;;;;;;;;:::o;5390:149:10:-;5474:18;5487:4;5474:12;:18::i;:::-;2578:16;2589:4;2578:10;:16::i;:::-;5505:26:::1;5517:4;5523:7;5505:11;:26::i;:::-;5390:149:::0;;;:::o;1333:612:0:-;1462:12;1446:28;;:12;:10;:12::i;:::-;:28;;;1438:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1655:1;1635:22;;:8;:22;;;1627:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1705:33;325:26;;;;;;;:::i;:::-;;;;;;;;;;;;;315:37;;;;;;1729:8;1705:10;:33::i;:::-;1790:44;2132:4:10;1801:18:0;;1821:12;:10;:12::i;:::-;1790:10;:44::i;:::-;1853:8;1845:7;;:16;;;;;;;;;;;;;;;;;;1878:5;1872:4;;:11;;;;;;;;;;;;;;;;;;1900:5;1894:4;;:11;;;;;;;;;;;;;;;;;;1933:4;1916:14;;:21;;;;;;;;;;;;;;;;;;1333:612;;;;:::o;596:442:5:-;695:16;713;742:12;757:38;765:14;780:6;788;757:7;:38::i;:::-;742:53;;806:14;836:4;823:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;806:44;;862:16;880;915:4;902:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;861:73;;;;;;;;;978:6;968:16;;:6;:16;;;:62;;1011:8;1021;968:62;;;988:8;998;968:62;945:85;;;;;;;;731:307;;;;596:442;;;;;;:::o;866:157:12:-;951:4;990:25;975:40;;;:11;:40;;;;968:47;;866:157;;;:::o;3433:105:10:-;3500:30;3511:4;3517:12;:10;:12::i;:::-;3500:10;:30::i;:::-;3433:105;:::o;91:210:7:-;164:12;182:2;:7;;197:5;214:1;204:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;182:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;163:54;;;236:7;228:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;152:149;91:210;;:::o;7691:238:10:-;7775:22;7783:4;7789:7;7775;:22::i;:::-;7770:152;;7846:4;7814:6;:12;7821:4;7814:12;;;;;;;;;;;:20;;:29;7835:7;7814:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7897:12;:10;:12::i;:::-;7870:40;;7888:7;7870:40;;7882:4;7870:40;;;;;;;;;;7770:152;7691:238;;:::o;8109:239::-;8193:22;8201:4;8207:7;8193;:22::i;:::-;8189:152;;;8264:5;8232:6;:12;8239:4;8232:12;;;;;;;;;;;:20;;:29;8253:7;8232:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8316:12;:10;:12::i;:::-;8289:40;;8307:7;8289:40;;8301:4;8289:40;;;;;;;;;;8189:152;8109:239;;:::o;397:191:5:-;493:12;541:14;525:39;;;565:6;573;525:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;518:62;;397:191;;;;;:::o;3828:492:10:-;3917:22;3925:4;3931:7;3917;:22::i;:::-;3912:401;;4105:28;4125:7;4105:19;:28::i;:::-;4206:38;4234:4;4226:13;;4241:2;4206:19;:38::i;:::-;4010:257;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3956:345;;;;;;;;;;;:::i;:::-;;;;;;;;3912:401;3828:492;;:::o;2471:151:9:-;2529:13;2562:52;2590:4;2574:22;;346:2;2562:52;;:11;:52::i;:::-;2555:59;;2471:151;;;:::o;1867:447::-;1942:13;1968:19;2013:1;2004:6;2000:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1990:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1968:47;;2026:15;:6;2033:1;2026:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2052;:6;2059:1;2052:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2083:9;2108:1;2099:6;2095:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2083:26;;2078:131;2115:1;2111;:5;2078:131;;;2150:8;2167:3;2159:5;:11;2150:21;;;;;;;:::i;:::-;;;;;2138:6;2145:1;2138:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2196:1;2186:11;;;;;2118:3;;;;:::i;:::-;;;2078:131;;;;2236:1;2227:5;:10;2219:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2299:6;2285:21;;;1867:447;;;;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:77::-;402:7;431:5;420:16;;365:77;;;:::o;448:118::-;535:24;553:5;535:24;:::i;:::-;530:3;523:37;448:118;;:::o;572:553::-;749:4;787:3;776:9;772:19;764:27;;801:71;869:1;858:9;854:17;845:6;801:71;:::i;:::-;882:72;950:2;939:9;935:18;926:6;882:72;:::i;:::-;964;1032:2;1021:9;1017:18;1008:6;964:72;:::i;:::-;1046;1114:2;1103:9;1099:18;1090:6;1046:72;:::i;:::-;572:553;;;;;;;:::o;1212:117::-;1321:1;1318;1311:12;1458:149;1494:7;1534:66;1527:5;1523:78;1512:89;;1458:149;;;:::o;1613:120::-;1685:23;1702:5;1685:23;:::i;:::-;1678:5;1675:34;1665:62;;1723:1;1720;1713:12;1665:62;1613:120;:::o;1739:137::-;1784:5;1822:6;1809:20;1800:29;;1838:32;1864:5;1838:32;:::i;:::-;1739:137;;;;:::o;1882:327::-;1940:6;1989:2;1977:9;1968:7;1964:23;1960:32;1957:119;;;1995:79;;:::i;:::-;1957:119;2115:1;2140:52;2184:7;2175:6;2164:9;2160:22;2140:52;:::i;:::-;2130:62;;2086:116;1882:327;;;;:::o;2215:90::-;2249:7;2292:5;2285:13;2278:21;2267:32;;2215:90;;;:::o;2311:109::-;2392:21;2407:5;2392:21;:::i;:::-;2387:3;2380:34;2311:109;;:::o;2426:210::-;2513:4;2551:2;2540:9;2536:18;2528:26;;2564:65;2626:1;2615:9;2611:17;2602:6;2564:65;:::i;:::-;2426:210;;;;:::o;2642:77::-;2679:7;2708:5;2697:16;;2642:77;;;:::o;2725:122::-;2798:24;2816:5;2798:24;:::i;:::-;2791:5;2788:35;2778:63;;2837:1;2834;2827:12;2778:63;2725:122;:::o;2853:139::-;2899:5;2937:6;2924:20;2915:29;;2953:33;2980:5;2953:33;:::i;:::-;2853:139;;;;:::o;2998:329::-;3057:6;3106:2;3094:9;3085:7;3081:23;3077:32;3074:119;;;3112:79;;:::i;:::-;3074:119;3232:1;3257:53;3302:7;3293:6;3282:9;3278:22;3257:53;:::i;:::-;3247:63;;3203:117;2998:329;;;;:::o;3333:118::-;3420:24;3438:5;3420:24;:::i;:::-;3415:3;3408:37;3333:118;;:::o;3457:222::-;3550:4;3588:2;3577:9;3573:18;3565:26;;3601:71;3669:1;3658:9;3654:17;3645:6;3601:71;:::i;:::-;3457:222;;;;:::o;3685:122::-;3758:24;3776:5;3758:24;:::i;:::-;3751:5;3748:35;3738:63;;3797:1;3794;3787:12;3738:63;3685:122;:::o;3813:139::-;3859:5;3897:6;3884:20;3875:29;;3913:33;3940:5;3913:33;:::i;:::-;3813:139;;;;:::o;3958:329::-;4017:6;4066:2;4054:9;4045:7;4041:23;4037:32;4034:119;;;4072:79;;:::i;:::-;4034:119;4192:1;4217:53;4262:7;4253:6;4242:9;4238:22;4217:53;:::i;:::-;4207:63;;4163:117;3958:329;;;;:::o;4293:122::-;4366:24;4384:5;4366:24;:::i;:::-;4359:5;4356:35;4346:63;;4405:1;4402;4395:12;4346:63;4293:122;:::o;4421:139::-;4467:5;4505:6;4492:20;4483:29;;4521:33;4548:5;4521:33;:::i;:::-;4421:139;;;;:::o;4566:474::-;4634:6;4642;4691:2;4679:9;4670:7;4666:23;4662:32;4659:119;;;4697:79;;:::i;:::-;4659:119;4817:1;4842:53;4887:7;4878:6;4867:9;4863:22;4842:53;:::i;:::-;4832:63;;4788:117;4944:2;4970:53;5015:7;5006:6;4995:9;4991:22;4970:53;:::i;:::-;4960:63;;4915:118;4566:474;;;;;:::o;5046:222::-;5139:4;5177:2;5166:9;5162:18;5154:26;;5190:71;5258:1;5247:9;5243:17;5234:6;5190:71;:::i;:::-;5046:222;;;;:::o;5274:765::-;5360:6;5368;5376;5384;5433:3;5421:9;5412:7;5408:23;5404:33;5401:120;;;5440:79;;:::i;:::-;5401:120;5560:1;5585:53;5630:7;5621:6;5610:9;5606:22;5585:53;:::i;:::-;5575:63;;5531:117;5687:2;5713:53;5758:7;5749:6;5738:9;5734:22;5713:53;:::i;:::-;5703:63;;5658:118;5815:2;5841:53;5886:7;5877:6;5866:9;5862:22;5841:53;:::i;:::-;5831:63;;5786:118;5943:2;5969:53;6014:7;6005:6;5994:9;5990:22;5969:53;:::i;:::-;5959:63;;5914:118;5274:765;;;;;;;:::o;6045:180::-;6093:77;6090:1;6083:88;6190:4;6187:1;6180:15;6214:4;6211:1;6204:15;6231:410;6271:7;6294:20;6312:1;6294:20;:::i;:::-;6289:25;;6328:20;6346:1;6328:20;:::i;:::-;6323:25;;6383:1;6380;6376:9;6405:30;6423:11;6405:30;:::i;:::-;6394:41;;6584:1;6575:7;6571:15;6568:1;6565:22;6545:1;6538:9;6518:83;6495:139;;6614:18;;:::i;:::-;6495:139;6279:362;6231:410;;;;:::o;6647:180::-;6695:77;6692:1;6685:88;6792:4;6789:1;6782:15;6816:4;6813:1;6806:15;6833:185;6873:1;6890:20;6908:1;6890:20;:::i;:::-;6885:25;;6924:20;6942:1;6924:20;:::i;:::-;6919:25;;6963:1;6953:35;;6968:18;;:::i;:::-;6953:35;7010:1;7007;7003:9;6998:14;;6833:185;;;;:::o;7024:148::-;7126:11;7163:3;7148:18;;7024:148;;;;:::o;7178:156::-;7318:8;7314:1;7306:6;7302:14;7295:32;7178:156;:::o;7340:400::-;7500:3;7521:84;7603:1;7598:3;7521:84;:::i;:::-;7514:91;;7614:93;7703:3;7614:93;:::i;:::-;7732:1;7727:3;7723:11;7716:18;;7340:400;;;:::o;7746:381::-;7931:3;7953:148;8097:3;7953:148;:::i;:::-;7946:155;;8118:3;8111:10;;7746:381;;;:::o;8133:169::-;8217:11;8251:6;8246:3;8239:19;8291:4;8286:3;8282:14;8267:29;;8133:169;;;;:::o;8308:234::-;8448:34;8444:1;8436:6;8432:14;8425:58;8517:17;8512:2;8504:6;8500:15;8493:42;8308:234;:::o;8548:366::-;8690:3;8711:67;8775:2;8770:3;8711:67;:::i;:::-;8704:74;;8787:93;8876:3;8787:93;:::i;:::-;8905:2;8900:3;8896:12;8889:19;;8548:366;;;:::o;8920:419::-;9086:4;9124:2;9113:9;9109:18;9101:26;;9173:9;9167:4;9163:20;9159:1;9148:9;9144:17;9137:47;9201:131;9327:4;9201:131;:::i;:::-;9193:139;;8920:419;;;:::o;9345:225::-;9485:34;9481:1;9473:6;9469:14;9462:58;9554:8;9549:2;9541:6;9537:15;9530:33;9345:225;:::o;9576:366::-;9718:3;9739:67;9803:2;9798:3;9739:67;:::i;:::-;9732:74;;9815:93;9904:3;9815:93;:::i;:::-;9933:2;9928:3;9924:12;9917:19;;9576:366;;;:::o;9948:419::-;10114:4;10152:2;10141:9;10137:18;10129:26;;10201:9;10195:4;10191:20;10187:1;10176:9;10172:17;10165:47;10229:131;10355:4;10229:131;:::i;:::-;10221:139;;9948:419;;;:::o;10373:182::-;10513:34;10509:1;10501:6;10497:14;10490:58;10373:182;:::o;10561:366::-;10703:3;10724:67;10788:2;10783:3;10724:67;:::i;:::-;10717:74;;10800:93;10889:3;10800:93;:::i;:::-;10918:2;10913:3;10909:12;10902:19;;10561:366;;;:::o;10933:419::-;11099:4;11137:2;11126:9;11122:18;11114:26;;11186:9;11180:4;11176:20;11172:1;11161:9;11157:17;11150:47;11214:131;11340:4;11214:131;:::i;:::-;11206:139;;10933:419;;;:::o;11358:143::-;11415:5;11446:6;11440:13;11431:22;;11462:33;11489:5;11462:33;:::i;:::-;11358:143;;;;:::o;11507:351::-;11577:6;11626:2;11614:9;11605:7;11601:23;11597:32;11594:119;;;11632:79;;:::i;:::-;11594:119;11752:1;11777:64;11833:7;11824:6;11813:9;11809:22;11777:64;:::i;:::-;11767:74;;11723:128;11507:351;;;;:::o;11864:114::-;11901:7;11941:30;11934:5;11930:42;11919:53;;11864:114;;;:::o;11984:122::-;12057:24;12075:5;12057:24;:::i;:::-;12050:5;12047:35;12037:63;;12096:1;12093;12086:12;12037:63;11984:122;:::o;12112:143::-;12169:5;12200:6;12194:13;12185:22;;12216:33;12243:5;12216:33;:::i;:::-;12112:143;;;;:::o;12261:93::-;12297:7;12337:10;12330:5;12326:22;12315:33;;12261:93;;;:::o;12360:120::-;12432:23;12449:5;12432:23;:::i;:::-;12425:5;12422:34;12412:62;;12470:1;12467;12460:12;12412:62;12360:120;:::o;12486:141::-;12542:5;12573:6;12567:13;12558:22;;12589:32;12615:5;12589:32;:::i;:::-;12486:141;;;;:::o;12633:661::-;12720:6;12728;12736;12785:2;12773:9;12764:7;12760:23;12756:32;12753:119;;;12791:79;;:::i;:::-;12753:119;12911:1;12936:64;12992:7;12983:6;12972:9;12968:22;12936:64;:::i;:::-;12926:74;;12882:128;13049:2;13075:64;13131:7;13122:6;13111:9;13107:22;13075:64;:::i;:::-;13065:74;;13020:129;13188:2;13214:63;13269:7;13260:6;13249:9;13245:22;13214:63;:::i;:::-;13204:73;;13159:128;12633:661;;;;;:::o;13300:180::-;13348:77;13345:1;13338:88;13445:4;13442:1;13435:15;13469:4;13466:1;13459:15;13486:98;13537:6;13571:5;13565:12;13555:22;;13486:98;;;:::o;13590:147::-;13691:11;13728:3;13713:18;;13590:147;;;;:::o;13743:246::-;13824:1;13834:113;13848:6;13845:1;13842:13;13834:113;;;13933:1;13928:3;13924:11;13918:18;13914:1;13909:3;13905:11;13898:39;13870:2;13867:1;13863:10;13858:15;;13834:113;;;13981:1;13972:6;13967:3;13963:16;13956:27;13805:184;13743:246;;;:::o;13995:386::-;14099:3;14127:38;14159:5;14127:38;:::i;:::-;14181:88;14262:6;14257:3;14181:88;:::i;:::-;14174:95;;14278:65;14336:6;14331:3;14324:4;14317:5;14313:16;14278:65;:::i;:::-;14368:6;14363:3;14359:16;14352:23;;14103:278;13995:386;;;;:::o;14387:271::-;14517:3;14539:93;14628:3;14619:6;14539:93;:::i;:::-;14532:100;;14649:3;14642:10;;14387:271;;;;:::o;14664:232::-;14804:34;14800:1;14792:6;14788:14;14781:58;14873:15;14868:2;14860:6;14856:15;14849:40;14664:232;:::o;14902:366::-;15044:3;15065:67;15129:2;15124:3;15065:67;:::i;:::-;15058:74;;15141:93;15230:3;15141:93;:::i;:::-;15259:2;15254:3;15250:12;15243:19;;14902:366;;;:::o;15274:419::-;15440:4;15478:2;15467:9;15463:18;15455:26;;15527:9;15521:4;15517:20;15513:1;15502:9;15498:17;15491:47;15555:131;15681:4;15555:131;:::i;:::-;15547:139;;15274:419;;;:::o;15699:332::-;15820:4;15858:2;15847:9;15843:18;15835:26;;15871:71;15939:1;15928:9;15924:17;15915:6;15871:71;:::i;:::-;15952:72;16020:2;16009:9;16005:18;15996:6;15952:72;:::i;:::-;15699:332;;;;;:::o;16037:173::-;16177:25;16173:1;16165:6;16161:14;16154:49;16037:173;:::o;16216:402::-;16376:3;16397:85;16479:2;16474:3;16397:85;:::i;:::-;16390:92;;16491:93;16580:3;16491:93;:::i;:::-;16609:2;16604:3;16600:12;16593:19;;16216:402;;;:::o;16624:99::-;16676:6;16710:5;16704:12;16694:22;;16624:99;;;:::o;16729:390::-;16835:3;16863:39;16896:5;16863:39;:::i;:::-;16918:89;17000:6;16995:3;16918:89;:::i;:::-;16911:96;;17016:65;17074:6;17069:3;17062:4;17055:5;17051:16;17016:65;:::i;:::-;17106:6;17101:3;17097:16;17090:23;;16839:280;16729:390;;;;:::o;17125:167::-;17265:19;17261:1;17253:6;17249:14;17242:43;17125:167;:::o;17298:402::-;17458:3;17479:85;17561:2;17556:3;17479:85;:::i;:::-;17472:92;;17573:93;17662:3;17573:93;:::i;:::-;17691:2;17686:3;17682:12;17675:19;;17298:402;;;:::o;17706:967::-;18088:3;18110:148;18254:3;18110:148;:::i;:::-;18103:155;;18275:95;18366:3;18357:6;18275:95;:::i;:::-;18268:102;;18387:148;18531:3;18387:148;:::i;:::-;18380:155;;18552:95;18643:3;18634:6;18552:95;:::i;:::-;18545:102;;18664:3;18657:10;;17706:967;;;;;:::o;18679:102::-;18720:6;18771:2;18767:7;18762:2;18755:5;18751:14;18747:28;18737:38;;18679:102;;;:::o;18787:377::-;18875:3;18903:39;18936:5;18903:39;:::i;:::-;18958:71;19022:6;19017:3;18958:71;:::i;:::-;18951:78;;19038:65;19096:6;19091:3;19084:4;19077:5;19073:16;19038:65;:::i;:::-;19128:29;19150:6;19128:29;:::i;:::-;19123:3;19119:39;19112:46;;18879:285;18787:377;;;;:::o;19170:313::-;19283:4;19321:2;19310:9;19306:18;19298:26;;19370:9;19364:4;19360:20;19356:1;19345:9;19341:17;19334:47;19398:78;19471:4;19462:6;19398:78;:::i;:::-;19390:86;;19170:313;;;;:::o;19489:191::-;19529:3;19548:20;19566:1;19548:20;:::i;:::-;19543:25;;19582:20;19600:1;19582:20;:::i;:::-;19577:25;;19625:1;19622;19618:9;19611:16;;19646:3;19643:1;19640:10;19637:36;;;19653:18;;:::i;:::-;19637:36;19489:191;;;;:::o;19686:180::-;19734:77;19731:1;19724:88;19831:4;19828:1;19821:15;19855:4;19852:1;19845:15;19872:171;19911:3;19934:24;19952:5;19934:24;:::i;:::-;19925:33;;19980:4;19973:5;19970:15;19967:41;;19988:18;;:::i;:::-;19967:41;20035:1;20028:5;20024:13;20017:20;;19872:171;;;:::o;20049:182::-;20189:34;20185:1;20177:6;20173:14;20166:58;20049:182;:::o;20237:366::-;20379:3;20400:67;20464:2;20459:3;20400:67;:::i;:::-;20393:74;;20476:93;20565:3;20476:93;:::i;:::-;20594:2;20589:3;20585:12;20578:19;;20237:366;;;:::o;20609:419::-;20775:4;20813:2;20802:9;20798:18;20790:26;;20862:9;20856:4;20852:20;20848:1;20837:9;20833:17;20826:47;20890:131;21016:4;20890:131;:::i;:::-;20882:139;;20609:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1492200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CALLER_ROLE()": "745",
								"DEFAULT_ADMIN_ROLE()": "402",
								"USDT()": "2558",
								"WBNB()": "2537",
								"factory()": "2536",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3185",
								"initialize(address,address,address,address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "728",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 2738,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1075,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1075,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1075,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1075,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1015,
									"end": 1075,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1075,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1015,
									"end": 1075,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1075,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1075,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1015,
									"end": 1075,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1075,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1067,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1055,
									"end": 1065,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1055,
									"end": 1065,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1055,
									"end": 1065,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1067,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1055,
									"end": 1067,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1067,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1055,
									"end": 1067,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1055,
									"end": 1067,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1040,
									"end": 1067,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1040,
									"end": 1067,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1040,
									"end": 1067,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1040,
									"end": 1067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1040,
									"end": 1067,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1040,
									"end": 1067,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1040,
									"end": 1067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1040,
									"end": 1067,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1040,
									"end": 1067,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1040,
									"end": 1067,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 754,
									"name": "tag",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 729,
									"end": 746,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 729,
									"end": 746,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 656,
									"end": 754,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 656,
									"end": 754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 2738,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f5801ffe996bcf04a3ffbc22d90e30771361c101fb7d0f47b0b560925eae31d64736f6c63430008130033",
									".code": [
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "C45A0155"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "C45A0155"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "C54E44EB"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "F8C8765E"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "774237FC"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2036,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2135,
											"end": 2142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2117,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3CADFF7F9A0BF97B2F8B9629E31675770CACA33D15E735652794F64ACCE52FA0"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2192,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2192,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2215,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2232,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2189,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2247,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2255,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 2738,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2686,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2686,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2686,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4509,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4509,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 4509,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2386,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2386,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 4950,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4950,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 6094,
											"end": 6312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 6094,
											"end": 6312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 277,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 277,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 277,
											"end": 352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 277,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 277,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 277,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 277,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 277,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 277,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 277,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 437,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 437,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2982,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2982,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2982,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2087,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2087,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 698,
											"end": 720,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 698,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 698,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 548,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 548,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 5390,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 5390,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1333,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1333,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1046,
											"end": 1325,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1046,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1201,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1219,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1235,
											"end": 1249,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1223,
											"end": 1265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1265,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1223,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1184,
											"end": 1265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1305,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1294,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1287,
											"end": 1305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1286,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1317,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1325,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1325,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2842,
											"name": "PUSH",
											"source": 10,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2870,
											"end": 2881,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2846,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2882,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2846,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4583,
											"end": 4590,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4632,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4632,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 325,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2578,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2486,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2486,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2486,
											"end": 2498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2486,
											"end": 2498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2486,
											"end": 2498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2462,
											"end": 2507,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2507,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2462,
											"end": 2507,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2565,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2576,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2617,
											"end": 2624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2617,
											"end": 2624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2624,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2617,
											"end": 2624,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2624,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2617,
											"end": 2624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2617,
											"end": 2624,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2625,
											"end": 2640,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2642,
											"end": 2646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2646,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2642,
											"end": 2646,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2646,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2642,
											"end": 2646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2648,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2648,
											"end": 2652,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2648,
											"end": 2652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2599,
											"end": 2653,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2653,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2599,
											"end": 2653,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2576,
											"end": 2653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2576,
											"end": 2653,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B450A08BA9D5BFBC195171A9F21F66B27DE075C9788057B443DC147DA398BE5C"
										},
										{
											"begin": 2675,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2675,
											"end": 2685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2675,
											"end": 2687,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2675,
											"end": 2687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2695,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2712,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2726,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2671,
											"end": 2727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2671,
											"end": 2727,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 5046,
											"end": 5050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 5033,
											"end": 5051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5051,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 5033,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2578,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5064,
											"end": 5089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5075,
											"end": 5079,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5064,
											"end": 5074,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 5064,
											"end": 5089,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5064,
											"end": 5089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5064,
											"end": 5089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6201,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 6201,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 6201,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6201,
											"end": 6213,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 6201,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6197,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 6182,
											"end": 6265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6278,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 6290,
											"end": 6294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6296,
											"end": 6303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6278,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 6278,
											"end": 6304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6278,
											"end": 6304,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 6278,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 277,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 277,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 325,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 277,
											"end": 352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 437,
											"end": 458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 437,
											"end": 458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3103,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3120,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2132,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 698,
											"end": 720,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 698,
											"end": 720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 698,
											"end": 720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 548,
											"end": 569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 548,
											"end": 569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 5487,
											"end": 5491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5474,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 5474,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2578,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 5517,
											"end": 5521,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5530,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 5505,
											"end": 5531,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5531,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 5505,
											"end": 5531,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1474,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1446,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1446,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1438,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1643,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1657,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1627,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1627,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1705,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 325,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1729,
											"end": 1737,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1705,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1705,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1705,
											"end": 1738,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1705,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2132,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1819,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1821,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1821,
											"end": 1833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1821,
											"end": 1833,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1821,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1790,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1834,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1790,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1853,
											"end": 1861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 1883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1876,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1872,
											"end": 1876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1900,
											"end": 1905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1933,
											"end": 1937,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1916,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1916,
											"end": 1930,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 596,
											"end": 1038,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 596,
											"end": 1038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 695,
											"end": 711,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 742,
											"end": 754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 765,
											"end": 779,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 788,
											"end": 794,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 757,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 757,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 757,
											"end": 795,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 757,
											"end": 795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 795,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 742,
											"end": 795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 806,
											"end": 820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 823,
											"end": 848,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 823,
											"end": 848,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 823,
											"end": 848,
											"name": "PUSH",
											"source": 5,
											"value": "DFE1681"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 823,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 823,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 823,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 806,
											"end": 850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 806,
											"end": 850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 862,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 915,
											"end": 919,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 902,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 902,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "902F1AC"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 902,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 902,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 902,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 861,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 861,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 934,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 861,
											"end": 934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 861,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 861,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 934,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 861,
											"end": 934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 861,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 978,
											"end": 984,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 968,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 984,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 968,
											"end": 974,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 968,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 984,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 968,
											"end": 984,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1011,
											"end": 1019,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1029,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 996,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 968,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 945,
											"end": 1030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 945,
											"end": 1030,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 945,
											"end": 1030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 945,
											"end": 1030,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 945,
											"end": 1030,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 945,
											"end": 1030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 945,
											"end": 1030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 945,
											"end": 1030,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 731,
											"end": 1038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 731,
											"end": 1038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 731,
											"end": 1038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 731,
											"end": 1038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 596,
											"end": 1038,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 596,
											"end": 1038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 596,
											"end": 1038,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 596,
											"end": 1038,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 596,
											"end": 1038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 596,
											"end": 1038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 596,
											"end": 1038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 951,
											"end": 955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1015,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 975,
											"end": 986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 968,
											"end": 1015,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 968,
											"end": 1015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 866,
											"end": 1023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3433,
											"end": 3538,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 3433,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 3517,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3529,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 3517,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3500,
											"end": 3530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3433,
											"end": 3538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3433,
											"end": 3538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 91,
											"end": 301,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 91,
											"end": 301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 164,
											"end": 176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 182,
											"end": 189,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 182,
											"end": 189,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 197,
											"end": 202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 215,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 204,
											"end": 216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 204,
											"end": 216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 204,
											"end": 216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 182,
											"end": 217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 182,
											"end": 217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 182,
											"end": 217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 163,
											"end": 217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 163,
											"end": 217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 163,
											"end": 217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 236,
											"end": 243,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 228,
											"end": 293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 293,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 228,
											"end": 293,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 228,
											"end": 293,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 228,
											"end": 293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 228,
											"end": 293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 228,
											"end": 293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 293,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 228,
											"end": 293,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 228,
											"end": 293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 152,
											"end": 301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 91,
											"end": 301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 91,
											"end": 301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 91,
											"end": 301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7691,
											"end": 7929,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 7691,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7783,
											"end": 7787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 7796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 7775,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 7797,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7775,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 7770,
											"end": 7922,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7846,
											"end": 7850,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 7825,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7842,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 7897,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 7897,
											"end": 7909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7909,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 7897,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7888,
											"end": 7895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 7886,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7922,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 7770,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8109,
											"end": 8348,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 8109,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 8201,
											"end": 8205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 8193,
											"end": 8215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8215,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 8193,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8238,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8239,
											"end": 8243,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8260,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 8316,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 8316,
											"end": 8328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8307,
											"end": 8314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8301,
											"end": 8305,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8109,
											"end": 8348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8109,
											"end": 8348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8109,
											"end": 8348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 397,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 397,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 493,
											"end": 505,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 555,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 525,
											"end": 564,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 525,
											"end": 564,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 525,
											"end": 564,
											"name": "PUSH",
											"source": 5,
											"value": "E6A43905"
										},
										{
											"begin": 565,
											"end": 571,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 573,
											"end": 579,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 525,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 525,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 525,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 518,
											"end": 580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 518,
											"end": 580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 397,
											"end": 588,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 397,
											"end": 588,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 397,
											"end": 588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 397,
											"end": 588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 397,
											"end": 588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 397,
											"end": 588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 4320,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3828,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 3925,
											"end": 3929,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3917,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3912,
											"end": 4313,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4105,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4125,
											"end": 4132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4105,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 4105,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4105,
											"end": 4133,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4105,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4234,
											"end": 4238,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4206,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4206,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4244,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4206,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 4010,
											"end": 4267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3956,
											"end": 4301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4313,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3912,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2529,
											"end": 2542,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2590,
											"end": 2594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2574,
											"end": 2596,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2596,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 346,
											"end": 348,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2562,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2614,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2555,
											"end": 2614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2471,
											"end": 2622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1968,
											"end": 1987,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2004,
											"end": 2010,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2000,
											"end": 2010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2000,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1990,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1968,
											"end": 2015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1968,
											"end": 2015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "PUSH",
											"source": 9,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2026,
											"end": 2032,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2026,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2052,
											"end": 2058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2052,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2092,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2099,
											"end": 2105,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2095,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2095,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2083,
											"end": 2109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2115,
											"end": 2116,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2111,
											"end": 2112,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2158,
											"name": "PUSH",
											"source": 9,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2167,
											"end": 2170,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 2159,
											"end": 2164,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2170,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2150,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2145,
											"end": 2146,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 2138,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2196,
											"end": 2197,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2118,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2237,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2219,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2285,
											"end": 2306,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2285,
											"end": 2306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2285,
											"end": 2306,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 442,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 365,
											"end": 442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 402,
											"end": 409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 420,
											"end": 436,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 436,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 442,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 365,
											"end": 442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 365,
											"end": 442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 448,
											"end": 566,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 448,
											"end": 566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 535,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 553,
											"end": 558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 535,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 535,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 535,
											"end": 559,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 535,
											"end": 559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 530,
											"end": 533,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 523,
											"end": 560,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 448,
											"end": 566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 448,
											"end": 566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 448,
											"end": 566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 572,
											"end": 1125,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 572,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 749,
											"end": 753,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 790,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 776,
											"end": 785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 772,
											"end": 791,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 764,
											"end": 791,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 764,
											"end": 791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 801,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 869,
											"end": 870,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 867,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 854,
											"end": 871,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 845,
											"end": 851,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 801,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 801,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 801,
											"end": 872,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 801,
											"end": 872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 882,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 935,
											"end": 953,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 926,
											"end": 932,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 882,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 882,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 882,
											"end": 954,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 882,
											"end": 954,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 1032,
											"end": 1034,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1035,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1008,
											"end": 1014,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 964,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 964,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1046,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 1114,
											"end": 1116,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1096,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1046,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 1046,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1046,
											"end": 1118,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 1046,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 572,
											"end": 1125,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 572,
											"end": 1125,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 572,
											"end": 1125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 572,
											"end": 1125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 572,
											"end": 1125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 572,
											"end": 1125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 572,
											"end": 1125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 572,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1329,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 1212,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1321,
											"end": 1322,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1311,
											"end": 1323,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1458,
											"end": 1607,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 1458,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1494,
											"end": 1501,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1600,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1527,
											"end": 1532,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1523,
											"end": 1601,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1512,
											"end": 1601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1512,
											"end": 1601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1458,
											"end": 1607,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1458,
											"end": 1607,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1458,
											"end": 1607,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1458,
											"end": 1607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1613,
											"end": 1733,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 1613,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 1685,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1708,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 1685,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1678,
											"end": 1683,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1675,
											"end": 1709,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1665,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 1665,
											"end": 1727,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1665,
											"end": 1727,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 1665,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1613,
											"end": 1733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1613,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1876,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 1739,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1784,
											"end": 1789,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1800,
											"end": 1829,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1800,
											"end": 1829,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 1864,
											"end": 1869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 1838,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1876,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 2209,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1882,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1946,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 1991,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1975,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1960,
											"end": 1992,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 1995,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 1995,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1995,
											"end": 2074,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 1995,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 1957,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2116,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2164,
											"end": 2173,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2160,
											"end": 2182,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 2140,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2192,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2086,
											"end": 2202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 2209,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 2209,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 2209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 2209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 2209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2305,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 2215,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2297,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2285,
											"end": 2298,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2278,
											"end": 2299,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2267,
											"end": 2299,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2267,
											"end": 2299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2305,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2305,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2305,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2311,
											"end": 2420,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 2311,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 2407,
											"end": 2412,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 2392,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2413,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 2392,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2380,
											"end": 2414,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2311,
											"end": 2420,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2311,
											"end": 2420,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2311,
											"end": 2420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2426,
											"end": 2636,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2426,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2553,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2549,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2554,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2624,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2611,
											"end": 2628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 2564,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2629,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 2564,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2426,
											"end": 2636,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2426,
											"end": 2636,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2426,
											"end": 2636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2426,
											"end": 2636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2426,
											"end": 2636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2719,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 2642,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2679,
											"end": 2686,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2713,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2697,
											"end": 2713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2697,
											"end": 2713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2719,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2719,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2719,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2725,
											"end": 2847,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2725,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 2798,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2822,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 2798,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2791,
											"end": 2796,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2788,
											"end": 2823,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 2778,
											"end": 2841,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2837,
											"end": 2838,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2835,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2827,
											"end": 2839,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2841,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 2778,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2725,
											"end": 2847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2725,
											"end": 2847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2992,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 2853,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2944,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2944,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 2980,
											"end": 2985,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2953,
											"end": 2986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 2986,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 2953,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2992,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2992,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2998,
											"end": 3327,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 2998,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3063,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3108,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3094,
											"end": 3103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3085,
											"end": 3092,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3104,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3109,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3074,
											"end": 3193,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3074,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 3074,
											"end": 3193,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 3112,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 3112,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3191,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 3112,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3074,
											"end": 3193,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 3074,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3232,
											"end": 3233,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 3302,
											"end": 3309,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3299,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3282,
											"end": 3291,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3278,
											"end": 3300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 3257,
											"end": 3310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3310,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 3257,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3310,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3310,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3203,
											"end": 3320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2998,
											"end": 3327,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2998,
											"end": 3327,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2998,
											"end": 3327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2998,
											"end": 3327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2998,
											"end": 3327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3451,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 3333,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3420,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 3438,
											"end": 3443,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3420,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 3420,
											"end": 3444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3420,
											"end": 3444,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 3420,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3418,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3445,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3333,
											"end": 3451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3679,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 3457,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3550,
											"end": 3554,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3590,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3577,
											"end": 3586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3591,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3565,
											"end": 3591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3565,
											"end": 3591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3601,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 3669,
											"end": 3670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3667,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3654,
											"end": 3671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3601,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 3601,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3601,
											"end": 3672,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 3601,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3679,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3679,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3685,
											"end": 3807,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 3685,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 3776,
											"end": 3781,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 3758,
											"end": 3782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3782,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 3758,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3751,
											"end": 3756,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3748,
											"end": 3783,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3738,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 3738,
											"end": 3801,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3795,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3738,
											"end": 3801,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 3738,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3685,
											"end": 3807,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3685,
											"end": 3807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3813,
											"end": 3952,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 3813,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3884,
											"end": 3904,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3904,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3913,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 3940,
											"end": 3945,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3913,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 3913,
											"end": 3946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3913,
											"end": 3946,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 3913,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3813,
											"end": 3952,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3813,
											"end": 3952,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3813,
											"end": 3952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3813,
											"end": 3952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3813,
											"end": 3952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4023,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4068,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4063,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4069,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4072,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 4072,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 4072,
											"end": 4151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4072,
											"end": 4151,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 4072,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4253,
											"end": 4259,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4251,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4238,
											"end": 4260,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4217,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 4217,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4217,
											"end": 4270,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 4217,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4207,
											"end": 4270,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4207,
											"end": 4270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4293,
											"end": 4415,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 4293,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 4366,
											"end": 4390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4390,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 4366,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4359,
											"end": 4364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4391,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4346,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 4346,
											"end": 4409,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4405,
											"end": 4406,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4403,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4395,
											"end": 4407,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4346,
											"end": 4409,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 4346,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4293,
											"end": 4415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4293,
											"end": 4415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4560,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 4421,
											"end": 4560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4467,
											"end": 4472,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4511,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4492,
											"end": 4512,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4512,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 4548,
											"end": 4553,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 4521,
											"end": 4554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4554,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 4521,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4560,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4560,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4560,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4560,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4566,
											"end": 5040,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 4566,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4634,
											"end": 4640,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4648,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4691,
											"end": 4693,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4679,
											"end": 4688,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4677,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4689,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4694,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4659,
											"end": 4778,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4659,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 4659,
											"end": 4778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 4697,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 4697,
											"end": 4776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4776,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 4697,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4659,
											"end": 4778,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 4659,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4817,
											"end": 4818,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 4887,
											"end": 4894,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4878,
											"end": 4884,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4876,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4863,
											"end": 4885,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4842,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 4842,
											"end": 4895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4842,
											"end": 4895,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 4842,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4832,
											"end": 4895,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4832,
											"end": 4895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4788,
											"end": 4905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4946,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4991,
											"end": 5013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4970,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 4970,
											"end": 5023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4970,
											"end": 5023,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 4970,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4960,
											"end": 5023,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4960,
											"end": 5023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4915,
											"end": 5033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4566,
											"end": 5040,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4566,
											"end": 5040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4566,
											"end": 5040,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4566,
											"end": 5040,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4566,
											"end": 5040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4566,
											"end": 5040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5268,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 5046,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5139,
											"end": 5143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5179,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5162,
											"end": 5180,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5154,
											"end": 5180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5154,
											"end": 5180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5190,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 5258,
											"end": 5259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5247,
											"end": 5256,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5243,
											"end": 5260,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5234,
											"end": 5240,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5190,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 5190,
											"end": 5261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5190,
											"end": 5261,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 5190,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5268,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5268,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 6039,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 5274,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5366,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5436,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5412,
											"end": 5419,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5431,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5404,
											"end": 5437,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5521,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 5401,
											"end": 5521,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5440,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 5440,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5440,
											"end": 5519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5440,
											"end": 5519,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 5440,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5521,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 5401,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5561,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 5630,
											"end": 5637,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5621,
											"end": 5627,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5610,
											"end": 5619,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5606,
											"end": 5628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5585,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5585,
											"end": 5638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5585,
											"end": 5638,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 5585,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5575,
											"end": 5638,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5575,
											"end": 5638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5713,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 5758,
											"end": 5765,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5749,
											"end": 5755,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5738,
											"end": 5747,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5756,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5713,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5713,
											"end": 5766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5713,
											"end": 5766,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 5713,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5703,
											"end": 5766,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5703,
											"end": 5766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5658,
											"end": 5776,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5815,
											"end": 5817,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5841,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 5886,
											"end": 5893,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5877,
											"end": 5883,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5875,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5862,
											"end": 5884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5841,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5841,
											"end": 5894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5841,
											"end": 5894,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 5841,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5831,
											"end": 5894,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5831,
											"end": 5894,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5786,
											"end": 5904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5943,
											"end": 5945,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5969,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6014,
											"end": 6021,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6005,
											"end": 6011,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6003,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5990,
											"end": 6012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5969,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 5969,
											"end": 6022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5969,
											"end": 6022,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5969,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5959,
											"end": 6022,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5959,
											"end": 6022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 6032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 6039,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 6039,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 6039,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 6039,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 6039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 6039,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 6039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 6039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6045,
											"end": 6225,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6045,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6093,
											"end": 6170,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6190,
											"end": 6194,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 6187,
											"end": 6188,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6180,
											"end": 6195,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6214,
											"end": 6218,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6211,
											"end": 6212,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6219,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6231,
											"end": 6641,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 6231,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 6312,
											"end": 6313,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6294,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 6294,
											"end": 6314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6294,
											"end": 6314,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 6294,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6289,
											"end": 6314,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6289,
											"end": 6314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6328,
											"end": 6348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6328,
											"end": 6348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 6328,
											"end": 6348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6328,
											"end": 6348,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 6328,
											"end": 6348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6323,
											"end": 6348,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6323,
											"end": 6348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6383,
											"end": 6384,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6380,
											"end": 6381,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6385,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6405,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 6423,
											"end": 6434,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6405,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 6405,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6405,
											"end": 6435,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 6405,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6394,
											"end": 6435,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6394,
											"end": 6435,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6584,
											"end": 6585,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6575,
											"end": 6582,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6568,
											"end": 6569,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6565,
											"end": 6587,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 6546,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6547,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 6601,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 6495,
											"end": 6634,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6614,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 6614,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6634,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 6495,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6279,
											"end": 6641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6231,
											"end": 6641,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6231,
											"end": 6641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6231,
											"end": 6641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6231,
											"end": 6641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6231,
											"end": 6641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6647,
											"end": 6827,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6647,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6695,
											"end": 6772,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6692,
											"end": 6693,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6685,
											"end": 6773,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6792,
											"end": 6796,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 6789,
											"end": 6790,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6782,
											"end": 6797,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6820,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6821,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6833,
											"end": 7018,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 6833,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 6908,
											"end": 6909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6890,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 6890,
											"end": 6910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6890,
											"end": 6910,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 6890,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6885,
											"end": 6910,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6885,
											"end": 6910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6924,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 6942,
											"end": 6943,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6924,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 6924,
											"end": 6944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6924,
											"end": 6944,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 6924,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6919,
											"end": 6944,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6919,
											"end": 6944,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6963,
											"end": 6964,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6968,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 6968,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 6953,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7008,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7003,
											"end": 7012,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6998,
											"end": 7012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6998,
											"end": 7012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6833,
											"end": 7018,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6833,
											"end": 7018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6833,
											"end": 7018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6833,
											"end": 7018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6833,
											"end": 7018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7024,
											"end": 7172,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 7024,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7126,
											"end": 7137,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7148,
											"end": 7166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7024,
											"end": 7172,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7024,
											"end": 7172,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7024,
											"end": 7172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7024,
											"end": 7172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7024,
											"end": 7172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7178,
											"end": 7334,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 7178,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7318,
											"end": 7326,
											"name": "PUSH",
											"source": 13,
											"value": "43616C6C65720000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7314,
											"end": 7315,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7306,
											"end": 7312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7302,
											"end": 7316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7295,
											"end": 7327,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7178,
											"end": 7334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7178,
											"end": 7334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7340,
											"end": 7740,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 7340,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7500,
											"end": 7503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 7603,
											"end": 7604,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 7598,
											"end": 7601,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 7521,
											"end": 7605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 7605,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 7521,
											"end": 7605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7514,
											"end": 7605,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7514,
											"end": 7605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7614,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 7703,
											"end": 7706,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7614,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 7614,
											"end": 7707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7614,
											"end": 7707,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 7614,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7733,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 7727,
											"end": 7730,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7723,
											"end": 7734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7340,
											"end": 7740,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7340,
											"end": 7740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7340,
											"end": 7740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7340,
											"end": 7740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 8127,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 7746,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7931,
											"end": 7934,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7953,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 8097,
											"end": 8100,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 7953,
											"end": 8101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 8101,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 7953,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7946,
											"end": 8101,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7946,
											"end": 8101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8118,
											"end": 8121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8111,
											"end": 8121,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8111,
											"end": 8121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 8127,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 8127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 8127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7746,
											"end": 8127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8133,
											"end": 8302,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 8133,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8228,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8251,
											"end": 8257,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8249,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8239,
											"end": 8258,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8291,
											"end": 8295,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8286,
											"end": 8289,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8282,
											"end": 8296,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8267,
											"end": 8296,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8267,
											"end": 8296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8133,
											"end": 8302,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8133,
											"end": 8302,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8133,
											"end": 8302,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8133,
											"end": 8302,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8133,
											"end": 8302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8308,
											"end": 8542,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 8308,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8448,
											"end": 8482,
											"name": "PUSH",
											"source": 13,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 8444,
											"end": 8445,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 8442,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8432,
											"end": 8446,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8517,
											"end": 8534,
											"name": "PUSH",
											"source": 13,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 8512,
											"end": 8514,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8504,
											"end": 8510,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8500,
											"end": 8515,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8493,
											"end": 8535,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8308,
											"end": 8542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8308,
											"end": 8542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8548,
											"end": 8914,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 8548,
											"end": 8914,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8690,
											"end": 8693,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 8775,
											"end": 8777,
											"name": "PUSH",
											"source": 13,
											"value": "2F"
										},
										{
											"begin": 8770,
											"end": 8773,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8711,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 8711,
											"end": 8778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8711,
											"end": 8778,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 8711,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8704,
											"end": 8778,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8704,
											"end": 8778,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8787,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 8876,
											"end": 8879,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8787,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 8787,
											"end": 8880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8787,
											"end": 8880,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 8787,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8905,
											"end": 8907,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8900,
											"end": 8903,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8896,
											"end": 8908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8889,
											"end": 8908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8889,
											"end": 8908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8548,
											"end": 8914,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8548,
											"end": 8914,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8548,
											"end": 8914,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8548,
											"end": 8914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 9339,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 8920,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9124,
											"end": 9126,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9113,
											"end": 9122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9101,
											"end": 9127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9101,
											"end": 9127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9167,
											"end": 9171,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9159,
											"end": 9160,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9148,
											"end": 9157,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9144,
											"end": 9161,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9137,
											"end": 9184,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9201,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 9327,
											"end": 9331,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9201,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 9201,
											"end": 9332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9201,
											"end": 9332,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 9201,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9193,
											"end": 9332,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9193,
											"end": 9332,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 9339,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 9339,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 9339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 9339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9345,
											"end": 9570,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 9345,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9485,
											"end": 9519,
											"name": "PUSH",
											"source": 13,
											"value": "526573657276653A2063616C6C6572206973206E6F742074686520696E697469"
										},
										{
											"begin": 9481,
											"end": 9482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9473,
											"end": 9479,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9469,
											"end": 9483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9462,
											"end": 9520,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9554,
											"end": 9562,
											"name": "PUSH",
											"source": 13,
											"value": "616C697A65720000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9549,
											"end": 9551,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9541,
											"end": 9547,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9537,
											"end": 9552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9530,
											"end": 9563,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9345,
											"end": 9570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9345,
											"end": 9570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9576,
											"end": 9942,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 9576,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9718,
											"end": 9721,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9739,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 9803,
											"end": 9805,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 9798,
											"end": 9801,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9739,
											"end": 9806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 9739,
											"end": 9806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9739,
											"end": 9806,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 9739,
											"end": 9806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9732,
											"end": 9806,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9732,
											"end": 9806,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9815,
											"end": 9908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 9904,
											"end": 9907,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9815,
											"end": 9908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 9815,
											"end": 9908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9815,
											"end": 9908,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 9815,
											"end": 9908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9933,
											"end": 9935,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9924,
											"end": 9936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9917,
											"end": 9936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9917,
											"end": 9936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9576,
											"end": 9942,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9576,
											"end": 9942,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9576,
											"end": 9942,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9576,
											"end": 9942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9948,
											"end": 10367,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 9948,
											"end": 10367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10114,
											"end": 10118,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10152,
											"end": 10154,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10141,
											"end": 10150,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10137,
											"end": 10155,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10129,
											"end": 10155,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10129,
											"end": 10155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10201,
											"end": 10210,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10195,
											"end": 10199,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10191,
											"end": 10211,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10187,
											"end": 10188,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10176,
											"end": 10185,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10172,
											"end": 10189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10165,
											"end": 10212,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10229,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 10355,
											"end": 10359,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10229,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 10229,
											"end": 10360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10229,
											"end": 10360,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 10229,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10221,
											"end": 10360,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10221,
											"end": 10360,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9948,
											"end": 10367,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9948,
											"end": 10367,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9948,
											"end": 10367,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9948,
											"end": 10367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10373,
											"end": 10555,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 10373,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10513,
											"end": 10547,
											"name": "PUSH",
											"source": 13,
											"value": "526573657276653A20696E76616C696420436F6E74726F6C2061646472657373"
										},
										{
											"begin": 10509,
											"end": 10510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10501,
											"end": 10507,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10497,
											"end": 10511,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10490,
											"end": 10548,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10373,
											"end": 10555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10373,
											"end": 10555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10561,
											"end": 10927,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 10561,
											"end": 10927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10703,
											"end": 10706,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10724,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 10788,
											"end": 10790,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10783,
											"end": 10786,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 10724,
											"end": 10791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10791,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 10724,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10717,
											"end": 10791,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10717,
											"end": 10791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10800,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 10889,
											"end": 10892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10800,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 10800,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10800,
											"end": 10893,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 10800,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10918,
											"end": 10920,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10913,
											"end": 10916,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10909,
											"end": 10921,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10902,
											"end": 10921,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10902,
											"end": 10921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10561,
											"end": 10927,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10561,
											"end": 10927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10561,
											"end": 10927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10561,
											"end": 10927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10933,
											"end": 11352,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 10933,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11099,
											"end": 11103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11137,
											"end": 11139,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11126,
											"end": 11135,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11122,
											"end": 11140,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11114,
											"end": 11140,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11114,
											"end": 11140,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11186,
											"end": 11195,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11180,
											"end": 11184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11176,
											"end": 11196,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11172,
											"end": 11173,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11161,
											"end": 11170,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11157,
											"end": 11174,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11150,
											"end": 11197,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11214,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 11340,
											"end": 11344,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11214,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 11214,
											"end": 11345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11214,
											"end": 11345,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 11214,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10933,
											"end": 11352,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10933,
											"end": 11352,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10933,
											"end": 11352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10933,
											"end": 11352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11358,
											"end": 11501,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 11358,
											"end": 11501,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11415,
											"end": 11420,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11446,
											"end": 11452,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11440,
											"end": 11453,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11431,
											"end": 11453,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11431,
											"end": 11453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 11495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 11489,
											"end": 11494,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 11495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 11462,
											"end": 11495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 11495,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 11462,
											"end": 11495,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11358,
											"end": 11501,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11358,
											"end": 11501,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11358,
											"end": 11501,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11358,
											"end": 11501,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11358,
											"end": 11501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11507,
											"end": 11858,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 11507,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11577,
											"end": 11583,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11626,
											"end": 11628,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11614,
											"end": 11623,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11605,
											"end": 11612,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11601,
											"end": 11624,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11597,
											"end": 11629,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11594,
											"end": 11713,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11594,
											"end": 11713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 11594,
											"end": 11713,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11632,
											"end": 11711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 11632,
											"end": 11711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 11632,
											"end": 11711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11632,
											"end": 11711,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 11632,
											"end": 11711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11594,
											"end": 11713,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 11594,
											"end": 11713,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11752,
											"end": 11753,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11777,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 11833,
											"end": 11840,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11824,
											"end": 11830,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11813,
											"end": 11822,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11809,
											"end": 11831,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11777,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 11777,
											"end": 11841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11777,
											"end": 11841,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 11777,
											"end": 11841,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11767,
											"end": 11841,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11767,
											"end": 11841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11723,
											"end": 11851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11507,
											"end": 11858,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11507,
											"end": 11858,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11507,
											"end": 11858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11507,
											"end": 11858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11507,
											"end": 11858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11864,
											"end": 11978,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 11864,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11901,
											"end": 11908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11941,
											"end": 11971,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11934,
											"end": 11939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11930,
											"end": 11972,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11919,
											"end": 11972,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11919,
											"end": 11972,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11864,
											"end": 11978,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11864,
											"end": 11978,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11864,
											"end": 11978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11864,
											"end": 11978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11984,
											"end": 12106,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 11984,
											"end": 12106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12057,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 12075,
											"end": 12080,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12057,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 12057,
											"end": 12081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12057,
											"end": 12081,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 12057,
											"end": 12081,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12050,
											"end": 12055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12047,
											"end": 12082,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 12037,
											"end": 12100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 12037,
											"end": 12100,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12096,
											"end": 12097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12093,
											"end": 12094,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12086,
											"end": 12098,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12037,
											"end": 12100,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 12037,
											"end": 12100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11984,
											"end": 12106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11984,
											"end": 12106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12112,
											"end": 12255,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 12112,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12169,
											"end": 12174,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12200,
											"end": 12206,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12194,
											"end": 12207,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12185,
											"end": 12207,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12185,
											"end": 12207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12216,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 12243,
											"end": 12248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12216,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 12216,
											"end": 12249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12216,
											"end": 12249,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 12216,
											"end": 12249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12112,
											"end": 12255,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12112,
											"end": 12255,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12112,
											"end": 12255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12112,
											"end": 12255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12112,
											"end": 12255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12261,
											"end": 12354,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 12261,
											"end": 12354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12297,
											"end": 12304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12337,
											"end": 12347,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12330,
											"end": 12335,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12326,
											"end": 12348,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12315,
											"end": 12348,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12315,
											"end": 12348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12261,
											"end": 12354,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12261,
											"end": 12354,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12261,
											"end": 12354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12261,
											"end": 12354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12360,
											"end": 12480,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 12360,
											"end": 12480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12432,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 12449,
											"end": 12454,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12432,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 12432,
											"end": 12455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12432,
											"end": 12455,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 12432,
											"end": 12455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 12430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12422,
											"end": 12456,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 12412,
											"end": 12474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 12412,
											"end": 12474,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12470,
											"end": 12471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12467,
											"end": 12468,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12472,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12412,
											"end": 12474,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 12412,
											"end": 12474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12360,
											"end": 12480,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12360,
											"end": 12480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12627,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 12486,
											"end": 12627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12542,
											"end": 12547,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12573,
											"end": 12579,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12567,
											"end": 12580,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12558,
											"end": 12580,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12558,
											"end": 12580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12589,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 12615,
											"end": 12620,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12589,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 12589,
											"end": 12621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12589,
											"end": 12621,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 12589,
											"end": 12621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12627,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12627,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 13294,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 12633,
											"end": 13294,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12720,
											"end": 12726,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12728,
											"end": 12734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12736,
											"end": 12742,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12785,
											"end": 12787,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12773,
											"end": 12782,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12764,
											"end": 12771,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12760,
											"end": 12783,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12756,
											"end": 12788,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12753,
											"end": 12872,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12753,
											"end": 12872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 12753,
											"end": 12872,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12791,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 12791,
											"end": 12870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 12791,
											"end": 12870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12791,
											"end": 12870,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 12791,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12753,
											"end": 12872,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 12753,
											"end": 12872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12911,
											"end": 12912,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12936,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 12992,
											"end": 12999,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12983,
											"end": 12989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12972,
											"end": 12981,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12968,
											"end": 12990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12936,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 12936,
											"end": 13000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12936,
											"end": 13000,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 12936,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12926,
											"end": 13000,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12926,
											"end": 13000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12882,
											"end": 13010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13049,
											"end": 13051,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13075,
											"end": 13139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 13131,
											"end": 13138,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13122,
											"end": 13128,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13111,
											"end": 13120,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 13107,
											"end": 13129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13075,
											"end": 13139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 13075,
											"end": 13139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13075,
											"end": 13139,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 13075,
											"end": 13139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13139,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13020,
											"end": 13149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13188,
											"end": 13190,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13214,
											"end": 13277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 13269,
											"end": 13276,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13249,
											"end": 13258,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 13245,
											"end": 13267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13214,
											"end": 13277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 13214,
											"end": 13277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13214,
											"end": 13277,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 13214,
											"end": 13277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13204,
											"end": 13277,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13204,
											"end": 13277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13159,
											"end": 13287,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 13294,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 13294,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 13294,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 13294,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 13294,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 13294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13300,
											"end": 13480,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 13300,
											"end": 13480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13348,
											"end": 13425,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13345,
											"end": 13346,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13338,
											"end": 13426,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13445,
											"end": 13449,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 13442,
											"end": 13443,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13435,
											"end": 13450,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13469,
											"end": 13473,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13466,
											"end": 13467,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13459,
											"end": 13474,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13486,
											"end": 13584,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 13486,
											"end": 13584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13537,
											"end": 13543,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13571,
											"end": 13576,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13565,
											"end": 13577,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13555,
											"end": 13577,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13555,
											"end": 13577,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13486,
											"end": 13584,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13486,
											"end": 13584,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13486,
											"end": 13584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13486,
											"end": 13584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13737,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 13590,
											"end": 13737,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13691,
											"end": 13702,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13728,
											"end": 13731,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13713,
											"end": 13731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13713,
											"end": 13731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13737,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13737,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13743,
											"end": 13989,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 13743,
											"end": 13989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13824,
											"end": 13825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13834,
											"end": 13947,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 13834,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13848,
											"end": 13854,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13845,
											"end": 13846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13842,
											"end": 13855,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13834,
											"end": 13947,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13834,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 13834,
											"end": 13947,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13933,
											"end": 13934,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13928,
											"end": 13931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13924,
											"end": 13935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13918,
											"end": 13936,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13914,
											"end": 13915,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13909,
											"end": 13912,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13905,
											"end": 13916,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13898,
											"end": 13937,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13870,
											"end": 13872,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13867,
											"end": 13868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13863,
											"end": 13873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13858,
											"end": 13873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13858,
											"end": 13873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13834,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 13834,
											"end": 13947,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13834,
											"end": 13947,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 13834,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13981,
											"end": 13982,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13972,
											"end": 13978,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13967,
											"end": 13970,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13963,
											"end": 13979,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13956,
											"end": 13983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13805,
											"end": 13989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13743,
											"end": 13989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13743,
											"end": 13989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13743,
											"end": 13989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13743,
											"end": 13989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13995,
											"end": 14381,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 13995,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14099,
											"end": 14102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14127,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 14159,
											"end": 14164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14127,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 14127,
											"end": 14165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14127,
											"end": 14165,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 14127,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14181,
											"end": 14269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 14262,
											"end": 14268,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14257,
											"end": 14260,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14181,
											"end": 14269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 14181,
											"end": 14269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14181,
											"end": 14269,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 14181,
											"end": 14269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14174,
											"end": 14269,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14174,
											"end": 14269,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 14336,
											"end": 14342,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14331,
											"end": 14334,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14324,
											"end": 14328,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14317,
											"end": 14322,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14313,
											"end": 14329,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 14278,
											"end": 14343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14343,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 14278,
											"end": 14343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14368,
											"end": 14374,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14363,
											"end": 14366,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14359,
											"end": 14375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14352,
											"end": 14375,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14352,
											"end": 14375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14103,
											"end": 14381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13995,
											"end": 14381,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13995,
											"end": 14381,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13995,
											"end": 14381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13995,
											"end": 14381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13995,
											"end": 14381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14658,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 14387,
											"end": 14658,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14517,
											"end": 14520,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14539,
											"end": 14632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 14628,
											"end": 14631,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14619,
											"end": 14625,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14539,
											"end": 14632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 14539,
											"end": 14632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14539,
											"end": 14632,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 14539,
											"end": 14632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14532,
											"end": 14632,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14532,
											"end": 14632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14649,
											"end": 14652,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14642,
											"end": 14652,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14642,
											"end": 14652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14658,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14658,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14664,
											"end": 14896,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 14664,
											"end": 14896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "PUSH",
											"source": 13,
											"value": "536166654554483A3A736166655472616E736665724554483A20455448207472"
										},
										{
											"begin": 14800,
											"end": 14801,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14792,
											"end": 14798,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14788,
											"end": 14802,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14781,
											"end": 14839,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14873,
											"end": 14888,
											"name": "PUSH",
											"source": 13,
											"value": "616E73666572206661696C656400000000000000000000000000000000000000"
										},
										{
											"begin": 14868,
											"end": 14870,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14860,
											"end": 14866,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14856,
											"end": 14871,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14849,
											"end": 14889,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14664,
											"end": 14896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14664,
											"end": 14896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14902,
											"end": 15268,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 14902,
											"end": 15268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15044,
											"end": 15047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15065,
											"end": 15132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 15129,
											"end": 15131,
											"name": "PUSH",
											"source": 13,
											"value": "2D"
										},
										{
											"begin": 15124,
											"end": 15127,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15065,
											"end": 15132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 15065,
											"end": 15132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15065,
											"end": 15132,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 15065,
											"end": 15132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15058,
											"end": 15132,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15058,
											"end": 15132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15141,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 15230,
											"end": 15233,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15141,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 15141,
											"end": 15234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15141,
											"end": 15234,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 15141,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15259,
											"end": 15261,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15254,
											"end": 15257,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15250,
											"end": 15262,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15243,
											"end": 15262,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15243,
											"end": 15262,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14902,
											"end": 15268,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14902,
											"end": 15268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14902,
											"end": 15268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14902,
											"end": 15268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15274,
											"end": 15693,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 15274,
											"end": 15693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15440,
											"end": 15444,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15478,
											"end": 15480,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15467,
											"end": 15476,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15463,
											"end": 15481,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15455,
											"end": 15481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15455,
											"end": 15481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15527,
											"end": 15536,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15521,
											"end": 15525,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15517,
											"end": 15537,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15513,
											"end": 15514,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15502,
											"end": 15511,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15498,
											"end": 15515,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15491,
											"end": 15538,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15555,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 15681,
											"end": 15685,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15555,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 15555,
											"end": 15686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15555,
											"end": 15686,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 15555,
											"end": 15686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15547,
											"end": 15686,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15547,
											"end": 15686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15274,
											"end": 15693,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15274,
											"end": 15693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15274,
											"end": 15693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15274,
											"end": 15693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15699,
											"end": 16031,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 15699,
											"end": 16031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15820,
											"end": 15824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15858,
											"end": 15860,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15847,
											"end": 15856,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15843,
											"end": 15861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15835,
											"end": 15861,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15835,
											"end": 15861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15871,
											"end": 15942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 15939,
											"end": 15940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15928,
											"end": 15937,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15924,
											"end": 15941,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15915,
											"end": 15921,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15871,
											"end": 15942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 15871,
											"end": 15942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15871,
											"end": 15942,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 15871,
											"end": 15942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15952,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 16020,
											"end": 16022,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16009,
											"end": 16018,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16005,
											"end": 16023,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15996,
											"end": 16002,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15952,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 15952,
											"end": 16024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15952,
											"end": 16024,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 15952,
											"end": 16024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15699,
											"end": 16031,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15699,
											"end": 16031,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15699,
											"end": 16031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15699,
											"end": 16031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15699,
											"end": 16031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15699,
											"end": 16031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16037,
											"end": 16210,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 16037,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16177,
											"end": 16202,
											"name": "PUSH",
											"source": 13,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 16173,
											"end": 16174,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16165,
											"end": 16171,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16161,
											"end": 16175,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16154,
											"end": 16203,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16037,
											"end": 16210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16037,
											"end": 16210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16216,
											"end": 16618,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 16216,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16376,
											"end": 16379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16397,
											"end": 16482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 16479,
											"end": 16481,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 16474,
											"end": 16477,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16397,
											"end": 16482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 16397,
											"end": 16482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16397,
											"end": 16482,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 16397,
											"end": 16482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16390,
											"end": 16482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16390,
											"end": 16482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 16580,
											"end": 16583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 16491,
											"end": 16584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16584,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 16491,
											"end": 16584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16609,
											"end": 16611,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 16604,
											"end": 16607,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16600,
											"end": 16612,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16593,
											"end": 16612,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16593,
											"end": 16612,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16216,
											"end": 16618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16216,
											"end": 16618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16216,
											"end": 16618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16216,
											"end": 16618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16624,
											"end": 16723,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 16624,
											"end": 16723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16676,
											"end": 16682,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16710,
											"end": 16715,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16704,
											"end": 16716,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16694,
											"end": 16716,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16694,
											"end": 16716,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16624,
											"end": 16723,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16624,
											"end": 16723,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16624,
											"end": 16723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16624,
											"end": 16723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16729,
											"end": 17119,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 16729,
											"end": 17119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16835,
											"end": 16838,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16863,
											"end": 16902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 16896,
											"end": 16901,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16863,
											"end": 16902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 16863,
											"end": 16902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16863,
											"end": 16902,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 16863,
											"end": 16902,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16918,
											"end": 17007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 17000,
											"end": 17006,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16995,
											"end": 16998,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16918,
											"end": 17007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 16918,
											"end": 17007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16918,
											"end": 17007,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 16918,
											"end": 17007,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16911,
											"end": 17007,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16911,
											"end": 17007,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17016,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 17074,
											"end": 17080,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17069,
											"end": 17072,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17062,
											"end": 17066,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17055,
											"end": 17060,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17051,
											"end": 17067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17016,
											"end": 17081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 17016,
											"end": 17081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17016,
											"end": 17081,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 17016,
											"end": 17081,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17106,
											"end": 17112,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17101,
											"end": 17104,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17097,
											"end": 17113,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17090,
											"end": 17113,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17090,
											"end": 17113,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16839,
											"end": 17119,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16729,
											"end": 17119,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16729,
											"end": 17119,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16729,
											"end": 17119,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16729,
											"end": 17119,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16729,
											"end": 17119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17125,
											"end": 17292,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 17125,
											"end": 17292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17265,
											"end": 17284,
											"name": "PUSH",
											"source": 13,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 17261,
											"end": 17262,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17253,
											"end": 17259,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17249,
											"end": 17263,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17242,
											"end": 17285,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17125,
											"end": 17292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17125,
											"end": 17292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17298,
											"end": 17700,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 17298,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17458,
											"end": 17461,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17479,
											"end": 17564,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 17561,
											"end": 17563,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 17556,
											"end": 17559,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17479,
											"end": 17564,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 17479,
											"end": 17564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17479,
											"end": 17564,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 17479,
											"end": 17564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17472,
											"end": 17564,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17472,
											"end": 17564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17573,
											"end": 17666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 17662,
											"end": 17665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17573,
											"end": 17666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 17573,
											"end": 17666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17573,
											"end": 17666,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 17573,
											"end": 17666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17691,
											"end": 17693,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 17686,
											"end": 17689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17682,
											"end": 17694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17675,
											"end": 17694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17675,
											"end": 17694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17298,
											"end": 17700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17298,
											"end": 17700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17298,
											"end": 17700,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17298,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17706,
											"end": 18673,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 17706,
											"end": 18673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18088,
											"end": 18091,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18110,
											"end": 18258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 18254,
											"end": 18257,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18110,
											"end": 18258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 18110,
											"end": 18258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18110,
											"end": 18258,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 18110,
											"end": 18258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18103,
											"end": 18258,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18103,
											"end": 18258,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18275,
											"end": 18370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 18366,
											"end": 18369,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18357,
											"end": 18363,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18275,
											"end": 18370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 18275,
											"end": 18370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18275,
											"end": 18370,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 18275,
											"end": 18370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18268,
											"end": 18370,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18268,
											"end": 18370,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18387,
											"end": 18535,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 18531,
											"end": 18534,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18387,
											"end": 18535,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 18387,
											"end": 18535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18387,
											"end": 18535,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 18387,
											"end": 18535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18380,
											"end": 18535,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18380,
											"end": 18535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18552,
											"end": 18647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 18643,
											"end": 18646,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18634,
											"end": 18640,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18552,
											"end": 18647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 18552,
											"end": 18647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18552,
											"end": 18647,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 18552,
											"end": 18647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18545,
											"end": 18647,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18545,
											"end": 18647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18664,
											"end": 18667,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18657,
											"end": 18667,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18657,
											"end": 18667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17706,
											"end": 18673,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17706,
											"end": 18673,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17706,
											"end": 18673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17706,
											"end": 18673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17706,
											"end": 18673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17706,
											"end": 18673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18679,
											"end": 18781,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 18679,
											"end": 18781,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18720,
											"end": 18726,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18771,
											"end": 18773,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 18767,
											"end": 18774,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 18762,
											"end": 18764,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 18755,
											"end": 18760,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18751,
											"end": 18765,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18747,
											"end": 18775,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18737,
											"end": 18775,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18737,
											"end": 18775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18679,
											"end": 18781,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18679,
											"end": 18781,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18679,
											"end": 18781,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18679,
											"end": 18781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18787,
											"end": 19164,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 18787,
											"end": 19164,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18875,
											"end": 18878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18903,
											"end": 18942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 18936,
											"end": 18941,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18903,
											"end": 18942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 18903,
											"end": 18942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18903,
											"end": 18942,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 18903,
											"end": 18942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18958,
											"end": 19029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 19022,
											"end": 19028,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19017,
											"end": 19020,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18958,
											"end": 19029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 18958,
											"end": 19029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18958,
											"end": 19029,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 18958,
											"end": 19029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18951,
											"end": 19029,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18951,
											"end": 19029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19038,
											"end": 19103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 19096,
											"end": 19102,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19091,
											"end": 19094,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19084,
											"end": 19088,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19077,
											"end": 19082,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19073,
											"end": 19089,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19038,
											"end": 19103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 19038,
											"end": 19103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19038,
											"end": 19103,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 19038,
											"end": 19103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19128,
											"end": 19157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 19150,
											"end": 19156,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19128,
											"end": 19157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 19128,
											"end": 19157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19128,
											"end": 19157,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 19128,
											"end": 19157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19123,
											"end": 19126,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19119,
											"end": 19158,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19112,
											"end": 19158,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19112,
											"end": 19158,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18879,
											"end": 19164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18787,
											"end": 19164,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18787,
											"end": 19164,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18787,
											"end": 19164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18787,
											"end": 19164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18787,
											"end": 19164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19170,
											"end": 19483,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 19170,
											"end": 19483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19283,
											"end": 19287,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19321,
											"end": 19323,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19310,
											"end": 19319,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19306,
											"end": 19324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19298,
											"end": 19324,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19298,
											"end": 19324,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19370,
											"end": 19379,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19364,
											"end": 19368,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19360,
											"end": 19380,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19356,
											"end": 19357,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19345,
											"end": 19354,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19341,
											"end": 19358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19334,
											"end": 19381,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19398,
											"end": 19476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 19471,
											"end": 19475,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19462,
											"end": 19468,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19398,
											"end": 19476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 19398,
											"end": 19476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19398,
											"end": 19476,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 19398,
											"end": 19476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19390,
											"end": 19476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19390,
											"end": 19476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19170,
											"end": 19483,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19170,
											"end": 19483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19170,
											"end": 19483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19170,
											"end": 19483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19170,
											"end": 19483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19680,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 19489,
											"end": 19680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19529,
											"end": 19532,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19548,
											"end": 19568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 19566,
											"end": 19567,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19548,
											"end": 19568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 19548,
											"end": 19568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19548,
											"end": 19568,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 19548,
											"end": 19568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19543,
											"end": 19568,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19543,
											"end": 19568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19582,
											"end": 19602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 19600,
											"end": 19601,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19582,
											"end": 19602,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 19582,
											"end": 19602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19582,
											"end": 19602,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 19582,
											"end": 19602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19577,
											"end": 19602,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19577,
											"end": 19602,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19625,
											"end": 19626,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19622,
											"end": 19623,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19618,
											"end": 19627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19611,
											"end": 19627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19611,
											"end": 19627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19646,
											"end": 19649,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19643,
											"end": 19644,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19640,
											"end": 19650,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 19637,
											"end": 19673,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19637,
											"end": 19673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 19637,
											"end": 19673,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19653,
											"end": 19671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 19653,
											"end": 19671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 19653,
											"end": 19671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19653,
											"end": 19671,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 19653,
											"end": 19671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19637,
											"end": 19673,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 19637,
											"end": 19673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19680,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19680,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19680,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19680,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19686,
											"end": 19866,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 19686,
											"end": 19866,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19734,
											"end": 19811,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19731,
											"end": 19732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19724,
											"end": 19812,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19831,
											"end": 19835,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 19828,
											"end": 19829,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 19821,
											"end": 19836,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19855,
											"end": 19859,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 19852,
											"end": 19853,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19845,
											"end": 19860,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19872,
											"end": 20043,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 19872,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19911,
											"end": 19914,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19934,
											"end": 19958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 19952,
											"end": 19957,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19934,
											"end": 19958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 19934,
											"end": 19958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19934,
											"end": 19958,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 19934,
											"end": 19958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19925,
											"end": 19958,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19925,
											"end": 19958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19980,
											"end": 19984,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19973,
											"end": 19978,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19970,
											"end": 19985,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19967,
											"end": 20008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 19967,
											"end": 20008,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19988,
											"end": 20006,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 19988,
											"end": 20006,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 19988,
											"end": 20006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19988,
											"end": 20006,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 19988,
											"end": 20006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19967,
											"end": 20008,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 19967,
											"end": 20008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20035,
											"end": 20036,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 20028,
											"end": 20033,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20024,
											"end": 20037,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19872,
											"end": 20043,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19872,
											"end": 20043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19872,
											"end": 20043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19872,
											"end": 20043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20049,
											"end": 20231,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 20049,
											"end": 20231,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20189,
											"end": 20223,
											"name": "PUSH",
											"source": 13,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 20185,
											"end": 20186,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20177,
											"end": 20183,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20173,
											"end": 20187,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20166,
											"end": 20224,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20049,
											"end": 20231,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20049,
											"end": 20231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20237,
											"end": 20603,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 20237,
											"end": 20603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20379,
											"end": 20382,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20400,
											"end": 20467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 20464,
											"end": 20466,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20459,
											"end": 20462,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20400,
											"end": 20467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 20400,
											"end": 20467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20400,
											"end": 20467,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 20400,
											"end": 20467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20393,
											"end": 20467,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20393,
											"end": 20467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20476,
											"end": 20569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 20565,
											"end": 20568,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20476,
											"end": 20569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 20476,
											"end": 20569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20476,
											"end": 20569,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 20476,
											"end": 20569,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20594,
											"end": 20596,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20589,
											"end": 20592,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20585,
											"end": 20597,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20578,
											"end": 20597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20578,
											"end": 20597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20237,
											"end": 20603,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20237,
											"end": 20603,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20237,
											"end": 20603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20237,
											"end": 20603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20609,
											"end": 21028,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 20609,
											"end": 21028,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20775,
											"end": 20779,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20813,
											"end": 20815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20802,
											"end": 20811,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20798,
											"end": 20816,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20790,
											"end": 20816,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20790,
											"end": 20816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20862,
											"end": 20871,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20856,
											"end": 20860,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20852,
											"end": 20872,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20848,
											"end": 20849,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20837,
											"end": 20846,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20833,
											"end": 20850,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20826,
											"end": 20873,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20890,
											"end": 21021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 21016,
											"end": 21020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20890,
											"end": 21021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 20890,
											"end": 21021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20890,
											"end": 21021,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 20890,
											"end": 21021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20882,
											"end": 21021,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20882,
											"end": 21021,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20609,
											"end": 21028,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20609,
											"end": 21028,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20609,
											"end": 21028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20609,
											"end": 21028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"src/Reserve.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IPancakeFactory.sol",
								"src/interfaces/IPancakePair.sol",
								"src/libraries/DataFetcher.sol",
								"src/libraries/Math.sol",
								"src/libraries/SafeETH.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CALLER_ROLE()": "774237fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"USDT()": "c54e44eb",
							"WBNB()": "8dd95002",
							"factory()": "c45a0155",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(address,address,address,address)": "f8c8765e",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBNB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReserveBNB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReserve\",\"type\":\"uint256\"}],\"name\":\"In\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBNB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReserveBNB\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalReserve\",\"type\":\"uint256\"}],\"name\":\"Out\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"control_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"USDT_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"WBNB_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address,address,address)\":{\"details\":\"This function can only be called once.\",\"params\":{\"control_\":\"The address of the `Control` contract.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"_initializer\":{\"details\":\"Initialization variables.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"USDT()\":{\"notice\":\"The address of the relevant stable token.\"},\"WBNB()\":{\"notice\":\"The address of the Wrapped BNB token.\"},\"initialize(address,address,address,address)\":{\"notice\":\"Initializes external dependencies and state variables.\"},\"withdraw(uint256)\":{\"notice\":\"Transfers BNB stored in this contract to the sender. Caller must have the `Caller` role.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Reserve.sol\":\"Reserve\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Reserve.sol\":{\"keccak256\":\"0xbebf53a06b1993479b0076e670748cfddebb96d4a9abf3a17c2cccc000c558e8\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://8e5304e8037d0f40c8f571992dffe85f5446fea7e32b36383413957d788f8a2b\",\"dweb:/ipfs/Qmcpi1M9irFLnPA4uhSubDeY4fRAeqz4hPeZDXj3r5j1Lz\"]},\"src/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x89c6c2a63dc6c357c6108de150ab329ad7f847f3ff00a35bcd55f769f4ebcad4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadec590da43255289e7db8e08a0760869efa64c543dbd8af46690ce5295d497\",\"dweb:/ipfs/QmZsPSyWeA3aZgDgtXMMx11wvTadrf5FzrxkWDbUfM11Ue\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"src/interfaces/IPancakeFactory.sol\":{\"keccak256\":\"0x237b5ca725592046b8829930174947b5c05fe690d9616212b2ab8487353fd598\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://2728fd3aa95a5272e2f1064790534048bc0473a08e38aab5eb102f927b5055be\",\"dweb:/ipfs/QmT4dDyuwmZAHjaXj1U976MTp9MKn9RgzneEBtKEgKbtL2\"]},\"src/interfaces/IPancakePair.sol\":{\"keccak256\":\"0xbc7e1e6dc8738235baf2c56431c1a0c6ca6c29390d0aaf417c6f393e4c309c97\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://5c6375a7955e69f9bad10629ecd16861cfd114dd0dfe2c6edbd4a91cbe2ea656\",\"dweb:/ipfs/QmbMdwMQ68bsFM8TH2ie4j5i9SxRv5neZrp9jKw1vuBXY7\"]},\"src/libraries/DataFetcher.sol\":{\"keccak256\":\"0xf33246c6d3242accffeb97a16bd84c201892735b702851c7e7de06256c277738\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://6331353bbb380042b2bf4a6210fd765a57b4a59771a6df76911b444f6753f302\",\"dweb:/ipfs/QmbFwAwkrbGitEfwWZrnTx3WnfmiLmHzbY3wnEyb7A46Y7\"]},\"src/libraries/Math.sol\":{\"keccak256\":\"0xfc18275f00047f613f761247e4f3ec788843036f7f426b3fd3b74e251e45f7ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acc7cebc92fed34db103599e2bde11669280f6e9062fc42d000969ee0e9e8443\",\"dweb:/ipfs/QmQh4ArebQ7tuHEEPyHfeZKctXbC6zPRRnZ7bZM5GNkgh7\"]},\"src/libraries/SafeETH.sol\":{\"keccak256\":\"0xb0d19fce6393c0b914c72f52b0ad243f54a829c54620470bcb9e339c29736323\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://f980f9a97312bdd6d9052684e58713bc5ac02235161752a36973154038c4f6ed\",\"dweb:/ipfs/Qmd7AjqGvDbjdD7asiP7ejVUqTn5PJYW5Znhnpb4uawv71\"]},\"src/libraries/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]},\"src/libraries/Strings.sol\":{\"keccak256\":\"0xaa9c663292d9142e4f463d0f876b1b3813e409bdeb321470fb20573d9a68012b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7892745f43559c7f4351120ca6829fb71d40ea286268174dd84128657ee915\",\"dweb:/ipfs/QmeT6d7KBXrNcyLGhtj6a5LLHbYHiVVXqQYA6pSNnp8ecH\"]},\"src/utils/AccessControl.sol\":{\"keccak256\":\"0x9e9604e591c7f14ea0f18f906494192375b28f2d614279f1dda876de4ee240b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e1e5fa779889491b77f631f931fad6ba3b10907766b41d56c42a37fbcbbc664\",\"dweb:/ipfs/QmadpbPf3XFvdH1CVD17VcTmf7ScynmnjEwePFs2WBmGmU\"]},\"src/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]},\"src/utils/ERC165.sol\":{\"keccak256\":\"0x0ce3f9c6ef779f4e44ea727f31300501bf3c19af2b27264e1932aef9c70f9300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://850c17304062747f819d5c5b30e0f004ad3f36aa55d8407883311bf2fd68caee\",\"dweb:/ipfs/QmZcbvqF24EBStFacFZcganjH7f6Et4RGWYHjy4M5nHiHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2109,
								"contract": "src/Reserve.sol:Reserve",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)2104_storage)"
							},
							{
								"astId": 17,
								"contract": "src/Reserve.sol:Reserve",
								"label": "WBNB",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 20,
								"contract": "src/Reserve.sol:Reserve",
								"label": "USDT",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 25,
								"contract": "src/Reserve.sol:Reserve",
								"label": "_isInitialized",
								"offset": 20,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 27,
								"contract": "src/Reserve.sol:Reserve",
								"label": "factory",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)2104_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)2104_storage"
							},
							"t_struct(RoleData)2104_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 2101,
										"contract": "src/Reserve.sol:Reserve",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 2103,
										"contract": "src/Reserve.sol:Reserve",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"USDT()": {
								"notice": "The address of the relevant stable token."
							},
							"WBNB()": {
								"notice": "The address of the Wrapped BNB token."
							},
							"initialize(address,address,address,address)": {
								"notice": "Initializes external dependencies and state variables."
							},
							"withdraw(uint256)": {
								"notice": "Transfers BNB stored in this contract to the sender. Caller must have the `Caller` role."
							}
						},
						"version": 1
					}
				}
			},
			"src/interfaces/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x89c6c2a63dc6c357c6108de150ab329ad7f847f3ff00a35bcd55f769f4ebcad4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadec590da43255289e7db8e08a0760869efa64c543dbd8af46690ce5295d497\",\"dweb:/ipfs/QmZsPSyWeA3aZgDgtXMMx11wvTadrf5FzrxkWDbUfM11Ue\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IPancakeFactory.sol": {
				"IPancakeFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IPancakeFactory.sol\":\"IPancakeFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IPancakeFactory.sol\":{\"keccak256\":\"0x237b5ca725592046b8829930174947b5c05fe690d9616212b2ab8487353fd598\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://2728fd3aa95a5272e2f1064790534048bc0473a08e38aab5eb102f927b5055be\",\"dweb:/ipfs/QmT4dDyuwmZAHjaXj1U976MTp9MKn9RgzneEBtKEgKbtL2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IPancakePair.sol": {
				"IPancakePair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IPancakePair.sol\":\"IPancakePair\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IPancakePair.sol\":{\"keccak256\":\"0xbc7e1e6dc8738235baf2c56431c1a0c6ca6c29390d0aaf417c6f393e4c309c97\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://5c6375a7955e69f9bad10629ecd16861cfd114dd0dfe2c6edbd4a91cbe2ea656\",\"dweb:/ipfs/QmbMdwMQ68bsFM8TH2ie4j5i9SxRv5neZrp9jKw1vuBXY7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/DataFetcher.sol": {
				"DataFetcher": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/DataFetcher.sol\":157:2461  library DataFetcher {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/DataFetcher.sol\":157:2461  library DataFetcher {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cc6463cbe6bb500b77c481ded6ca5f522ce4d365cfe6a4c91855ea58d7fdf35064736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc6463cbe6bb500b77c481ded6ca5f522ce4d365cfe6a4c91855ea58d7fdf35064736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH5 0x63CBE6BB50 SIGNEXTEND PUSH24 0xC481DED6CA5F522CE4D365CFE6A4C91855EA58D7FDF35064 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "157:2304:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc6463cbe6bb500b77c481ded6ca5f522ce4d365cfe6a4c91855ea58d7fdf35064736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH5 0x63CBE6BB50 SIGNEXTEND PUSH24 0xC481DED6CA5F522CE4D365CFE6A4C91855EA58D7FDF35064 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "157:2304:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getReserves(address,address,address)": "infinite",
								"pairFor(address,address,address)": "infinite",
								"quote(address,uint256,address,address)": "infinite",
								"quoteBatch(address,uint256[] memory,address,address)": "infinite",
								"quoteRouted(address,uint256,address[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 157,
									"end": 2461,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc6463cbe6bb500b77c481ded6ca5f522ce4d365cfe6a4c91855ea58d7fdf35064736f6c63430008130033",
									".code": [
										{
											"begin": 157,
											"end": 2461,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 157,
											"end": 2461,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 157,
											"end": 2461,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 157,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 157,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 2461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 157,
											"end": 2461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 2461,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 157,
											"end": 2461,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"src/Reserve.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IPancakeFactory.sol",
								"src/interfaces/IPancakePair.sol",
								"src/libraries/DataFetcher.sol",
								"src/libraries/Math.sol",
								"src/libraries/SafeETH.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/DataFetcher.sol\":\"DataFetcher\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IPancakeFactory.sol\":{\"keccak256\":\"0x237b5ca725592046b8829930174947b5c05fe690d9616212b2ab8487353fd598\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://2728fd3aa95a5272e2f1064790534048bc0473a08e38aab5eb102f927b5055be\",\"dweb:/ipfs/QmT4dDyuwmZAHjaXj1U976MTp9MKn9RgzneEBtKEgKbtL2\"]},\"src/interfaces/IPancakePair.sol\":{\"keccak256\":\"0xbc7e1e6dc8738235baf2c56431c1a0c6ca6c29390d0aaf417c6f393e4c309c97\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://5c6375a7955e69f9bad10629ecd16861cfd114dd0dfe2c6edbd4a91cbe2ea656\",\"dweb:/ipfs/QmbMdwMQ68bsFM8TH2ie4j5i9SxRv5neZrp9jKw1vuBXY7\"]},\"src/libraries/DataFetcher.sol\":{\"keccak256\":\"0xf33246c6d3242accffeb97a16bd84c201892735b702851c7e7de06256c277738\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://6331353bbb380042b2bf4a6210fd765a57b4a59771a6df76911b444f6753f302\",\"dweb:/ipfs/QmbFwAwkrbGitEfwWZrnTx3WnfmiLmHzbY3wnEyb7A46Y7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/Math.sol\":210:12826  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/Math.sol\":210:12826  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e8289e82efb2ebe04b130cf8aba07bec8341c55c1e488ff431f7ce193aaff6c264736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8289e82efb2ebe04b130cf8aba07bec8341c55c1e488ff431f7ce193aaff6c264736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0x28 SWAP15 DUP3 0xEF 0xB2 0xEB 0xE0 0x4B SGT 0xC 0xF8 0xAB LOG0 PUSH28 0xEC8341C55C1E488FF431F7CE193AAFF6C264736F6C63430008130033 ",
							"sourceMap": "210:12616:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8289e82efb2ebe04b130cf8aba07bec8341c55c1e488ff431f7ce193aaff6c264736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0x28 SWAP15 DUP3 0xEF 0xB2 0xEB 0xE0 0x4B SGT 0xC 0xF8 0xAB LOG0 PUSH28 0xEC8341C55C1E488FF431F7CE193AAFF6C264736F6C63430008130033 ",
							"sourceMap": "210:12616:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e8289e82efb2ebe04b130cf8aba07bec8341c55c1e488ff431f7ce193aaff6c264736f6c63430008130033",
									".code": [
										{
											"begin": 210,
											"end": 12826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"src/Reserve.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IPancakeFactory.sol",
								"src/interfaces/IPancakePair.sol",
								"src/libraries/DataFetcher.sol",
								"src/libraries/Math.sol",
								"src/libraries/SafeETH.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/Math.sol\":{\"keccak256\":\"0xfc18275f00047f613f761247e4f3ec788843036f7f426b3fd3b74e251e45f7ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acc7cebc92fed34db103599e2bde11669280f6e9062fc42d000969ee0e9e8443\",\"dweb:/ipfs/QmQh4ArebQ7tuHEEPyHfeZKctXbC6zPRRnZ7bZM5GNkgh7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/SafeETH.sol": {
				"SafeETH": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/SafeETH.sol\":68:304  library SafeETH {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/SafeETH.sol\":68:304  library SafeETH {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220745ef6fd5ac10cd3914de8ad094ba1341cb1efdc8b09940ac190e575a420a3cb64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220745ef6fd5ac10cd3914de8ad094ba1341cb1efdc8b09940ac190e575a420a3cb64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x5EF6FD5AC10CD3914DE8AD094BA1341CB1EFDC8B09 SWAP5 EXP 0xC1 SWAP1 0xE5 PUSH22 0xA420A3CB64736F6C6343000813003300000000000000 ",
							"sourceMap": "68:236:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220745ef6fd5ac10cd3914de8ad094ba1341cb1efdc8b09940ac190e575a420a3cb64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x5EF6FD5AC10CD3914DE8AD094BA1341CB1EFDC8B09 SWAP5 EXP 0xC1 SWAP1 0xE5 PUSH22 0xA420A3CB64736F6C6343000813003300000000000000 ",
							"sourceMap": "68:236:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeTransferETH(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 68,
									"end": 304,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 68,
									"end": 304,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220745ef6fd5ac10cd3914de8ad094ba1341cb1efdc8b09940ac190e575a420a3cb64736f6c63430008130033",
									".code": [
										{
											"begin": 68,
											"end": 304,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 68,
											"end": 304,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 68,
											"end": 304,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 68,
											"end": 304,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 68,
											"end": 304,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 68,
											"end": 304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 68,
											"end": 304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 68,
											"end": 304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 68,
											"end": 304,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"src/Reserve.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IPancakeFactory.sol",
								"src/interfaces/IPancakePair.sol",
								"src/libraries/DataFetcher.sol",
								"src/libraries/Math.sol",
								"src/libraries/SafeETH.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/SafeETH.sol\":\"SafeETH\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/SafeETH.sol\":{\"keccak256\":\"0xb0d19fce6393c0b914c72f52b0ad243f54a829c54620470bcb9e339c29736323\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://f980f9a97312bdd6d9052684e58713bc5ac02235161752a36973154038c4f6ed\",\"dweb:/ipfs/Qmd7AjqGvDbjdD7asiP7ejVUqTn5PJYW5Znhnpb4uawv71\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/SignedMath.sol\":223:1304  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/SignedMath.sol\":223:1304  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b38c7381e4a4018de2542bf0b230518ff46fef11da5c2f2791c87fc1e76c590764736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b38c7381e4a4018de2542bf0b230518ff46fef11da5c2f2791c87fc1e76c590764736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 DUP13 PUSH20 0x81E4A4018DE2542BF0B230518FF46FEF11DA5C2F 0x27 SWAP2 0xC8 PUSH32 0xC1E76C590764736F6C6343000813003300000000000000000000000000000000 ",
							"sourceMap": "223:1081:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b38c7381e4a4018de2542bf0b230518ff46fef11da5c2f2791c87fc1e76c590764736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 DUP13 PUSH20 0x81E4A4018DE2542BF0B230518FF46FEF11DA5C2F 0x27 SWAP2 0xC8 PUSH32 0xC1E76C590764736F6C6343000813003300000000000000000000000000000000 ",
							"sourceMap": "223:1081:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b38c7381e4a4018de2542bf0b230518ff46fef11da5c2f2791c87fc1e76c590764736f6c63430008130033",
									".code": [
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"src/Reserve.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IPancakeFactory.sol",
								"src/interfaces/IPancakePair.sol",
								"src/libraries/DataFetcher.sol",
								"src/libraries/Math.sol",
								"src/libraries/SafeETH.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/Strings.sol\":221:2853  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/Strings.sol\":221:2853  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c91303457c6a2440b4eccc02db2c3ba638db837937c9397334079eabc3ef31c64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c91303457c6a2440b4eccc02db2c3ba638db837937c9397334079eabc3ef31c64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP2 ADDRESS CALLVALUE JUMPI 0xC6 LOG2 PREVRANDAO SIGNEXTEND 0x4E 0xCC 0xC0 0x2D 0xB2 0xC3 0xBA PUSH4 0x8DB83793 PUSH29 0x9397334079EABC3EF31C64736F6C634300081300330000000000000000 ",
							"sourceMap": "221:2632:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c91303457c6a2440b4eccc02db2c3ba638db837937c9397334079eabc3ef31c64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP2 ADDRESS CALLVALUE JUMPI 0xC6 LOG2 PREVRANDAO SIGNEXTEND 0x4E 0xCC 0xC0 0x2D 0xB2 0xC3 0xBA PUSH4 0x8DB83793 PUSH29 0x9397334079EABC3EF31C64736F6C634300081300330000000000000000 ",
							"sourceMap": "221:2632:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c91303457c6a2440b4eccc02db2c3ba638db837937c9397334079eabc3ef31c64736f6c63430008130033",
									".code": [
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"src/Reserve.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IPancakeFactory.sol",
								"src/interfaces/IPancakePair.sol",
								"src/libraries/DataFetcher.sol",
								"src/libraries/Math.sol",
								"src/libraries/SafeETH.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/Math.sol\":{\"keccak256\":\"0xfc18275f00047f613f761247e4f3ec788843036f7f426b3fd3b74e251e45f7ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acc7cebc92fed34db103599e2bde11669280f6e9062fc42d000969ee0e9e8443\",\"dweb:/ipfs/QmQh4ArebQ7tuHEEPyHfeZKctXbC6zPRRnZ7bZM5GNkgh7\"]},\"src/libraries/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]},\"src/libraries/Strings.sol\":{\"keccak256\":\"0xaa9c663292d9142e4f463d0f876b1b3813e409bdeb321470fb20573d9a68012b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7892745f43559c7f4351120ca6829fb71d40ea286268174dd84128657ee915\",\"dweb:/ipfs/QmeT6d7KBXrNcyLGhtj6a5LLHbYHiVVXqQYA6pSNnp8ecH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/utils/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x89c6c2a63dc6c357c6108de150ab329ad7f847f3ff00a35bcd55f769f4ebcad4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadec590da43255289e7db8e08a0760869efa64c543dbd8af46690ce5295d497\",\"dweb:/ipfs/QmZsPSyWeA3aZgDgtXMMx11wvTadrf5FzrxkWDbUfM11Ue\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"src/libraries/Math.sol\":{\"keccak256\":\"0xfc18275f00047f613f761247e4f3ec788843036f7f426b3fd3b74e251e45f7ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acc7cebc92fed34db103599e2bde11669280f6e9062fc42d000969ee0e9e8443\",\"dweb:/ipfs/QmQh4ArebQ7tuHEEPyHfeZKctXbC6zPRRnZ7bZM5GNkgh7\"]},\"src/libraries/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]},\"src/libraries/Strings.sol\":{\"keccak256\":\"0xaa9c663292d9142e4f463d0f876b1b3813e409bdeb321470fb20573d9a68012b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7892745f43559c7f4351120ca6829fb71d40ea286268174dd84128657ee915\",\"dweb:/ipfs/QmeT6d7KBXrNcyLGhtj6a5LLHbYHiVVXqQYA6pSNnp8ecH\"]},\"src/utils/AccessControl.sol\":{\"keccak256\":\"0x9e9604e591c7f14ea0f18f906494192375b28f2d614279f1dda876de4ee240b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e1e5fa779889491b77f631f931fad6ba3b10907766b41d56c42a37fbcbbc664\",\"dweb:/ipfs/QmadpbPf3XFvdH1CVD17VcTmf7ScynmnjEwePFs2WBmGmU\"]},\"src/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]},\"src/utils/ERC165.sol\":{\"keccak256\":\"0x0ce3f9c6ef779f4e44ea727f31300501bf3c19af2b27264e1932aef9c70f9300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://850c17304062747f819d5c5b30e0f004ad3f36aa55d8407883311bf2fd68caee\",\"dweb:/ipfs/QmZcbvqF24EBStFacFZcganjH7f6Et4RGWYHjy4M5nHiHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2109,
								"contract": "src/utils/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)2104_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)2104_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)2104_storage"
							},
							"t_struct(RoleData)2104_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 2101,
										"contract": "src/utils/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 2103,
										"contract": "src/utils/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/utils/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"src/utils/ERC165.sol\":{\"keccak256\":\"0x0ce3f9c6ef779f4e44ea727f31300501bf3c19af2b27264e1932aef9c70f9300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://850c17304062747f819d5c5b30e0f004ad3f36aa55d8407883311bf2fd68caee\",\"dweb:/ipfs/QmZcbvqF24EBStFacFZcganjH7f6Et4RGWYHjy4M5nHiHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/Reserve.sol": {
				"ast": {
					"absolutePath": "src/Reserve.sol",
					"exportedSymbols": {
						"AccessControl": [
							2400
						],
						"Context": [
							2422
						],
						"DataFetcher": [
							856
						],
						"ERC165": [
							2446
						],
						"IAccessControl": [
							263
						],
						"IERC165": [
							275
						],
						"IPancakeFactory": [
							338
						],
						"IPancakePair": [
							580
						],
						"Math": [
							1722
						],
						"Reserve": [
							190
						],
						"SafeETH": [
							1750
						],
						"SignedMath": [
							1855
						],
						"Strings": [
							2084
						]
					},
					"id": 191,
					"license": "GNU GPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:0"
						},
						{
							"absolutePath": "src/libraries/DataFetcher.sol",
							"file": "./libraries/DataFetcher.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 191,
							"sourceUnit": 857,
							"src": "68:37:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/libraries/SafeETH.sol",
							"file": "./libraries/SafeETH.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 191,
							"sourceUnit": 1751,
							"src": "107:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/utils/AccessControl.sol",
							"file": "./utils/AccessControl.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 191,
							"sourceUnit": 2401,
							"src": "144:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "AccessControl",
										"nameLocations": [
											"203:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2400,
										"src": "203:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "203:13:0"
								}
							],
							"canonicalName": "Reserve",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 190,
							"linearizedBaseContracts": [
								190,
								2400,
								2446,
								275,
								263,
								2422
							],
							"name": "Reserve",
							"nameLocation": "192:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "774237fc",
									"id": 14,
									"mutability": "constant",
									"name": "CALLER_ROLE",
									"nameLocation": "301:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 190,
									"src": "277:75:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 7,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "277:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "43616c6c6572",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "342:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c",
															"typeString": "literal_string \"Caller\""
														},
														"value": "Caller"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c",
															"typeString": "literal_string \"Caller\""
														}
													],
													"expression": {
														"id": 9,
														"name": "abi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967295,
														"src": "325:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_abi",
															"typeString": "abi"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "329:12:0",
													"memberName": "encodePacked",
													"nodeType": "MemberAccess",
													"src": "325:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
														"typeString": "function () pure returns (bytes memory)"
													}
												},
												"id": 12,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "325:26:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											],
											"id": 8,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "315:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "315:37:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "382:49:0",
										"text": "@notice The address of the Wrapped BNB token."
									},
									"functionSelector": "8dd95002",
									"id": 17,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "454:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 190,
									"src": "437:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "437:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "489:53:0",
										"text": "@notice The address of the relevant stable token."
									},
									"functionSelector": "c54e44eb",
									"id": 20,
									"mutability": "mutable",
									"name": "USDT",
									"nameLocation": "565:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 190,
									"src": "548:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "548:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "579:34:0",
										"text": "@dev Initialization variables."
									},
									"id": 23,
									"mutability": "immutable",
									"name": "_initializer",
									"nameLocation": "645:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 190,
									"src": "619:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 22,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "619:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_isInitialized",
									"nameLocation": "677:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 190,
									"src": "664:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 24,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "664:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 27,
									"mutability": "mutable",
									"name": "factory",
									"nameLocation": "713:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 190,
									"src": "698:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "698:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3cadff7f9a0bf97b2f8b9629e31675770caca33d15e735652794f64acce52fa0",
									"id": 37,
									"name": "In",
									"nameLocation": "777:2:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": false,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountBNB",
												"nameLocation": "804:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "796:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReserveBNB",
												"nameLocation": "823:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "815:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReserve",
												"nameLocation": "848:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "840:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:82:0"
									},
									"src": "771:91:0"
								},
								{
									"anonymous": false,
									"eventSelector": "b450a08ba9d5bfbc195171a9f21f66b27de075c9788057b443dc147da398be5c",
									"id": 47,
									"name": "Out",
									"nameLocation": "874:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "886:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "878:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountBNB",
												"nameLocation": "902:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "894:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReserveBNB",
												"nameLocation": "921:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "913:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalReserve",
												"nameLocation": "946:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "938:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:82:0"
									},
									"src": "868:92:0"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "1029:46:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 50,
														"name": "_initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1040:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 51,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "1055:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1055:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1040:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1040:27:0"
											}
										]
									},
									"id": 56,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1029:0:0"
									},
									"scope": 190,
									"src": "1015:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "1427:518:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 69,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "1446:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1446:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 71,
																"name": "_initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1462:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1446:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526573657276653a2063616c6c6572206973206e6f742074686520696e697469616c697a6572",
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1476:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484",
																"typeString": "literal_string \"Reserve: caller is not the initializer\""
															},
															"value": "Reserve: caller is not the initializer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66ea2fd3e30a2e07c5f04ad66f5c1f933abb82ed7094744df4e2b460f62d8484",
																"typeString": "literal_string \"Reserve: caller is not the initializer\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1438:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1438:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1438:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "control_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1635:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1655:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1647:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1647:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1647:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1635:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526573657276653a20696e76616c696420436f6e74726f6c2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1659:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f",
																"typeString": "literal_string \"Reserve: invalid Control address\""
															},
															"value": "Reserve: invalid Control address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_649030f0c00dcd08f7d7425e7aaf1a02b1aec2b838472db4bbcdbe392f6b0c9f",
																"typeString": "literal_string \"Reserve: invalid Control address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1627:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1627:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1627:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "CALLER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "1716:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 88,
															"name": "control_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1729:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2368,
														"src": "1705:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1705:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1705:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "1801:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 93,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "1821:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1821:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2368,
														"src": "1790:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1790:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1790:44:0"
											},
											{
												"expression": {
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 97,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1845:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 98,
														"name": "factory_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "1853:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1845:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1845:16:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "USDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1872:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "USDT_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1878:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1872:11:0"
											},
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 105,
														"name": "WBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1894:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 106,
														"name": "WBNB_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1900:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1894:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1894:11:0"
											},
											{
												"expression": {
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 109,
														"name": "_isInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1916:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1933:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1916:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1916:21:0"
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1129:198:0",
										"text": " @notice Initializes external dependencies and state variables.\n @dev This function can only be called once.\n @param control_ The address of the `Control` contract."
									},
									"functionSelector": "f8c8765e",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1342:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "factory_",
												"nameLocation": "1361:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1353:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "control_",
												"nameLocation": "1378:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1370:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "USDT_",
												"nameLocation": "1396:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1388:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "WBNB_",
												"nameLocation": "1411:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1403:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:65:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1427:0:0"
									},
									"scope": 190,
									"src": "1333:612:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2025:230:0",
										"statements": [
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "totalReserveBNB",
														"nameLocation": "2044:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 144,
														"src": "2036:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 117,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2036:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 124,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 121,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2070:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Reserve_$190",
																	"typeString": "contract Reserve"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Reserve_$190",
																	"typeString": "contract Reserve"
																}
															],
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2062:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 119,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2062:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2062:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2076:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2062:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2036:47:0"
											},
											{
												"assignments": [
													126
												],
												"declarations": [
													{
														"constant": false,
														"id": 126,
														"mutability": "mutable",
														"name": "totalReserve",
														"nameLocation": "2102:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 144,
														"src": "2094:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2094:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 134,
												"initialValue": {
													"arguments": [
														{
															"id": 129,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "2135:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 130,
															"name": "totalReserveBNB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "2143:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 131,
															"name": "WBNB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "2160:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 132,
															"name": "USDT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "2166:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 127,
															"name": "DataFetcher",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "2117:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DataFetcher_$856_$",
																"typeString": "type(library DataFetcher)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2129:5:0",
														"memberName": "quote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 692,
														"src": "2117:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,address,address) view returns (uint256)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2117:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2094:77:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 136,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "2192:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2192:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 138,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2206:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2210:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2206:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 140,
															"name": "totalReserveBNB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "2217:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 141,
															"name": "totalReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "2234:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 135,
														"name": "In",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2189:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2189:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "EmitStatement",
												"src": "2184:63:0"
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2005:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2025:0:0"
									},
									"scope": 190,
									"src": "1998:257:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "2451:284:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 157,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "2486:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2486:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "2500:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 154,
															"name": "SafeETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "2462:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeETH_$1750_$",
																"typeString": "type(library SafeETH)"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2470:15:0",
														"memberName": "safeTransferETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1749,
														"src": "2462:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2462:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "2462:45:0"
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "totalReserveBNB",
														"nameLocation": "2526:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 188,
														"src": "2518:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2518:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 169,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 166,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2552:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Reserve_$190",
																	"typeString": "contract Reserve"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Reserve_$190",
																	"typeString": "contract Reserve"
																}
															],
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 164,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2544:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2544:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2558:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2544:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2518:47:0"
											},
											{
												"assignments": [
													171
												],
												"declarations": [
													{
														"constant": false,
														"id": 171,
														"mutability": "mutable",
														"name": "totalReserve",
														"nameLocation": "2584:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 188,
														"src": "2576:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2576:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 179,
												"initialValue": {
													"arguments": [
														{
															"id": 174,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "2617:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 175,
															"name": "totalReserveBNB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2625:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 176,
															"name": "WBNB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "2642:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 177,
															"name": "USDT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "2648:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 172,
															"name": "DataFetcher",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "2599:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DataFetcher_$856_$",
																"typeString": "type(library DataFetcher)"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2611:5:0",
														"memberName": "quote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 692,
														"src": "2599:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,address,address) view returns (uint256)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2599:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2576:77:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "2675:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2675:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 183,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "2689:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 184,
															"name": "totalReserveBNB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2697:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 185,
															"name": "totalReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2714:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 180,
														"name": "Out",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "2671:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2671:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "EmitStatement",
												"src": "2666:61:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2263:117:0",
										"text": " @notice Transfers BNB stored in this contract to the sender. Caller must have the `Caller` role."
									},
									"functionSelector": "2e1a7d4d",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 151,
													"name": "CALLER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "2438:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 152,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 150,
												"name": "onlyRole",
												"nameLocations": [
													"2429:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2123,
												"src": "2429:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2429:21:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "2395:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2412:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2404:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:16:0"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:0:0"
									},
									"scope": 190,
									"src": "2386:349:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "183:2555:0",
							"usedErrors": []
						}
					],
					"src": "41:2697:0"
				},
				"id": 0
			},
			"src/interfaces/IAccessControl.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							263
						]
					},
					"id": 264,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "124:91:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 263,
							"linearizedBaseContracts": [
								263
							],
							"name": "IAccessControl",
							"nameLocation": "227:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "249:299:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 202,
									"name": "RoleAdminChanged",
									"nameLocation": "560:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "593:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "577:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 195,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "615:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "599:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 197,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "650:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "634:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 199,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:87:1"
									},
									"src": "554:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "672:217:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 211,
									"name": "RoleGranted",
									"nameLocation": "901:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "929:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "913:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 204,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "951:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "935:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "976:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "960:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:71:1"
									},
									"src": "895:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "992:281:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 220,
									"name": "RoleRevoked",
									"nameLocation": "1285:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1313:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "1297:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1335:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "1319:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1360:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "1344:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:71:1"
									},
									"src": "1279:89:1"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "1376:78:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1469:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1485:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1477:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1499:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1491:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1476:31:1"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1531:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1531:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:6:1"
									},
									"scope": 263,
									"src": "1460:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "1545:189:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1749:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1770:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1762:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:14:1"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1799:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:1"
									},
									"scope": 263,
									"src": "1740:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1816:248:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2079:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2097:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2089:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2111:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2103:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2088:31:1"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2128:0:1"
									},
									"scope": 263,
									"src": "2070:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "2137:231:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2383:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2402:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2394:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 248,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2416:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2408:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:31:1"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2433:0:1"
									},
									"scope": 263,
									"src": "2374:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "2442:493:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2950:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2971:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2963:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 256,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2963:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2985:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2977:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2962:31:1"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3002:0:1"
									},
									"scope": 263,
									"src": "2941:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 264,
							"src": "217:2789:1",
							"usedErrors": []
						}
					],
					"src": "97:2909:1"
				},
				"id": 1
			},
			"src/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							275
						]
					},
					"id": 276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 265,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 266,
								"nodeType": "StructuredDocumentation",
								"src": "130:287:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 275,
							"linearizedBaseContracts": [
								275
							],
							"name": "IERC165",
							"nameLocation": "429:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "444:347:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "806:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "831:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "824:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 268,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:20:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "867:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:6:2"
									},
									"scope": 275,
									"src": "797:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 276,
							"src": "419:457:2",
							"usedErrors": []
						}
					],
					"src": "103:773:2"
				},
				"id": 2
			},
			"src/interfaces/IPancakeFactory.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IPancakeFactory.sol",
					"exportedSymbols": {
						"IPancakeFactory": [
							338
						]
					},
					"id": 339,
					"license": "GNU GPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 277,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPancakeFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 338,
							"linearizedBaseContracts": [
								338
							],
							"name": "IPancakeFactory",
							"nameLocation": "78:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 287,
									"name": "PairCreated",
									"nameLocation": "107:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "135:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "119:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "159:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "143:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "175:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "167:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "181:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "181:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:68:3"
									},
									"src": "101:86:3"
								},
								{
									"functionSelector": "017e7e58",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "204:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:2:3"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "235:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "234:9:3"
									},
									"scope": 338,
									"src": "195:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "259:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "270:2:3"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "296:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "295:9:3"
									},
									"scope": 338,
									"src": "250:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "322:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "338:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "330:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "354:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "346:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:32:3"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "393:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "385:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:14:3"
									},
									"scope": 338,
									"src": "313:86:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "414:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "423:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "423:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:6:3"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "460:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "452:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:14:3"
									},
									"scope": 338,
									"src": "405:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "481:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:2:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "521:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "521:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:6:3"
									},
									"scope": 338,
									"src": "472:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "544:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "563:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "555:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "579:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "571:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:32:3"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "613:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "605:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:14:3"
									},
									"scope": 338,
									"src": "535:84:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "636:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "645:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:9:3"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:3"
									},
									"scope": 338,
									"src": "627:36:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "678:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:3"
									},
									"scope": 338,
									"src": "669:42:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 339,
							"src": "68:646:3",
							"usedErrors": []
						}
					],
					"src": "41:673:3"
				},
				"id": 3
			},
			"src/interfaces/IPancakePair.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IPancakePair.sol",
					"exportedSymbols": {
						"IPancakePair": [
							580
						]
					},
					"id": 581,
					"license": "GNU GPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPancakePair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 580,
							"linearizedBaseContracts": [
								580
							],
							"name": "IPancakePair",
							"nameLocation": "78:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 348,
									"name": "Approval",
									"nameLocation": "104:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "129:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "113:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "152:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "136:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "136:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "166:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "161:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "161:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "112:60:4"
									},
									"src": "98:75:4"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 356,
									"name": "Transfer",
									"nameLocation": "185:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "210:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "194:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "194:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "232:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "216:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "236:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "236:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:54:4"
									},
									"src": "179:69:4"
								},
								{
									"functionSelector": "06fdde03",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "265:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:2:4"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "295:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "295:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:15:4"
									},
									"scope": 580,
									"src": "256:54:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "325:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "331:2:4"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "357:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "357:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:15:4"
									},
									"scope": 580,
									"src": "316:56:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "387:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:2:4"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "421:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 368,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "421:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:7:4"
									},
									"scope": 580,
									"src": "378:50:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "443:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:2:4"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "480:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "480:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:6:4"
									},
									"scope": 580,
									"src": "434:52:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "501:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "519:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "511:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:15:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "549:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "549:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:6:4"
									},
									"scope": 580,
									"src": "492:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "570:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "588:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "580:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "603:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "595:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:32:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "635:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "635:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:6:4"
									},
									"scope": 580,
									"src": "561:80:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "658:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "666:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "688:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "683:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "683:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:29:4"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "713:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "713:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:6:4"
									},
									"scope": 580,
									"src": "649:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "734:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "751:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "743:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "760:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "755:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "755:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:24:4"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "785:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 407,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "785:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:6:4"
									},
									"scope": 580,
									"src": "725:66:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "806:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "827:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "819:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "841:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "833:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "850:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "845:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:38:4"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "875:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:6:4"
									},
									"scope": 580,
									"src": "797:84:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "898:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "914:2:4"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 423,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 580,
									"src": "889:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "964:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "979:2:4"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1005:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 428,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:9:4"
									},
									"scope": 580,
									"src": "955:59:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1029:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1044:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1036:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1035:15:4"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "1074:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1074:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:6:4"
									},
									"scope": 580,
									"src": "1020:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1097:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1112:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "1104:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1127:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "1119:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1141:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "1136:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1136:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1153:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "1148:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1148:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1169:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "1163:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 447,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1163:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1180:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "1172:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 449,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1191:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "1183:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:90:4"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1202:0:4"
									},
									"scope": 580,
									"src": "1088:115:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 463,
									"name": "Mint",
									"nameLocation": "1217:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1238:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1222:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1251:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1246:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1265:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1260:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1260:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:52:4"
									},
									"src": "1211:63:4"
								},
								{
									"anonymous": false,
									"eventSelector": "dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496",
									"id": 473,
									"name": "Burn",
									"nameLocation": "1286:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1307:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1291:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1320:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1315:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1315:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1329:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1329:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1359:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1343:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:72:4"
									},
									"src": "1280:83:4"
								},
								{
									"anonymous": false,
									"eventSelector": "d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822",
									"id": 487,
									"name": "Swap",
									"nameLocation": "1375:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1406:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1390:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "1428:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1423:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1423:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "1453:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1448:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1448:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "1478:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1473:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "1504:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1499:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1499:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1541:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1525:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1379:171:4"
									},
									"src": "1369:182:4"
								},
								{
									"anonymous": false,
									"eventSelector": "1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1",
									"id": 493,
									"name": "Sync",
									"nameLocation": "1563:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1576:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1568:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 488,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1594:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1586:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 490,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1586:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:36:4"
									},
									"src": "1557:47:4"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "1621:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:2:4"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1664:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1664:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:6:4"
									},
									"scope": 580,
									"src": "1612:58:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "1685:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1692:2:4"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1718:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1717:9:4"
									},
									"scope": 580,
									"src": "1676:51:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "1742:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1748:2:4"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1774:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1773:9:4"
									},
									"scope": 580,
									"src": "1733:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "1798:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1804:2:4"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1830:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:9:4"
									},
									"scope": 580,
									"src": "1789:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "1854:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:4"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1899:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1891:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 515,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1917:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1909:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 517,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "1934:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1927:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 519,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1927:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1890:63:4"
									},
									"scope": 580,
									"src": "1845:109:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "1969:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1989:2:4"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2015:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2015:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2014:6:4"
									},
									"scope": 580,
									"src": "1960:61:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "2036:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2056:2:4"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2082:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2082:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2081:6:4"
									},
									"scope": 580,
									"src": "2027:61:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nameLocation": "2103:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2108:2:4"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "2134:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2134:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:6:4"
									},
									"scope": 580,
									"src": "2094:46:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2157:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2170:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2162:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2162:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2161:12:4"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2197:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2192:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2192:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2191:16:4"
									},
									"scope": 580,
									"src": "2148:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2223:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2236:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2228:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2228:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:12:4"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2263:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2258:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2258:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2277:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "2272:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:28:4"
									},
									"scope": 580,
									"src": "2214:72:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2301:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "2311:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "2306:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2306:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "2328:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "2323:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2323:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2348:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "2340:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2340:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2367:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "2352:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 560,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2352:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2305:67:4"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2381:0:4"
									},
									"scope": 580,
									"src": "2292:90:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "2397:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2410:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "2402:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:12:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2422:0:4"
									},
									"scope": 580,
									"src": "2388:35:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "2438:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2442:2:4"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2453:0:4"
									},
									"scope": 580,
									"src": "2429:25:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2471:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2482:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2491:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2491:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2481:18:4"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2508:0:4"
									},
									"scope": 580,
									"src": "2462:47:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 581,
							"src": "68:2444:4",
							"usedErrors": []
						}
					],
					"src": "41:2471:4"
				},
				"id": 4
			},
			"src/libraries/DataFetcher.sol": {
				"ast": {
					"absolutePath": "src/libraries/DataFetcher.sol",
					"exportedSymbols": {
						"DataFetcher": [
							856
						],
						"IPancakeFactory": [
							338
						],
						"IPancakePair": [
							580
						]
					},
					"id": 857,
					"license": "GNU GPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:5"
						},
						{
							"absolutePath": "src/interfaces/IPancakeFactory.sol",
							"file": "../interfaces/IPancakeFactory.sol",
							"id": 583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 857,
							"sourceUnit": 339,
							"src": "68:43:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IPancakePair.sol",
							"file": "../interfaces/IPancakePair.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 857,
							"sourceUnit": 581,
							"src": "113:40:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DataFetcher",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 856,
							"linearizedBaseContracts": [
								856
							],
							"name": "DataFetcher",
							"nameLocation": "165:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "507:81:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "565:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 600,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "573:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 596,
																	"name": "pancakeFactory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "541:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 595,
																"name": "IPancakeFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "525:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPancakeFactory_$338_$",
																	"typeString": "type(contract IPancakeFactory)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "525:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeFactory_$338",
																"typeString": "contract IPancakeFactory"
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "557:7:5",
														"memberName": "getPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 306,
														"src": "525:39:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) view external returns (address)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "525:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 594,
												"id": 602,
												"nodeType": "Return",
												"src": "518:62:5"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairFor",
									"nameLocation": "406:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "pancakeFactory",
												"nameLocation": "422:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "414:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "446:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "438:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "462:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "454:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:56:5"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "501:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "493:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:14:5"
									},
									"scope": 856,
									"src": "397:191:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "731:307:5",
										"statements": [
											{
												"assignments": [
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "pair",
														"nameLocation": "750:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "742:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 617,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "742:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"initialValue": {
													"arguments": [
														{
															"id": 620,
															"name": "pancakeFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "765:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "780:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 622,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "788:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 619,
														"name": "pairFor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "757:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address,address) view returns (address)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "757:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "742:53:5"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "814:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "806:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 625,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "806:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 628,
																	"name": "pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "836:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 627,
																"name": "IPancakePair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "823:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPancakePair_$580_$",
																	"typeString": "type(contract IPancakePair)"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "823:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakePair_$580",
																"typeString": "contract IPancakePair"
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "842:6:5",
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "823:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "823:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "806:44:5"
											},
											{
												"assignments": [
													634,
													636,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "reserve0",
														"nameLocation": "870:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "862:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "862:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "reserve1",
														"nameLocation": "888:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "880:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 635,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "880:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 642,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 638,
																	"name": "pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "915:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 637,
																"name": "IPancakePair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "902:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPancakePair_$580_$",
																	"typeString": "type(contract IPancakePair)"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakePair_$580",
																"typeString": "contract IPancakePair"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "921:11:5",
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 522,
														"src": "902:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "902:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "861:73:5"
											},
											{
												"expression": {
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 643,
																"name": "reserveA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "946:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 644,
																"name": "reserveB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "956:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 645,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "945:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 646,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "968:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 647,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "978:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "968:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"id": 652,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "1011:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 653,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "1021:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 654,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1010:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "968:62:5",
														"trueExpression": {
															"components": [
																{
																	"id": 649,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "988:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 650,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "998:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 651,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "987:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "945:85:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "945:85:5"
											}
										]
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "605:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "pancakeFactory",
												"nameLocation": "625:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "617:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "648:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "640:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "664:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "656:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:55:5"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "703:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "695:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "721:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "713:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:36:5"
									},
									"scope": 856,
									"src": "596:442:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "1173:152:5",
										"statements": [
											{
												"assignments": [
													673,
													675
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "reserveA",
														"nameLocation": "1193:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 691,
														"src": "1185:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1185:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "reserveB",
														"nameLocation": "1211:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 691,
														"src": "1203:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1203:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 681,
												"initialValue": {
													"arguments": [
														{
															"id": 677,
															"name": "pancakeFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "1235:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "1250:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "1258:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 676,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "1223:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,address) view returns (uint256,uint256)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1223:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1184:81:5"
											},
											{
												"expression": {
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 682,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "1276:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 683,
																		"name": "amountA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "1287:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 684,
																		"name": "reserveB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "1297:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1287:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 686,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1286:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 687,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "1309:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1286:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1276:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "1276:41:5"
											}
										]
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "1055:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "pancakeFactory",
												"nameLocation": "1069:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1061:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1109:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1101:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1125:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1117:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:72:5"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1164:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1156:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:17:5"
									},
									"scope": 856,
									"src": "1046:279:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "1488:371:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 708,
																	"name": "amountsIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "1507:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1517:6:5",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1507:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1527:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1507:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44617461466574636865723a20494e56414c49445f414d4f554e54535f494e",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1530:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8109b2175b915a0bac4c87e9459f29ca9a4affef883848b20280b3d7c9eb18c1",
																"typeString": "literal_string \"DataFetcher: INVALID_AMOUNTS_IN\""
															},
															"value": "DataFetcher: INVALID_AMOUNTS_IN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8109b2175b915a0bac4c87e9459f29ca9a4affef883848b20280b3d7c9eb18c1",
																"typeString": "literal_string \"DataFetcher: INVALID_AMOUNTS_IN\""
															}
														],
														"id": 707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1499:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1499:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "1499:65:5"
											},
											{
												"assignments": [
													716,
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "reserveA",
														"nameLocation": "1584:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 760,
														"src": "1576:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1576:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "reserveB",
														"nameLocation": "1602:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 760,
														"src": "1594:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 717,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1594:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"arguments": [
														{
															"id": 720,
															"name": "pancakeFactory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "1626:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "1641:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 722,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "1649:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 719,
														"name": "getReserves",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "1614:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,address,address) view returns (uint256,uint256)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1614:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1575:81:5"
											},
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 725,
														"name": "amountsOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "1667:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 729,
																	"name": "amountsIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "1694:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1704:6:5",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1694:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "1680:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 726,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1684:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 727,
																"nodeType": "ArrayTypeName",
																"src": "1684:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1680:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "1667:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "1667:44:5"
											},
											{
												"body": {
													"id": 758,
													"nodeType": "Block",
													"src": "1773:79:5",
													"statements": [
														{
															"expression": {
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 745,
																		"name": "amountsOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "1788:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 747,
																	"indexExpression": {
																		"id": 746,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "1799:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1788:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 748,
																						"name": "amountsIn",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 697,
																						"src": "1805:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 750,
																					"indexExpression": {
																						"id": 749,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 735,
																						"src": "1815:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1805:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 751,
																					"name": "reserveB",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 718,
																					"src": "1820:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1805:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 753,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1804:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 754,
																		"name": "reserveA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 716,
																		"src": "1832:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1804:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1788:52:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 757,
															"nodeType": "ExpressionStatement",
															"src": "1788:52:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "1745:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 739,
															"name": "amountsIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "1749:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1759:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1749:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1745:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 759,
												"initializationExpression": {
													"assignments": [
														735
													],
													"declarations": [
														{
															"constant": false,
															"id": 735,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1737:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 759,
															"src": "1729:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 734,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1729:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 737,
													"initialValue": {
														"hexValue": "30",
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1741:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1729:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1768:3:5",
														"subExpression": {
															"id": 742,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "1768:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 744,
													"nodeType": "ExpressionStatement",
													"src": "1768:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1724:128:5"
											}
										]
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteBatch",
									"nameLocation": "1342:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "pancakeFactory",
												"nameLocation": "1361:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1353:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "amountsIn",
												"nameLocation": "1393:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1376:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 695,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1376:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 696,
													"nodeType": "ArrayTypeName",
													"src": "1376:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1412:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1404:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1428:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1420:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:83:5"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "amountsOut",
												"nameLocation": "1476:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1459:27:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 703,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1459:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 704,
													"nodeType": "ArrayTypeName",
													"src": "1459:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:29:5"
									},
									"scope": 856,
									"src": "1333:526:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "1995:463:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 774,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "2014:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2019:6:5",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2014:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "32",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2029:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2014:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44617461466574636865723a20494e56414c49445f50415448",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2032:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a96d41b633d711a8bfc69ec86fc1f92439ed17d8c335e6f00937ec23bb9dc24",
																"typeString": "literal_string \"DataFetcher: INVALID_PATH\""
															},
															"value": "DataFetcher: INVALID_PATH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a96d41b633d711a8bfc69ec86fc1f92439ed17d8c335e6f00937ec23bb9dc24",
																"typeString": "literal_string \"DataFetcher: INVALID_PATH\""
															}
														],
														"id": 773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2006:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "2006:54:5"
											},
											{
												"assignments": [
													785
												],
												"declarations": [
													{
														"constant": false,
														"id": 785,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "2088:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 854,
														"src": "2071:24:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 783,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2071:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 784,
															"nodeType": "ArrayTypeName",
															"src": "2071:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 792,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 789,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "2112:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2117:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2112:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2098:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 786,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2102:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 787,
															"nodeType": "ArrayTypeName",
															"src": "2102:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2098:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2071:53:5"
											},
											{
												"expression": {
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 793,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2135:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 795,
														"indexExpression": {
															"hexValue": "30",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2143:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2135:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 796,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "2148:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2135:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "2135:21:5"
											},
											{
												"body": {
													"id": 843,
													"nodeType": "Block",
													"src": "2217:187:5",
													"statements": [
														{
															"assignments": [
																813,
																815
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 813,
																	"mutability": "mutable",
																	"name": "reserveIn",
																	"nameLocation": "2241:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 843,
																	"src": "2233:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 812,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2233:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 815,
																	"mutability": "mutable",
																	"name": "reserveOut",
																	"nameLocation": "2260:10:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 843,
																	"src": "2252:18:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 814,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2252:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 827,
															"initialValue": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "pancakeFactory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "2286:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 818,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "2302:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 820,
																		"indexExpression": {
																			"id": 819,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "2307:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2302:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 821,
																			"name": "path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "2311:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 825,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 822,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "2316:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2320:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2316:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2311:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 816,
																	"name": "getReserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "2274:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint256_$",
																		"typeString": "function (address,address,address) view returns (uint256,uint256)"
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2274:49:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2232:91:5"
														},
														{
															"expression": {
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 828,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "2338:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 832,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 829,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "2346:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2350:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2346:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2338:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 833,
																						"name": "amounts",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 785,
																						"src": "2356:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 835,
																					"indexExpression": {
																						"id": 834,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 800,
																						"src": "2364:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2356:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 836,
																					"name": "reserveOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 815,
																					"src": "2369:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2356:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 838,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2355:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 839,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 813,
																		"src": "2383:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2355:37:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2338:54:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "2338:54:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 803,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "2190:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 804,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "2194:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2199:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2194:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2208:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2194:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2190:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 844,
												"initializationExpression": {
													"assignments": [
														800
													],
													"declarations": [
														{
															"constant": false,
															"id": 800,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2182:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 844,
															"src": "2174:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 799,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2174:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 802,
													"initialValue": {
														"hexValue": "30",
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2186:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2174:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2212:3:5",
														"subExpression": {
															"id": 809,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "2212:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 811,
													"nodeType": "ExpressionStatement",
													"src": "2212:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2169:235:5"
											},
											{
												"expression": {
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 845,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "2414:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 846,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2426:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 851,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 847,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "2434:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2439:6:5",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2434:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2448:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2434:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2426:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2414:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "2414:36:5"
											}
										]
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteRouted",
									"nameLocation": "1876:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "pancakeFactory",
												"nameLocation": "1896:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1888:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1920:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1912:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1947:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1930:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 766,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1930:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 767,
													"nodeType": "ArrayTypeName",
													"src": "1930:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:65:5"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1984:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1976:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1975:19:5"
									},
									"scope": 856,
									"src": "1867:591:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 857,
							"src": "157:2304:5",
							"usedErrors": []
						}
					],
					"src": "41:2420:5"
				},
				"id": 5
			},
			"src/libraries/Math.sol": {
				"ast": {
					"absolutePath": "src/libraries/Math.sol",
					"exportedSymbols": {
						"Math": [
							1722
						]
					},
					"id": 1723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 858,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 859,
								"nodeType": "StructuredDocumentation",
								"src": "133:75:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1722,
							"linearizedBaseContracts": [
								1722
							],
							"name": "Math",
							"nameLocation": "218:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 863,
									"members": [
										{
											"id": 860,
											"name": "Down",
											"nameLocation": "255:4:6",
											"nodeType": "EnumValue",
											"src": "255:4:6"
										},
										{
											"id": 861,
											"name": "Up",
											"nameLocation": "298:2:6",
											"nodeType": "EnumValue",
											"src": "298:2:6"
										},
										{
											"id": 862,
											"name": "Zero",
											"nameLocation": "330:4:6",
											"nodeType": "EnumValue",
											"src": "330:4:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "235:8:6",
									"nodeType": "EnumDefinition",
									"src": "230:126:6"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "498:39:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "516:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 874,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "520:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "516:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 877,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "528:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "516:13:6",
													"trueExpression": {
														"id": 876,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "524:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 872,
												"id": 879,
												"nodeType": "Return",
												"src": "509:20:6"
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "364:61:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "440:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "452:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "444:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "463:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "455:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:22:6"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "489:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:9:6"
									},
									"scope": 1722,
									"src": "431:106:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "680:39:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 891,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "698:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 892,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "702:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "698:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 895,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "710:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "698:13:6",
													"trueExpression": {
														"id": 894,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "706:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 890,
												"id": 897,
												"nodeType": "Return",
												"src": "691:20:6"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "545:62:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "622:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "634:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "626:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "645:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "637:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:22:6"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "671:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:9:6"
									},
									"scope": 1722,
									"src": "613:106:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "909:85:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 909,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "966:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 910,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "970:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "966:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 912,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "965:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 913,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "976:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 914,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "980:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "976:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 916,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "975:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "985:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "975:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "965:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 908,
												"id": 920,
												"nodeType": "Return",
												"src": "958:28:6"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "727:105:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "847:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "863:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "855:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "874:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "866:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:22:6"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "900:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:9:6"
									},
									"scope": 1722,
									"src": "838:156:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "1272:126:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 932,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "1362:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1367:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1362:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 936,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "1376:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1380:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1376:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 939,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1375:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 940,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "1385:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1375:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1389:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1375:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1362:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1371:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 931,
												"id": 945,
												"nodeType": "Return",
												"src": "1355:35:6"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "1002:193:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1210:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1226:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1218:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1218:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1237:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1229:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1217:22:6"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1263:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:9:6"
									},
									"scope": 1722,
									"src": "1201:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "1819:3898:6",
										"statements": [
											{
												"id": 1068,
												"nodeType": "UncheckedBlock",
												"src": "1830:3880:6",
												"statements": [
													{
														"assignments": [
															960
														],
														"declarations": [
															{
																"constant": false,
																"id": 960,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2163:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "2155:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 959,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2155:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 961,
														"nodeType": "VariableDeclarationStatement",
														"src": "2155:13:6"
													},
													{
														"assignments": [
															963
														],
														"declarations": [
															{
																"constant": false,
																"id": 963,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2236:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "2228:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 962,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2228:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 964,
														"nodeType": "VariableDeclarationStatement",
														"src": "2228:13:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2309:161:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2328:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2345:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2348:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2355:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2351:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2351:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2338:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2332:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2376:18:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2389:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2392:1:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2385:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2385:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2376:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2412:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2429:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2433:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2425:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2425:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2444:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2448:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2441:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2441:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2421:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2421:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2412:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 960,
																"isOffset": false,
																"isSlot": false,
																"src": "2376:5:6",
																"valueSize": 1
															},
															{
																"declaration": 960,
																"isOffset": false,
																"isSlot": false,
																"src": "2433:5:6",
																"valueSize": 1
															},
															{
																"declaration": 960,
																"isOffset": false,
																"isSlot": false,
																"src": "2448:5:6",
																"valueSize": 1
															},
															{
																"declaration": 963,
																"isOffset": false,
																"isSlot": false,
																"src": "2412:5:6",
																"valueSize": 1
															},
															{
																"declaration": 950,
																"isOffset": false,
																"isSlot": false,
																"src": "2345:1:6",
																"valueSize": 1
															},
															{
																"declaration": 950,
																"isOffset": false,
																"isSlot": false,
																"src": "2389:1:6",
																"valueSize": 1
															},
															{
																"declaration": 952,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:1:6",
																"valueSize": 1
															},
															{
																"declaration": 952,
																"isOffset": false,
																"isSlot": false,
																"src": "2392:1:6",
																"valueSize": 1
															}
														],
														"id": 965,
														"nodeType": "InlineAssembly",
														"src": "2300:170:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "2554:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2563:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2554:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 974,
														"nodeType": "IfStatement",
														"src": "2550:77:6",
														"trueBody": {
															"id": 973,
															"nodeType": "Block",
															"src": "2566:61:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 969,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "2592:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 970,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 954,
																			"src": "2600:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2592:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 958,
																	"id": 972,
																	"nodeType": "Return",
																	"src": "2585:26:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 976,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "2740:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 977,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "2754:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2740:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2761:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 975,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2732:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2732:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 981,
														"nodeType": "ExpressionStatement",
														"src": "2732:53:6"
													},
													{
														"assignments": [
															983
														],
														"declarations": [
															{
																"constant": false,
																"id": 983,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3056:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "3048:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 982,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3048:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 984,
														"nodeType": "VariableDeclarationStatement",
														"src": "3048:17:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3089:298:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3160:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3180:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3183:1:6"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3186:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3173:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3173:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3160:9:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3283:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3296:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3306:9:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3317:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3303:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3303:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3292:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3292:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3283:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3342:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3355:5:6"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3362:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3342:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "3186:11:6",
																"valueSize": 1
															},
															{
																"declaration": 960,
																"isOffset": false,
																"isSlot": false,
																"src": "3317:5:6",
																"valueSize": 1
															},
															{
																"declaration": 960,
																"isOffset": false,
																"isSlot": false,
																"src": "3342:5:6",
																"valueSize": 1
															},
															{
																"declaration": 960,
																"isOffset": false,
																"isSlot": false,
																"src": "3355:5:6",
																"valueSize": 1
															},
															{
																"declaration": 963,
																"isOffset": false,
																"isSlot": false,
																"src": "3283:5:6",
																"valueSize": 1
															},
															{
																"declaration": 963,
																"isOffset": false,
																"isSlot": false,
																"src": "3296:5:6",
																"valueSize": 1
															},
															{
																"declaration": 983,
																"isOffset": false,
																"isSlot": false,
																"src": "3160:9:6",
																"valueSize": 1
															},
															{
																"declaration": 983,
																"isOffset": false,
																"isSlot": false,
																"src": "3306:9:6",
																"valueSize": 1
															},
															{
																"declaration": 983,
																"isOffset": false,
																"isSlot": false,
																"src": "3362:9:6",
																"valueSize": 1
															},
															{
																"declaration": 950,
																"isOffset": false,
																"isSlot": false,
																"src": "3180:1:6",
																"valueSize": 1
															},
															{
																"declaration": 952,
																"isOffset": false,
																"isSlot": false,
																"src": "3183:1:6",
																"valueSize": 1
															}
														],
														"id": 985,
														"nodeType": "InlineAssembly",
														"src": "3080:307:6"
													},
													{
														"assignments": [
															987
														],
														"declarations": [
															{
																"constant": false,
																"id": 987,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3708:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "3700:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 986,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3700:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 995,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 988,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "3715:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3730:12:6",
																			"subExpression": {
																				"id": 989,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 954,
																				"src": "3731:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3745:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3730:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 993,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3729:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3715:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3700:47:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3771:371:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3838:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3857:11:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3853:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3853:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3838:11:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3945:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3958:5:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3965:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3954:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3954:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3945:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4088:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4108:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4111:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4104:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4104:12:6"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4118:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4100:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4100:23:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4096:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4096:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4088:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "3838:11:6",
																"valueSize": 1
															},
															{
																"declaration": 954,
																"isOffset": false,
																"isSlot": false,
																"src": "3857:11:6",
																"valueSize": 1
															},
															{
																"declaration": 960,
																"isOffset": false,
																"isSlot": false,
																"src": "3945:5:6",
																"valueSize": 1
															},
															{
																"declaration": 960,
																"isOffset": false,
																"isSlot": false,
																"src": "3958:5:6",
																"valueSize": 1
															},
															{
																"declaration": 987,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:6",
																"valueSize": 1
															},
															{
																"declaration": 987,
																"isOffset": false,
																"isSlot": false,
																"src": "3965:4:6",
																"valueSize": 1
															},
															{
																"declaration": 987,
																"isOffset": false,
																"isSlot": false,
																"src": "4088:4:6",
																"valueSize": 1
															},
															{
																"declaration": 987,
																"isOffset": false,
																"isSlot": false,
																"src": "4111:4:6",
																"valueSize": 1
															},
															{
																"declaration": 987,
																"isOffset": false,
																"isSlot": false,
																"src": "4118:4:6",
																"valueSize": 1
															}
														],
														"id": 996,
														"nodeType": "InlineAssembly",
														"src": "3762:380:6"
													},
													{
														"expression": {
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 997,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "4211:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 998,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "4220:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 999,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "4228:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4220:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4211:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1002,
														"nodeType": "ExpressionStatement",
														"src": "4211:21:6"
													},
													{
														"assignments": [
															1004
														],
														"declarations": [
															{
																"constant": false,
																"id": 1004,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4563:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "4555:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1003,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4555:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1011,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4574:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1006,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 954,
																			"src": "4578:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4574:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1008,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4573:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4593:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4573:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4555:39:6"
													},
													{
														"expression": {
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1012,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "4815:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4826:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1014,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "4830:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1015,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "4844:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4830:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4826:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4815:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1019,
														"nodeType": "ExpressionStatement",
														"src": "4815:36:6"
													},
													{
														"expression": {
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1020,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "4885:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4896:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1022,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "4900:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1023,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "4914:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4900:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4896:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4885:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1027,
														"nodeType": "ExpressionStatement",
														"src": "4885:36:6"
													},
													{
														"expression": {
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1028,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "4956:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4967:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1030,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "4971:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1031,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "4985:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4971:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4967:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4956:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1035,
														"nodeType": "ExpressionStatement",
														"src": "4956:36:6"
													},
													{
														"expression": {
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1036,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "5027:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5038:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1038,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "5042:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1039,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "5056:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5042:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5038:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5027:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1043,
														"nodeType": "ExpressionStatement",
														"src": "5027:36:6"
													},
													{
														"expression": {
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1044,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "5098:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5109:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1046,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "5113:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1047,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "5127:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5113:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5109:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5098:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1051,
														"nodeType": "ExpressionStatement",
														"src": "5098:36:6"
													},
													{
														"expression": {
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1052,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "5170:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5181:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1054,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "5185:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1055,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "5199:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5185:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5181:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5170:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1059,
														"nodeType": "ExpressionStatement",
														"src": "5170:36:6"
													},
													{
														"expression": {
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1060,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "5646:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1061,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "5655:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1062,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "5663:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5655:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5646:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1065,
														"nodeType": "ExpressionStatement",
														"src": "5646:24:6"
													},
													{
														"expression": {
															"id": 1066,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "5692:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 958,
														"id": 1067,
														"nodeType": "Return",
														"src": "5685:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "1406:309:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1730:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1745:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1737:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1756:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1748:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1767:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1759:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:43:6"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1811:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1803:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:16:6"
									},
									"scope": 1722,
									"src": "1721:3996:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "5964:195:6",
										"statements": [
											{
												"assignments": [
													1086
												],
												"declarations": [
													{
														"constant": false,
														"id": 1086,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5983:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1113,
														"src": "5975:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1085,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5975:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1092,
												"initialValue": {
													"arguments": [
														{
															"id": 1088,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "5999:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1089,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "6002:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1090,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "6005:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1087,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1070,
															1114
														],
														"referencedDeclaration": 1070,
														"src": "5992:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5992:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5975:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$863",
															"typeString": "enum Math.Rounding"
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1093,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "6032:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$863",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1094,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "6044:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$863_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6053:2:6",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "6044:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$863",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6032:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1098,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "6066:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1099,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "6069:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1100,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "6072:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1097,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6059:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6059:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6087:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6059:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6032:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "6028:100:6",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "6090:38:6",
													"statements": [
														{
															"expression": {
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1105,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "6105:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6115:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6105:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1108,
															"nodeType": "ExpressionStatement",
															"src": "6105:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1111,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1086,
													"src": "6145:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1084,
												"id": 1112,
												"nodeType": "Return",
												"src": "6138:13:6"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "5725:123:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5863:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5878:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5870:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5870:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5889:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5881:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5900:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5892:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5922:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5913:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$863",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1079,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1078,
														"name": "Rounding",
														"nameLocations": [
															"5913:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 863,
														"src": "5913:8:6"
													},
													"referencedDeclaration": 863,
													"src": "5913:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$863",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5869:62:6"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5955:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:6"
									},
									"scope": 1722,
									"src": "5854:305:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "6442:1616:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1122,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "6457:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6462:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6457:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "6453:47:6",
												"trueBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "6465:35:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6487:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1121,
															"id": 1126,
															"nodeType": "Return",
															"src": "6480:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1130
												],
												"declarations": [
													{
														"constant": false,
														"id": 1130,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7199:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "7191:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1129,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7191:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1139,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7208:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1133,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "7219:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1132,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1394,
																			1430
																		],
																		"referencedDeclaration": 1394,
																		"src": "7214:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7214:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7225:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7214:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1137,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7213:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7208:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7191:36:6"
											},
											{
												"id": 1224,
												"nodeType": "UncheckedBlock",
												"src": "7634:417:6",
												"statements": [
													{
														"expression": {
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1140,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "7659:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1141,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "7669:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1142,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "7678:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1143,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "7682:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7678:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7669:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1146,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7668:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7693:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7668:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7659:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1150,
														"nodeType": "ExpressionStatement",
														"src": "7659:35:6"
													},
													{
														"expression": {
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1151,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "7709:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1152,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "7719:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1153,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "7728:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1154,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "7732:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7728:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7719:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1157,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7718:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7743:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7718:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7709:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1161,
														"nodeType": "ExpressionStatement",
														"src": "7709:35:6"
													},
													{
														"expression": {
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1162,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "7759:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1163,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "7769:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1164,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "7778:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1165,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "7782:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7778:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7769:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1168,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7768:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7793:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7768:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7759:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1172,
														"nodeType": "ExpressionStatement",
														"src": "7759:35:6"
													},
													{
														"expression": {
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1173,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "7809:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1174,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "7819:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1177,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1175,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "7828:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1176,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "7832:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7828:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7819:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1179,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7818:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7843:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7818:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7809:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1183,
														"nodeType": "ExpressionStatement",
														"src": "7809:35:6"
													},
													{
														"expression": {
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1184,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "7859:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1185,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "7869:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1186,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "7878:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1187,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "7882:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7878:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7869:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1190,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7868:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7893:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7868:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7859:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1194,
														"nodeType": "ExpressionStatement",
														"src": "7859:35:6"
													},
													{
														"expression": {
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1195,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "7909:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1196,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "7919:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1197,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "7928:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1198,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "7932:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7928:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7919:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1201,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7918:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7943:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7918:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7909:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1205,
														"nodeType": "ExpressionStatement",
														"src": "7909:35:6"
													},
													{
														"expression": {
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1206,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "7959:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1207,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "7969:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1210,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1208,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "7978:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1209,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "7982:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7978:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7969:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1212,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7968:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7993:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7968:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7959:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1216,
														"nodeType": "ExpressionStatement",
														"src": "7959:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1218,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "8020:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1219,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "8028:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1220,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "8032:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8028:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1217,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "8016:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8016:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1121,
														"id": 1223,
														"nodeType": "Return",
														"src": "8009:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "6167:212:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6394:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6407:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "6399:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:11:6"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "6433:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6433:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6432:9:6"
									},
									"scope": 1722,
									"src": "6385:1673:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "8239:166:6",
										"statements": [
											{
												"id": 1260,
												"nodeType": "UncheckedBlock",
												"src": "8250:148:6",
												"statements": [
													{
														"assignments": [
															1238
														],
														"declarations": [
															{
																"constant": false,
																"id": 1238,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8283:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1260,
																"src": "8275:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1237,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8275:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1242,
														"initialValue": {
															"arguments": [
																{
																	"id": 1240,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "8297:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1239,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1226,
																	1262
																],
																"referencedDeclaration": 1226,
																"src": "8292:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8292:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8275:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1243,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "8321:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$863",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1244,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1232,
																					"src": "8331:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$863",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1245,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 863,
																						"src": "8343:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$863_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1246,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8352:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 861,
																					"src": "8343:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$863",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8331:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1250,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1248,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1238,
																						"src": "8358:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1249,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1238,
																						"src": "8367:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8358:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1251,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1229,
																					"src": "8376:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8358:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8331:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8384:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8331:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8380:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1257,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8330:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8321:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1236,
														"id": 1259,
														"nodeType": "Return",
														"src": "8314:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "8066:91:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8172:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8185:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "8177:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8177:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8197:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "8188:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$863",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1230,
														"name": "Rounding",
														"nameLocations": [
															"8188:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 863,
														"src": "8188:8:6"
													},
													"referencedDeclaration": 863,
													"src": "8188:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$863",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8176:30:6"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "8230:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8230:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8229:9:6"
									},
									"scope": 1722,
									"src": "8163:242:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "8596:958:6",
										"statements": [
											{
												"assignments": [
													1271
												],
												"declarations": [
													{
														"constant": false,
														"id": 1271,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8615:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "8607:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1270,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8607:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"hexValue": "30",
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8624:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8607:18:6"
											},
											{
												"id": 1390,
												"nodeType": "UncheckedBlock",
												"src": "8636:887:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "8665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8674:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8665:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8680:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8665:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1288,
														"nodeType": "IfStatement",
														"src": "8661:102:6",
														"trueBody": {
															"id": 1287,
															"nodeType": "Block",
															"src": "8683:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1279,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "8702:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8712:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8702:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1282,
																	"nodeType": "ExpressionStatement",
																	"src": "8702:13:6"
																},
																{
																	"expression": {
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1283,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "8734:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8744:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8734:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1286,
																	"nodeType": "ExpressionStatement",
																	"src": "8734:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1289,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "8781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8790:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8781:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8795:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8781:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1303,
														"nodeType": "IfStatement",
														"src": "8777:99:6",
														"trueBody": {
															"id": 1302,
															"nodeType": "Block",
															"src": "8798:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1294,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "8817:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8827:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8817:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1297,
																	"nodeType": "ExpressionStatement",
																	"src": "8817:12:6"
																},
																{
																	"expression": {
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1298,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "8848:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8858:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8848:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1301,
																	"nodeType": "ExpressionStatement",
																	"src": "8848:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1304,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "8894:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8903:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8894:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8908:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8894:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1318,
														"nodeType": "IfStatement",
														"src": "8890:99:6",
														"trueBody": {
															"id": 1317,
															"nodeType": "Block",
															"src": "8911:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1309,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "8930:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8940:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8930:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1312,
																	"nodeType": "ExpressionStatement",
																	"src": "8930:12:6"
																},
																{
																	"expression": {
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1313,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "8961:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8971:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8961:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1316,
																	"nodeType": "ExpressionStatement",
																	"src": "8961:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1319,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "9007:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9016:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9007:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9021:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9007:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1333,
														"nodeType": "IfStatement",
														"src": "9003:99:6",
														"trueBody": {
															"id": 1332,
															"nodeType": "Block",
															"src": "9024:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1324,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "9043:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9053:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9043:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1327,
																	"nodeType": "ExpressionStatement",
																	"src": "9043:12:6"
																},
																{
																	"expression": {
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1328,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "9074:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9084:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9074:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1331,
																	"nodeType": "ExpressionStatement",
																	"src": "9074:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1334,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "9120:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9129:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9120:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9133:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9120:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1348,
														"nodeType": "IfStatement",
														"src": "9116:96:6",
														"trueBody": {
															"id": 1347,
															"nodeType": "Block",
															"src": "9136:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1339,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "9155:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9155:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1342,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:11:6"
																},
																{
																	"expression": {
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1343,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "9185:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9195:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9185:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1346,
																	"nodeType": "ExpressionStatement",
																	"src": "9185:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1349,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "9230:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9239:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9230:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9243:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9230:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1363,
														"nodeType": "IfStatement",
														"src": "9226:96:6",
														"trueBody": {
															"id": 1362,
															"nodeType": "Block",
															"src": "9246:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "9265:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9275:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9265:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1357,
																	"nodeType": "ExpressionStatement",
																	"src": "9265:11:6"
																},
																{
																	"expression": {
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1358,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "9295:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9305:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9295:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1361,
																	"nodeType": "ExpressionStatement",
																	"src": "9295:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1364,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "9340:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9349:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9340:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9353:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9340:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1378,
														"nodeType": "IfStatement",
														"src": "9336:96:6",
														"trueBody": {
															"id": 1377,
															"nodeType": "Block",
															"src": "9356:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1369,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "9375:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9385:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9375:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1372,
																	"nodeType": "ExpressionStatement",
																	"src": "9375:11:6"
																},
																{
																	"expression": {
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1373,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "9405:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9415:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9405:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1376,
																	"nodeType": "ExpressionStatement",
																	"src": "9405:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1379,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "9450:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9459:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9450:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9463:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9450:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1389,
														"nodeType": "IfStatement",
														"src": "9446:66:6",
														"trueBody": {
															"id": 1388,
															"nodeType": "Block",
															"src": "9466:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1384,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "9485:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9495:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9485:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1387,
																	"nodeType": "ExpressionStatement",
																	"src": "9485:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1391,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1271,
													"src": "9540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1269,
												"id": 1392,
												"nodeType": "Return",
												"src": "9533:13:6"
											}
										]
									},
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "8413:116:6",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8544:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8557:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "8549:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8549:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8548:15:6"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "8587:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8587:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8586:9:6"
									},
									"scope": 1722,
									"src": "8535:1019:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "9793:170:6",
										"statements": [
											{
												"id": 1428,
												"nodeType": "UncheckedBlock",
												"src": "9804:152:6",
												"statements": [
													{
														"assignments": [
															1406
														],
														"declarations": [
															{
																"constant": false,
																"id": 1406,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9837:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1428,
																"src": "9829:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1405,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9829:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1410,
														"initialValue": {
															"arguments": [
																{
																	"id": 1408,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "9851:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1407,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1394,
																	1430
																],
																"referencedDeclaration": 1394,
																"src": "9846:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9846:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9829:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1411,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "9879:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$863",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1412,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1400,
																					"src": "9889:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$863",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1413,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 863,
																						"src": "9901:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$863_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1414,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9910:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 861,
																					"src": "9901:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$863",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9889:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1416,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9916:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1417,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1406,
																						"src": "9921:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9916:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1419,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1397,
																					"src": "9930:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9916:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9889:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9942:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9889:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9938:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1425,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9888:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9879:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1404,
														"id": 1427,
														"nodeType": "Return",
														"src": "9872:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "9562:145:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9722:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9735:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "9727:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9727:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9751:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "9742:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$863",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1399,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1398,
														"name": "Rounding",
														"nameLocations": [
															"9742:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 863,
														"src": "9742:8:6"
													},
													"referencedDeclaration": 863,
													"src": "9742:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$863",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9726:34:6"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "9784:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9784:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9783:9:6"
									},
									"scope": 1722,
									"src": "9713:250:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "10156:886:6",
										"statements": [
											{
												"assignments": [
													1439
												],
												"declarations": [
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10175:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "10167:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1438,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10167:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1441,
												"initialValue": {
													"hexValue": "30",
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10184:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10167:18:6"
											},
											{
												"id": 1555,
												"nodeType": "UncheckedBlock",
												"src": "10196:815:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1442,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "10225:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10234:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10240:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10234:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10225:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1458,
														"nodeType": "IfStatement",
														"src": "10221:106:6",
														"trueBody": {
															"id": 1457,
															"nodeType": "Block",
															"src": "10244:83:6",
															"statements": [
																{
																	"expression": {
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1447,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "10263:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10272:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10278:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10272:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10263:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1452,
																	"nodeType": "ExpressionStatement",
																	"src": "10263:17:6"
																},
																{
																	"expression": {
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1453,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "10299:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10309:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10299:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1456,
																	"nodeType": "ExpressionStatement",
																	"src": "10299:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1459,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "10345:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10354:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10360:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10354:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10345:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1475,
														"nodeType": "IfStatement",
														"src": "10341:106:6",
														"trueBody": {
															"id": 1474,
															"nodeType": "Block",
															"src": "10364:83:6",
															"statements": [
																{
																	"expression": {
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1464,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "10383:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10392:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10398:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10392:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10383:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1469,
																	"nodeType": "ExpressionStatement",
																	"src": "10383:17:6"
																},
																{
																	"expression": {
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1470,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "10419:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10419:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1473,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1476,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "10465:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10474:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10480:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10474:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10465:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1492,
														"nodeType": "IfStatement",
														"src": "10461:106:6",
														"trueBody": {
															"id": 1491,
															"nodeType": "Block",
															"src": "10484:83:6",
															"statements": [
																{
																	"expression": {
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1481,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "10503:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10512:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10518:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10512:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10503:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1486,
																	"nodeType": "ExpressionStatement",
																	"src": "10503:17:6"
																},
																{
																	"expression": {
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1487,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "10539:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10549:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10539:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1490,
																	"nodeType": "ExpressionStatement",
																	"src": "10539:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1493,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "10585:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10594:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10600:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10594:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10585:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1509,
														"nodeType": "IfStatement",
														"src": "10581:103:6",
														"trueBody": {
															"id": 1508,
															"nodeType": "Block",
															"src": "10603:81:6",
															"statements": [
																{
																	"expression": {
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1498,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "10622:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1499,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10631:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10637:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10631:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10622:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1503,
																	"nodeType": "ExpressionStatement",
																	"src": "10622:16:6"
																},
																{
																	"expression": {
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1504,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "10657:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10667:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10657:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1507,
																	"nodeType": "ExpressionStatement",
																	"src": "10657:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1510,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "10702:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10711:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10717:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10711:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10702:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1526,
														"nodeType": "IfStatement",
														"src": "10698:103:6",
														"trueBody": {
															"id": 1525,
															"nodeType": "Block",
															"src": "10720:81:6",
															"statements": [
																{
																	"expression": {
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1515,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "10739:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10748:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10754:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10748:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10739:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1520,
																	"nodeType": "ExpressionStatement",
																	"src": "10739:16:6"
																},
																{
																	"expression": {
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1521,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "10774:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10784:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10774:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1524,
																	"nodeType": "ExpressionStatement",
																	"src": "10774:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1527,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "10819:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10828:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10834:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10828:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10819:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1543,
														"nodeType": "IfStatement",
														"src": "10815:103:6",
														"trueBody": {
															"id": 1542,
															"nodeType": "Block",
															"src": "10837:81:6",
															"statements": [
																{
																	"expression": {
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1532,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "10856:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10865:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10871:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10865:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10856:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1537,
																	"nodeType": "ExpressionStatement",
																	"src": "10856:16:6"
																},
																{
																	"expression": {
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1538,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "10891:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10901:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10891:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1541,
																	"nodeType": "ExpressionStatement",
																	"src": "10891:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1544,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "10936:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10945:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10951:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10945:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10936:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1554,
														"nodeType": "IfStatement",
														"src": "10932:68:6",
														"trueBody": {
															"id": 1553,
															"nodeType": "Block",
															"src": "10954:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1549,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1439,
																			"src": "10973:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10973:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1552,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1556,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1439,
													"src": "11028:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1437,
												"id": 1557,
												"nodeType": "Return",
												"src": "11021:13:6"
											}
										]
									},
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "9971:117:6",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10103:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10117:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "10109:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10109:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10108:15:6"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "10147:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10147:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10146:9:6"
									},
									"scope": 1722,
									"src": "10094:948:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "11283:172:6",
										"statements": [
											{
												"id": 1593,
												"nodeType": "UncheckedBlock",
												"src": "11294:154:6",
												"statements": [
													{
														"assignments": [
															1571
														],
														"declarations": [
															{
																"constant": false,
																"id": 1571,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11327:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1593,
																"src": "11319:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1570,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11319:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1575,
														"initialValue": {
															"arguments": [
																{
																	"id": 1573,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "11342:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1572,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1559,
																	1595
																],
																"referencedDeclaration": 1559,
																"src": "11336:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11336:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11319:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1576,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "11370:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$863",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1577,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1565,
																					"src": "11380:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$863",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1578,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 863,
																						"src": "11392:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$863_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11401:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 861,
																					"src": "11392:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$863",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11380:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1583,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1581,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11407:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1582,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1571,
																						"src": "11413:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11407:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1584,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1562,
																					"src": "11422:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11407:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11380:47:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11380:55:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11430:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1590,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11379:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11370:66:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1569,
														"id": 1592,
														"nodeType": "Return",
														"src": "11363:73:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "11050:146:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11211:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11225:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11217:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11217:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11241:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11232:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$863",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1564,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1563,
														"name": "Rounding",
														"nameLocations": [
															"11232:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 863,
														"src": "11232:8:6"
													},
													"referencedDeclaration": 863,
													"src": "11232:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$863",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11216:34:6"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "11274:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11273:9:6"
									},
									"scope": 1722,
									"src": "11202:253:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1681,
										"nodeType": "Block",
										"src": "11777:624:6",
										"statements": [
											{
												"assignments": [
													1604
												],
												"declarations": [
													{
														"constant": false,
														"id": 1604,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11796:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1681,
														"src": "11788:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1603,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11788:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"hexValue": "30",
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11805:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11788:18:6"
											},
											{
												"id": 1678,
												"nodeType": "UncheckedBlock",
												"src": "11817:553:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1607,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "11846:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11855:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11846:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11861:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11846:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1621,
														"nodeType": "IfStatement",
														"src": "11842:101:6",
														"trueBody": {
															"id": 1620,
															"nodeType": "Block",
															"src": "11864:79:6",
															"statements": [
																{
																	"expression": {
																		"id": 1614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1612,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "11883:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11893:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11883:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1615,
																	"nodeType": "ExpressionStatement",
																	"src": "11883:13:6"
																},
																{
																	"expression": {
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1616,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "11915:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11925:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11915:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1619,
																	"nodeType": "ExpressionStatement",
																	"src": "11915:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "11961:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11970:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11961:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11975:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11961:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1636,
														"nodeType": "IfStatement",
														"src": "11957:98:6",
														"trueBody": {
															"id": 1635,
															"nodeType": "Block",
															"src": "11978:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1627,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "11997:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12007:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11997:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1630,
																	"nodeType": "ExpressionStatement",
																	"src": "11997:12:6"
																},
																{
																	"expression": {
																		"id": 1633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1631,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "12028:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12028:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1634,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1637,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "12073:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12082:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12073:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12087:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12073:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1651,
														"nodeType": "IfStatement",
														"src": "12069:98:6",
														"trueBody": {
															"id": 1650,
															"nodeType": "Block",
															"src": "12090:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "12109:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12119:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12109:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1645,
																	"nodeType": "ExpressionStatement",
																	"src": "12109:12:6"
																},
																{
																	"expression": {
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1646,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "12140:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12150:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12140:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1649,
																	"nodeType": "ExpressionStatement",
																	"src": "12140:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1652,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "12185:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12194:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12185:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12199:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12185:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1666,
														"nodeType": "IfStatement",
														"src": "12181:98:6",
														"trueBody": {
															"id": 1665,
															"nodeType": "Block",
															"src": "12202:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1598,
																			"src": "12221:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12231:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12221:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1660,
																	"nodeType": "ExpressionStatement",
																	"src": "12221:12:6"
																},
																{
																	"expression": {
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1661,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "12252:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12262:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12252:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1664,
																	"nodeType": "ExpressionStatement",
																	"src": "12252:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1667,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "12297:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12306:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12297:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12310:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12297:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1677,
														"nodeType": "IfStatement",
														"src": "12293:66:6",
														"trueBody": {
															"id": 1676,
															"nodeType": "Block",
															"src": "12313:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1672,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "12332:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12342:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12332:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1675,
																	"nodeType": "ExpressionStatement",
																	"src": "12332:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1679,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1604,
													"src": "12387:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1680,
												"nodeType": "Return",
												"src": "12380:13:6"
											}
										]
									},
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "11463:245:6",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11723:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11738:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "11730:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11729:15:6"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "11768:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11767:9:6"
									},
									"scope": 1722,
									"src": "11714:687:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "12644:179:6",
										"statements": [
											{
												"id": 1719,
												"nodeType": "UncheckedBlock",
												"src": "12655:161:6",
												"statements": [
													{
														"assignments": [
															1694
														],
														"declarations": [
															{
																"constant": false,
																"id": 1694,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12688:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1719,
																"src": "12680:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1693,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12680:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1698,
														"initialValue": {
															"arguments": [
																{
																	"id": 1696,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "12704:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1695,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1682,
																	1721
																],
																"referencedDeclaration": 1682,
																"src": "12697:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12697:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12680:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1699,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1694,
																"src": "12732:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$863",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1703,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1700,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1688,
																					"src": "12742:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$863",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1701,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 863,
																						"src": "12754:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$863_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1702,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12763:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 861,
																					"src": "12754:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$863",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12742:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1704,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12769:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1707,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1705,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1694,
																									"src": "12775:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1706,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12785:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12775:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1708,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12774:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12769:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1710,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1685,
																					"src": "12790:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12769:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12742:53:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12802:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12742:61:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12798:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1716,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12741:63:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12732:72:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1692,
														"id": 1718,
														"nodeType": "Return",
														"src": "12725:79:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "12409:147:6",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12571:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12586:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "12578:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12578:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12602:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "12593:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$863",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1687,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1686,
														"name": "Rounding",
														"nameLocations": [
															"12593:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 863,
														"src": "12593:8:6"
													},
													"referencedDeclaration": 863,
													"src": "12593:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$863",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12577:34:6"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "12635:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12635:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12634:9:6"
									},
									"scope": 1722,
									"src": "12562:261:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1723,
							"src": "210:12616:6",
							"usedErrors": []
						}
					],
					"src": "106:12720:6"
				},
				"id": 6
			},
			"src/libraries/SafeETH.sol": {
				"ast": {
					"absolutePath": "src/libraries/SafeETH.sol",
					"exportedSymbols": {
						"SafeETH": [
							1750
						]
					},
					"id": 1751,
					"license": "GNU GPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeETH",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1750,
							"linearizedBaseContracts": [
								1750
							],
							"name": "SafeETH",
							"nameLocation": "76:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "152:149:7",
										"statements": [
											{
												"assignments": [
													1732,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1732,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "169:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1748,
														"src": "164:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1731,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "164:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1742,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "214:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "204:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1737,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "208:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "204:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1733,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "182:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "185:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "182:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1735,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "197:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "182:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "182:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "163:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1744,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "236:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654554483a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "245:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332",
																"typeString": "literal_string \"SafeETH::safeTransferETH: ETH transfer failed\""
															},
															"value": "SafeETH::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b1224e043b9f208e84e3592cdc1b561aaad38f67d91b3de3b8d1dc93bf73332",
																"typeString": "literal_string \"SafeETH::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 1743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "228:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "228:65:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1747,
												"nodeType": "ExpressionStatement",
												"src": "228:65:7"
											}
										]
									},
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "100:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "124:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "116:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "136:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "128:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "128:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:27:7"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "152:0:7"
									},
									"scope": 1750,
									"src": "91:210:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1751,
							"src": "68:236:7",
							"usedErrors": []
						}
					],
					"src": "41:263:7"
				},
				"id": 7
			},
			"src/libraries/SignedMath.sol": {
				"ast": {
					"absolutePath": "src/libraries/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1855
						]
					},
					"id": 1856,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1752,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1753,
								"nodeType": "StructuredDocumentation",
								"src": "139:82:8",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1855,
							"linearizedBaseContracts": [
								1855
							],
							"name": "SignedMath",
							"nameLocation": "231:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "387:39:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1763,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "405:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1764,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "409:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "405:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1767,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "417:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "405:13:8",
													"trueExpression": {
														"id": 1766,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "413:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1762,
												"id": 1769,
												"nodeType": "Return",
												"src": "398:20:8"
											}
										]
									},
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "249:68:8",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "332:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "343:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "336:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1755,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "336:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "353:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "346:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1757,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "346:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:20:8"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "379:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1760,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "379:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:8:8"
									},
									"scope": 1855,
									"src": "323:103:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "573:39:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1781,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "591:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1782,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "595:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "591:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1785,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "603:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "591:13:8",
													"trueExpression": {
														"id": 1784,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "599:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1780,
												"id": 1787,
												"nodeType": "Return",
												"src": "584:20:8"
											}
										]
									},
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "434:69:8",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "518:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "529:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "522:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1773,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "522:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "539:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "532:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1775,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "532:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:20:8"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "565:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1778,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:8:8"
									},
									"scope": 1855,
									"src": "509:103:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "823:166:8",
										"statements": [
											{
												"assignments": [
													1800
												],
												"declarations": [
													{
														"constant": false,
														"id": 1800,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "894:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 1832,
														"src": "887:8:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1799,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "887:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1813,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1801,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1792,
																	"src": "899:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1802,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1794,
																	"src": "903:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "899:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1804,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "898:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1805,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1792,
																				"src": "910:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1806,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1794,
																				"src": "914:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "910:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1808,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "909:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "920:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "909:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1811,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "908:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "898:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "887:35:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1814,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1800,
														"src": "940:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1819,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1800,
																						"src": "960:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "952:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1817,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "952:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "952:10:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "966:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "952:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "945:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1815,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "945:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "945:25:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1824,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1792,
																				"src": "974:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1825,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1794,
																				"src": "978:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "974:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1827,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "973:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "945:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1829,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "944:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "940:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1798,
												"id": 1831,
												"nodeType": "Return",
												"src": "933:48:8"
											}
										]
									},
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "620:129:8",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "764:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "779:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "772:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1791,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "772:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "789:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "782:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1793,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "782:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:20:8"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "815:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1796,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "815:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:8:8"
									},
									"scope": 1855,
									"src": "755:234:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "1138:163:8",
										"statements": [
											{
												"id": 1852,
												"nodeType": "UncheckedBlock",
												"src": "1149:145:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1843,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "1266:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1271:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1266:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1279:2:8",
																		"subExpression": {
																			"id": 1847,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "1280:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1266:15:8",
																	"trueExpression": {
																		"id": 1846,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "1275:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1258:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1841,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1258:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1258:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1840,
														"id": 1851,
														"nodeType": "Return",
														"src": "1251:31:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "997:80:8",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1092:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1103:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1096:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1835,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1096:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:10:8"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1129:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:9:8"
									},
									"scope": 1855,
									"src": "1083:218:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1856,
							"src": "223:1081:8",
							"usedErrors": []
						}
					],
					"src": "112:1192:8"
				},
				"id": 8
			},
			"src/libraries/Strings.sol": {
				"ast": {
					"absolutePath": "src/libraries/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1722
						],
						"SignedMath": [
							1855
						],
						"Strings": [
							2084
						]
					},
					"id": 2085,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1857,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:9"
						},
						{
							"absolutePath": "src/libraries/Math.sol",
							"file": "./Math.sol",
							"id": 1858,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2085,
							"sourceUnit": 1723,
							"src": "131:20:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/libraries/SignedMath.sol",
							"file": "./SignedMath.sol",
							"id": 1859,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2085,
							"sourceUnit": 1856,
							"src": "153:26:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1860,
								"nodeType": "StructuredDocumentation",
								"src": "183:36:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2084,
							"linearizedBaseContracts": [
								2084
							],
							"name": "Strings",
							"nameLocation": "229:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1863,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "269:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2084,
									"src": "244:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1861,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "244:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1862,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "280:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1866,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "328:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2084,
									"src": "305:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1864,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "305:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1865,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "346:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "526:645:9",
										"statements": [
											{
												"id": 1912,
												"nodeType": "UncheckedBlock",
												"src": "537:627:9",
												"statements": [
													{
														"assignments": [
															1875
														],
														"declarations": [
															{
																"constant": false,
																"id": 1875,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "570:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1912,
																"src": "562:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1874,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "562:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1882,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1878,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1869,
																		"src": "590:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1876,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1722,
																		"src": "579:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1722_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "584:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1559,
																	"src": "579:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "579:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "599:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "579:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "562:38:9"
													},
													{
														"assignments": [
															1884
														],
														"declarations": [
															{
																"constant": false,
																"id": 1884,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "629:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1912,
																"src": "615:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1883,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "615:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1889,
														"initialValue": {
															"arguments": [
																{
																	"id": 1887,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "649:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "638:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1885,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "642:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "638:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "615:41:9"
													},
													{
														"assignments": [
															1891
														],
														"declarations": [
															{
																"constant": false,
																"id": 1891,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "679:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1912,
																"src": "671:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1890,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "671:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1892,
														"nodeType": "VariableDeclarationStatement",
														"src": "671:11:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "754:69:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "773:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "784:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "796:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "800:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "792:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "792:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "780:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "780:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1884,
																"isOffset": false,
																"isSlot": false,
																"src": "784:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1875,
																"isOffset": false,
																"isSlot": false,
																"src": "800:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1891,
																"isOffset": false,
																"isSlot": false,
																"src": "773:3:9",
																"valueSize": 1
															}
														],
														"id": 1893,
														"nodeType": "InlineAssembly",
														"src": "745:78:9"
													},
													{
														"body": {
															"id": 1908,
															"nodeType": "Block",
															"src": "850:275:9",
															"statements": [
																{
																	"expression": {
																		"id": 1896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "869:5:9",
																		"subExpression": {
																			"id": 1895,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1891,
																			"src": "869:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1897,
																	"nodeType": "ExpressionStatement",
																	"src": "869:5:9"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "954:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "985:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "999:5:9"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1006:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "995:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "995:14:9"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "1011:8:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "990:4:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "990:30:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "977:7:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "977:44:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "977:44:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1863,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1011:8:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1891,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "985:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1869,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "999:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1898,
																	"nodeType": "InlineAssembly",
																	"src": "945:95:9"
																},
																{
																	"expression": {
																		"id": 1901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1899,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1869,
																			"src": "1058:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1067:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1058:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1902,
																	"nodeType": "ExpressionStatement",
																	"src": "1058:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1903,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1869,
																			"src": "1092:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1101:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1092:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1907,
																	"nodeType": "IfStatement",
																	"src": "1088:21:9",
																	"trueBody": {
																		"id": 1906,
																		"nodeType": "Break",
																		"src": "1104:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1909,
														"nodeType": "WhileStatement",
														"src": "837:288:9"
													},
													{
														"expression": {
															"id": 1910,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "1146:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1873,
														"id": 1911,
														"nodeType": "Return",
														"src": "1139:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "357:92:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "464:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "481:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "473:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:9"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "511:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "511:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:15:9"
									},
									"scope": 2084,
									"src": "455:716:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "1346:105:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1926,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1917,
																			"src": "1388:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1396:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1388:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1406:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1388:20:9",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1400:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1935,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1917,
																					"src": "1434:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1933,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1855,
																					"src": "1419:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$1855_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1430:3:9",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1854,
																				"src": "1419:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1419:21:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1932,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1914,
																			1942
																		],
																		"referencedDeclaration": 1914,
																		"src": "1410:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1410:31:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1924,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1371:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:71:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1364:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1922,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1364:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1364:79:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1921,
												"id": 1940,
												"nodeType": "Return",
												"src": "1357:86:9"
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "1179:91:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1285:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1301:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "1294:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1916,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:14:9"
									},
									"returnParameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "1331:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1919,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1331:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1330:15:9"
									},
									"scope": 2084,
									"src": "1276:175:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "1635:104:9",
										"statements": [
											{
												"id": 1960,
												"nodeType": "UncheckedBlock",
												"src": "1646:86:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1951,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1945,
																	"src": "1690:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1954,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1945,
																				"src": "1709:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1952,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1722,
																				"src": "1697:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1722_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1702:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1682,
																			"src": "1697:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1697:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1718:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1697:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1950,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1962,
																	2038,
																	2058
																],
																"referencedDeclaration": 2038,
																"src": "1678:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1678:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1949,
														"id": 1959,
														"nodeType": "Return",
														"src": "1671:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1943,
										"nodeType": "StructuredDocumentation",
										"src": "1459:96:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1570:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1590:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "1582:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1581:15:9"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "1620:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1947,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1620:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:15:9"
									},
									"scope": 2084,
									"src": "1561:178:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "1957:357:9",
										"statements": [
											{
												"assignments": [
													1973
												],
												"declarations": [
													{
														"constant": false,
														"id": 1973,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1981:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "1968:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1972,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1968:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1982,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2000:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1977,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1967,
																	"src": "2004:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2000:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2013:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2000:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1990:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1974,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1994:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1968:47:9"
											},
											{
												"expression": {
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1983,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "2026:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1985,
														"indexExpression": {
															"hexValue": "30",
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2033:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2026:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2038:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2026:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "2026:15:9"
											},
											{
												"expression": {
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1989,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "2052:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1991,
														"indexExpression": {
															"hexValue": "31",
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2059:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2052:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2064:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2052:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1994,
												"nodeType": "ExpressionStatement",
												"src": "2052:15:9"
											},
											{
												"body": {
													"id": 2023,
													"nodeType": "Block",
													"src": "2123:86:9",
													"statements": [
														{
															"expression": {
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2009,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "2138:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2011,
																	"indexExpression": {
																		"id": 2010,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "2145:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2138:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2012,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "2150:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2016,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2013,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1965,
																			"src": "2159:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2167:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2159:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2150:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2138:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2018,
															"nodeType": "ExpressionStatement",
															"src": "2138:33:9"
														},
														{
															"expression": {
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2019,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1965,
																	"src": "2186:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2196:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2186:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2022,
															"nodeType": "ExpressionStatement",
															"src": "2186:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2003,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "2111:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2115:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2111:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2024,
												"initializationExpression": {
													"assignments": [
														1996
													],
													"declarations": [
														{
															"constant": false,
															"id": 1996,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2091:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2024,
															"src": "2083:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1995,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2083:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2002,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2095:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1998,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1967,
																"src": "2099:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2095:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2108:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2095:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2083:26:9"
												},
												"loopExpression": {
													"expression": {
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2118:3:9",
														"subExpression": {
															"id": 2006,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "2120:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2008,
													"nodeType": "ExpressionStatement",
													"src": "2118:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2078:131:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2026,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "2227:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2236:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2227:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2239:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2025,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2219:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2219:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2031,
												"nodeType": "ExpressionStatement",
												"src": "2219:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2034,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "2299:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2292:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2032,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2292:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1971,
												"id": 2036,
												"nodeType": "Return",
												"src": "2285:21:9"
											}
										]
									},
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "1747:114:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1876:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1896:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "1888:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1911:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "1903:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:31:9"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "1942:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1969,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1942:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:15:9"
									},
									"scope": 2084,
									"src": "1867:447:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "2544:78:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2051,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2041,
																			"src": "2590:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2582:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2049,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2582:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2582:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2574:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2047,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2574:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2574:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2054,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "2598:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2046,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1962,
															2038,
															2058
														],
														"referencedDeclaration": 2038,
														"src": "2562:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2045,
												"id": 2056,
												"nodeType": "Return",
												"src": "2555:59:9"
											}
										]
									},
									"documentation": {
										"id": 2039,
										"nodeType": "StructuredDocumentation",
										"src": "2322:143:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2480:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2500:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "2492:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2491:14:9"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "2529:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2043,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2529:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2528:15:9"
									},
									"scope": 2084,
									"src": "2471:151:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2082,
										"nodeType": "Block",
										"src": "2782:68:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2071,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2061,
																		"src": "2816:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2810:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2069,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2810:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2810:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2068,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2800:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2800:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2077,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2063,
																		"src": "2839:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2833:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2075,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2833:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2833:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2074,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2823:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2823:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2800:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2067,
												"id": 2081,
												"nodeType": "Return",
												"src": "2793:49:9"
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "2630:68:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2713:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2733:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "2719:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2719:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2750:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "2736:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2062,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2736:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:34:9"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "2776:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2065,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2776:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2775:6:9"
									},
									"scope": 2084,
									"src": "2704:146:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2085,
							"src": "221:2632:9",
							"usedErrors": []
						}
					],
					"src": "104:2749:9"
				},
				"id": 9
			},
			"src/utils/AccessControl.sol": {
				"ast": {
					"absolutePath": "src/utils/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							2400
						],
						"Context": [
							2422
						],
						"ERC165": [
							2446
						],
						"IAccessControl": [
							263
						],
						"IERC165": [
							275
						],
						"Math": [
							1722
						],
						"SignedMath": [
							1855
						],
						"Strings": [
							2084
						]
					},
					"id": 2401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2086,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:10"
						},
						{
							"absolutePath": "src/interfaces/IAccessControl.sol",
							"file": "../interfaces/IAccessControl.sol",
							"id": 2087,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2401,
							"sourceUnit": 264,
							"src": "138:42:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/utils/Context.sol",
							"file": "./Context.sol",
							"id": 2088,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2401,
							"sourceUnit": 2423,
							"src": "182:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/libraries/Strings.sol",
							"file": "../libraries/Strings.sol",
							"id": 2089,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2401,
							"sourceUnit": 2085,
							"src": "207:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/utils/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 2090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2401,
							"sourceUnit": 2447,
							"src": "243:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2092,
										"name": "Context",
										"nameLocations": [
											"1893:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2422,
										"src": "1893:7:10"
									},
									"id": 2093,
									"nodeType": "InheritanceSpecifier",
									"src": "1893:7:10"
								},
								{
									"baseName": {
										"id": 2094,
										"name": "IAccessControl",
										"nameLocations": [
											"1902:14:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 263,
										"src": "1902:14:10"
									},
									"id": 2095,
									"nodeType": "InheritanceSpecifier",
									"src": "1902:14:10"
								},
								{
									"baseName": {
										"id": 2096,
										"name": "ERC165",
										"nameLocations": [
											"1918:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2446,
										"src": "1918:6:10"
									},
									"id": 2097,
									"nodeType": "InheritanceSpecifier",
									"src": "1918:6:10"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2091,
								"nodeType": "StructuredDocumentation",
								"src": "269:1587:10",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 2400,
							"linearizedBaseContracts": [
								2400,
								2446,
								275,
								263,
								2422
							],
							"name": "AccessControl",
							"nameLocation": "1876:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 2104,
									"members": [
										{
											"constant": false,
											"id": 2101,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1984:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 2104,
											"src": "1959:32:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 2100,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 2098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1959:24:10",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2103,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2010:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 2104,
											"src": "2002:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2102,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2002:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1939:8:10",
									"nodeType": "StructDefinition",
									"scope": 2400,
									"src": "1932:95:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2109,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2072:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 2400,
									"src": "2035:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2104_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 2108,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2105,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2043:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2035:28:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2104_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2107,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2106,
												"name": "RoleData",
												"nameLocations": [
													"2054:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2104,
												"src": "2054:8:10"
											},
											"referencedDeclaration": 2104,
											"src": "2054:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$2104_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 2112,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2111:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 2400,
									"src": "2087:49:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2110,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2087:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 2111,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2132:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "2567:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2118,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2115,
															"src": "2589:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2117,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2177,
															2216
														],
														"referencedDeclaration": 2177,
														"src": "2578:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2120,
												"nodeType": "ExpressionStatement",
												"src": "2578:16:10"
											},
											{
												"id": 2121,
												"nodeType": "PlaceholderStatement",
												"src": "2605:1:10"
											}
										]
									},
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "2145:384:10",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 2123,
									"name": "onlyRole",
									"nameLocation": "2544:8:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2561:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "2553:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2114,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2552:14:10"
									},
									"src": "2535:79:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2445
									],
									"body": {
										"id": 2144,
										"nodeType": "Block",
										"src": "2777:113:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2132,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "2795:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2134,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 263,
																		"src": "2815:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$263_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$263_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 2133,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2810:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2810:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$263",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2831:11:10",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2810:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2795:47:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2140,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "2870:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2138,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2846:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$2400_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:17:10",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2445,
															"src": "2846:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2846:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2795:87:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2131,
												"id": 2143,
												"nodeType": "Return",
												"src": "2788:94:10"
											}
										]
									},
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "2622:58:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2695:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2128,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2753:8:10"
									},
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2720:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "2713:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2125,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2713:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:20:10"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "2771:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:10"
									},
									"scope": 2400,
									"src": "2686:204:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										230
									],
									"body": {
										"id": 2163,
										"nodeType": "Block",
										"src": "3074:55:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 2156,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "3092:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2104_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 2158,
															"indexExpression": {
																"id": 2157,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2148,
																"src": "3099:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3092:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$2104_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 2159,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3105:7:10",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2101,
														"src": "3092:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2161,
													"indexExpression": {
														"id": 2160,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "3113:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3092:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2155,
												"id": 2162,
												"nodeType": "Return",
												"src": "3085:36:10"
											}
										]
									},
									"documentation": {
										"id": 2146,
										"nodeType": "StructuredDocumentation",
										"src": "2898:78:10",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 2164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2991:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3050:8:10"
									},
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3007:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "2999:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2147,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2999:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3021:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "3013:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2998:31:10"
									},
									"returnParameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "3068:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3068:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3067:6:10"
									},
									"scope": 2400,
									"src": "2982:147:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "3489:49:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2171,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "3511:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2172,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "3517:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3517:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2170,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2177,
															2216
														],
														"referencedDeclaration": 2216,
														"src": "3500:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3500:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2175,
												"nodeType": "ExpressionStatement",
												"src": "3500:30:10"
											}
										]
									},
									"documentation": {
										"id": 2165,
										"nodeType": "StructuredDocumentation",
										"src": "3137:290:10",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3442:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3461:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "3453:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2166,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3452:14:10"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3489:0:10"
									},
									"scope": 2400,
									"src": "3433:105:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2215,
										"nodeType": "Block",
										"src": "3901:419:10",
										"statements": [
											{
												"condition": {
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3916:23:10",
													"subExpression": {
														"arguments": [
															{
																"id": 2186,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2180,
																"src": "3925:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2187,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "3931:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2185,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "3917:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 2188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3917:22:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2214,
												"nodeType": "IfStatement",
												"src": "3912:401:10",
												"trueBody": {
													"id": 2213,
													"nodeType": "Block",
													"src": "3941:372:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 2195,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4053:25:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 2198,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2182,
																								"src": "4125:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 2196,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2084,
																								"src": "4105:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2084_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 2197,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4113:11:10",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2058,
																							"src": "4105:19:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 2199,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4105:28:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 2200,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4160:19:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 2205,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2180,
																										"src": "4234:4:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 2204,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4226:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 2203,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4226:7:10",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2206,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4226:13:10",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 2207,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4241:2:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 2201,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2084,
																								"src": "4206:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2084_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 2202,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4214:11:10",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2038,
																							"src": "4206:19:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 2208,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4206:38:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 2193,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4010:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 2194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4014:12:10",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4010:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 2209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4010:257:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 2192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3981:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 2191,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3981:6:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3981:305:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2190,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3956:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3956:345:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2212,
															"nodeType": "ExpressionStatement",
															"src": "3956:345:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2178,
										"nodeType": "StructuredDocumentation",
										"src": "3546:276:10",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 2216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3837:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3856:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "3848:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3870:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "3862:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3862:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:31:10"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3901:0:10"
									},
									"scope": 2400,
									"src": "3828:492:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										238
									],
									"body": {
										"id": 2230,
										"nodeType": "Block",
										"src": "4592:48:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2225,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "4610:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2104_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 2227,
														"indexExpression": {
															"id": 2226,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2219,
															"src": "4617:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4610:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$2104_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4623:9:10",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2103,
													"src": "4610:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2224,
												"id": 2229,
												"nodeType": "Return",
												"src": "4603:29:10"
											}
										]
									},
									"documentation": {
										"id": 2217,
										"nodeType": "StructuredDocumentation",
										"src": "4328:175:10",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 2231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4518:12:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2221,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4565:8:10"
									},
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4539:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "4531:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4530:14:10"
									},
									"returnParameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "4583:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4583:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4582:9:10"
									},
									"scope": 2400,
									"src": "4509:131:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										246
									],
									"body": {
										"id": 2250,
										"nodeType": "Block",
										"src": "5053:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2246,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "5075:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2247,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "5081:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2245,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2368,
														"src": "5064:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5064:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2249,
												"nodeType": "ExpressionStatement",
												"src": "5064:25:10"
											}
										]
									},
									"documentation": {
										"id": 2232,
										"nodeType": "StructuredDocumentation",
										"src": "4648:296:10",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 2251,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 2241,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "5046:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2240,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "5033:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5033:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2243,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2239,
												"name": "onlyRole",
												"nameLocations": [
													"5024:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2123,
												"src": "5024:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5024:28:10"
										}
									],
									"name": "grantRole",
									"nameLocation": "4959:9:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2238,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5015:8:10"
									},
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4977:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "4969:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2233,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4969:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4991:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "4983:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:31:10"
									},
									"returnParameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5053:0:10"
									},
									"scope": 2400,
									"src": "4950:147:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										254
									],
									"body": {
										"id": 2270,
										"nodeType": "Block",
										"src": "5494:45:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2266,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2254,
															"src": "5517:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2267,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2256,
															"src": "5523:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2265,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "5505:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2269,
												"nodeType": "ExpressionStatement",
												"src": "5505:26:10"
											}
										]
									},
									"documentation": {
										"id": 2252,
										"nodeType": "StructuredDocumentation",
										"src": "5105:279:10",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 2271,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 2261,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2254,
															"src": "5487:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2260,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "5474:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 2262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5474:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2263,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2259,
												"name": "onlyRole",
												"nameLocations": [
													"5465:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2123,
												"src": "5465:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5465:28:10"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5399:10:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2258,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5456:8:10"
									},
									"parameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5418:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "5410:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5410:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5432:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "5424:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5424:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5409:31:10"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5494:0:10"
									},
									"scope": 2400,
									"src": "5390:149:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										262
									],
									"body": {
										"id": 2293,
										"nodeType": "Block",
										"src": "6171:141:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2281,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "6190:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2282,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "6201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6201:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6190:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6215:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 2280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6182:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6182:83:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2287,
												"nodeType": "ExpressionStatement",
												"src": "6182:83:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2289,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2274,
															"src": "6290:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2290,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2276,
															"src": "6296:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2288,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "6278:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6278:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2292,
												"nodeType": "ExpressionStatement",
												"src": "6278:26:10"
											}
										]
									},
									"documentation": {
										"id": 2272,
										"nodeType": "StructuredDocumentation",
										"src": "5547:541:10",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 2294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6103:12:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2278,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6162:8:10"
									},
									"parameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6124:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "6116:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2273,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6116:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6138:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "6130:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6130:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6115:31:10"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6171:0:10"
									},
									"scope": 2400,
									"src": "6094:218:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2307,
										"nodeType": "Block",
										"src": "7087:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2303,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "7109:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2304,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2299,
															"src": "7115:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2302,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2368,
														"src": "7098:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7098:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2306,
												"nodeType": "ExpressionStatement",
												"src": "7098:25:10"
											}
										]
									},
									"documentation": {
										"id": 2295,
										"nodeType": "StructuredDocumentation",
										"src": "6320:693:10",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 2308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "7028:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7047:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "7039:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2296,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7039:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7061:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "7053:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7053:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7038:31:10"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7087:0:10"
									},
									"scope": 2400,
									"src": "7019:112:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2335,
										"nodeType": "Block",
										"src": "7336:178:10",
										"statements": [
											{
												"assignments": [
													2317
												],
												"declarations": [
													{
														"constant": false,
														"id": 2317,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7355:17:10",
														"nodeType": "VariableDeclaration",
														"scope": 2335,
														"src": "7347:25:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2316,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7347:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2321,
												"initialValue": {
													"arguments": [
														{
															"id": 2319,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2311,
															"src": "7388:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2318,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "7375:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7375:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7347:46:10"
											},
											{
												"expression": {
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2322,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7404:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2104_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 2324,
															"indexExpression": {
																"id": 2323,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2311,
																"src": "7411:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7404:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$2104_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 2325,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7417:9:10",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2103,
														"src": "7404:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2326,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2313,
														"src": "7429:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7404:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2328,
												"nodeType": "ExpressionStatement",
												"src": "7404:34:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2330,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2311,
															"src": "7471:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2331,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2317,
															"src": "7477:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2332,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "7496:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2329,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "7454:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7454:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2334,
												"nodeType": "EmitStatement",
												"src": "7449:57:10"
											}
										]
									},
									"documentation": {
										"id": 2309,
										"nodeType": "StructuredDocumentation",
										"src": "7139:118:10",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 2336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7272:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7294:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "7286:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7286:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7308:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "7300:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7300:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7285:33:10"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7336:0:10"
									},
									"scope": 2400,
									"src": "7263:251:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "7759:170:10",
										"statements": [
											{
												"condition": {
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7774:23:10",
													"subExpression": {
														"arguments": [
															{
																"id": 2345,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "7783:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2346,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "7789:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2344,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "7775:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7775:22:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2366,
												"nodeType": "IfStatement",
												"src": "7770:152:10",
												"trueBody": {
													"id": 2365,
													"nodeType": "Block",
													"src": "7799:123:10",
													"statements": [
														{
															"expression": {
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2349,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2109,
																				"src": "7814:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2104_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 2351,
																			"indexExpression": {
																				"id": 2350,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2339,
																				"src": "7821:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7814:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$2104_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7827:7:10",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2101,
																		"src": "7814:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2354,
																	"indexExpression": {
																		"id": 2353,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "7835:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7814:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7846:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7814:36:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2357,
															"nodeType": "ExpressionStatement",
															"src": "7814:36:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2359,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "7882:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2360,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "7888:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2361,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2412,
																			"src": "7897:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7897:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2358,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7870:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7870:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2364,
															"nodeType": "EmitStatement",
															"src": "7865:45:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2337,
										"nodeType": "StructuredDocumentation",
										"src": "7522:163:10",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7700:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7719:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "7711:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7711:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7733:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "7725:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7725:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7710:31:10"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7759:0:10"
									},
									"scope": 2400,
									"src": "7691:238:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2398,
										"nodeType": "Block",
										"src": "8178:170:10",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 2377,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "8201:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "8207:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2376,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2164,
														"src": "8193:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8193:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2397,
												"nodeType": "IfStatement",
												"src": "8189:152:10",
												"trueBody": {
													"id": 2396,
													"nodeType": "Block",
													"src": "8217:124:10",
													"statements": [
														{
															"expression": {
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2380,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2109,
																				"src": "8232:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2104_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 2382,
																			"indexExpression": {
																				"id": 2381,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2371,
																				"src": "8239:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8232:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$2104_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 2383,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8245:7:10",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2101,
																		"src": "8232:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2385,
																	"indexExpression": {
																		"id": 2384,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "8253:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8232:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8264:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8232:37:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2388,
															"nodeType": "ExpressionStatement",
															"src": "8232:37:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2390,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2371,
																		"src": "8301:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2391,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "8307:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2392,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2412,
																			"src": "8316:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8316:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2389,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "8289:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8289:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2395,
															"nodeType": "EmitStatement",
															"src": "8284:45:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "7937:166:10",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 2399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8118:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8138:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "8130:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2370,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8130:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8152:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "8144:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8144:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8129:31:10"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8178:0:10"
									},
									"scope": 2400,
									"src": "8109:239:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2401,
							"src": "1858:6493:10",
							"usedErrors": []
						}
					],
					"src": "111:8240:10"
				},
				"id": 10
			},
			"src/utils/Context.sol": {
				"ast": {
					"absolutePath": "src/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2422
						]
					},
					"id": 2423,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2402,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2403,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2422,
							"linearizedBaseContracts": [
								2422
							],
							"name": "Context",
							"nameLocation": "641:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "718:36:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2408,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2407,
												"id": 2410,
												"nodeType": "Return",
												"src": "729:17:11"
											}
										]
									},
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 2422,
									"src": "656:98:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2420,
										"nodeType": "Block",
										"src": "829:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2417,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2416,
												"id": 2419,
												"nodeType": "Return",
												"src": "840:15:11"
											}
										]
									},
									"id": 2421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:11"
									},
									"returnParameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "813:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:11"
									},
									"scope": 2422,
									"src": "762:101:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2423,
							"src": "623:243:11",
							"usedErrors": []
						}
					],
					"src": "89:777:11"
				},
				"id": 11
			},
			"src/utils/ERC165.sol": {
				"ast": {
					"absolutePath": "src/utils/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2446
						],
						"IERC165": [
							275
						]
					},
					"id": 2447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2424,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:12"
						},
						{
							"absolutePath": "src/interfaces/IERC165.sol",
							"file": "../interfaces/IERC165.sol",
							"id": 2425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2447,
							"sourceUnit": 276,
							"src": "129:35:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2427,
										"name": "IERC165",
										"nameLocations": [
											"787:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 275,
										"src": "787:7:12"
									},
									"id": 2428,
									"nodeType": "InheritanceSpecifier",
									"src": "787:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2426,
								"nodeType": "StructuredDocumentation",
								"src": "168:589:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2446,
							"linearizedBaseContracts": [
								2446,
								275
							],
							"name": "ERC165",
							"nameLocation": "777:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										274
									],
									"body": {
										"id": 2444,
										"nodeType": "Block",
										"src": "957:66:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2437,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2431,
														"src": "975:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2439,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "995:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$275_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$275_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2438,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "990:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "990:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$275",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1004:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "990:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "975:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2436,
												"id": 2443,
												"nodeType": "Return",
												"src": "968:47:12"
											}
										]
									},
									"documentation": {
										"id": 2429,
										"nodeType": "StructuredDocumentation",
										"src": "802:58:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "875:17:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "933:8:12"
									},
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "900:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "893:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2430,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "893:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "892:20:12"
									},
									"returnParameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "951:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "951:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:6:12"
									},
									"scope": 2446,
									"src": "866:157:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2447,
							"src": "759:267:12",
							"usedErrors": []
						}
					],
					"src": "102:924:12"
				},
				"id": 12
			}
		}
	}
}